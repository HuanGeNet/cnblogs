<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>博客园-点滴记忆</title><link>http://www.cnblogs.com/HGNET/</link><description>爱编程，爱生活，爱分享。
I am a coder.
你知道的越多，你不知道的越多</description><language>zh-cn</language><lastBuildDate>Sat, 14 Dec 2019 12:22:19 GMT</lastBuildDate><pubDate>Sat, 14 Dec 2019 12:22:19 GMT</pubDate><ttl>60</ttl><item><title>人工智能发展史-从图灵测试到大数据</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040270.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 14 Dec 2019 09:20:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040270.html</guid><description><![CDATA[<p>我一直很好奇人工智能是如何提出来的，它背后有什么样的故事，在人工智能发展的这60年的时间中，又经历了什么？为什么现在才是人工智能的爆发点，未来人工智能又将走向何处？带着这样的问题我读了吴军博士的《智能时代》这本书，打开了我对人工智能的了解，这篇文章主要内容也来自于这本书。</p>
<p>我们这代人对人工智能的关注，来自于2016年AlphaGo大战世界著名围棋选手李世民，在比赛之前各方关注度非常高，国内各方媒体争相报道，预测这场比赛的结果，人们好奇人工智能现在智能到什么程度以及计算机如何和人下围棋，最终AlphaGo以4：1胜了李世明，大家都在感慨人工智能时代即将来临。仅仅过了一年，2017年5月27日AlphaGo的2.0版本3:0战胜围棋世界排名第一的柯洁九段，从此在AlphaGo面前已无人类对手。</p>
<p>计算机之所以能够战胜人类，是因为机器获得智能的方式和人类不同，它不是靠逻辑推理，而是靠大数据和算法。Google使用了几十万盘围棋高手之间的对弈的数据来训练AlphaGo，这是它获得所谓&ldquo;智能&rdquo;的原因。在计算方面，Google使用了几十万台服务器来训练AlphaGo下棋模型，并让不同的AlphaGo相互对弈上千万盘。第二个关键技术是启发式搜索算法-蒙特卡洛树搜索算法（英语：Monte Carlo tree search；简称：MCTS），它能将搜索的空间限制在非常有限的范围内，保证计算机能够快速找到好的下法。由此可见，下围棋这个看似智能型的问题，从本质上讲，是一个大数据和算法的问题。</p>
<p>说到人工智能，就不得不提计算机届的一个传奇人物：阿兰.图灵博士。1950年，图灵在《思想》（mind）杂志上发表了一篇《计算的机器和智能》的论文。在论文中，图灵既没有讲计算机怎样才能获得智能，也没有提出如何解决复杂问题的智能方法，知识提出了一个验证机器有无智能的的判别方法。</p>
<p><img src="http://www.ityouknow.com/assets/images/2017/reading/TuringTest.png" alt="" /></p>
<p>让一台机器和一个人坐在幕后，让一个裁判同时与幕后的人和机器进行交流，如果这个裁判无法判断自己交流的对象是人还是机器，就说明这台机器有了和人同等的智能。就是大名鼎鼎的图灵测试。后来，计算机科学家对此进行了补充，如果计算机实现了下面几件事情中的一件，就可以认为它有图灵所说的那种智能：</p>
<ul>
<li>1、语音识别</li>
<li>2、机器翻译</li>
<li>3、文本的自动摘要或者写作</li>
<li>4、战胜人类的国际象棋冠军</li>
<li>5、自动回答问题</li>
</ul>
<p>今天，计算机已经做到了上述的这几件事情，甚至还超额完成了任务，比如现在的围棋比国际象棋要高出6-8个数量级，当然，人类走到这一步并非一帆风顺，而是走了几十年的弯路。</p>
<p>&nbsp;</p>
<h2 id="人工智能的诞生1943---1956">人工智能的诞生：1943 - 1956</h2>
<p>在20世纪40年代和50年代，来自不同领域（数学，心理学，工程学，经济学和政治学）的一批科学家开始探讨制造人工大脑的可能性。1956年，人工智能被确立为一门学科。</p>
<p>1956年的夏天，香农和一群年轻的学者在达特茅斯学院召开了一次头脑风暴式研讨会。会议的组织者是马文&middot;闵斯基，约翰&middot;麦卡锡和另两位资深科学家Claude Shannon以及Nathan Rochester，后者来自IBM。与会者包括Ray Solomonoff，Oliver Selfridge，Trenchard More，Arthur Samuel，Newell和Simon，他们中的每一位都将在AI研究的第一个十年中作出重要贡献。</p>
<p>会议虽然叫做&ldquo;达特茅斯夏季人工智能研究会议&rdquo;，其实它不同于今天我们召开几天的学术会议，因为一来没有什么可以报告的科研成果，二来这个会议持续了一个暑假。事实上，这是一次头脑风暴式的讨论会，这10位年轻的学者讨论的是当时计算机尚未解决，甚至尚未开展研究的问题，包括人工智能、自然语言处理和神经网络等。</p>
<p>会上纽厄尔和西蒙讨论了&ldquo;逻辑理论家&rdquo;，而麦卡锡则说服与会者接受&ldquo;人工智能&rdquo;一词作为本领域的名称。1956年达特矛斯会议上人工智能的名称和任务得以确定，同时出现了最初的成就和最早的一批研究者，因此这一事件被广泛承认为人工智能诞生的标志。</p>
<p><img src="http://www.ityouknow.com/assets/images/2017/reading/Dartmouth_College_campus_60.jpeg" alt="" /><br />60年前的达特茅斯大学</p>
<p>&nbsp;</p>
<h2 id="黄金年代1956---1974">黄金年代：1956 - 1974</h2>
<p>达特茅斯会议之后的数年是大发现的时代。对许多人而言，这一阶段开发出的程序堪称神奇：计算机可以解决代数应用题，证明几何定理，学习和使用英语。当时大多数人几乎无法相信机器能够如此&ldquo;智能&rdquo;。研究者们在私下的交流和公开发表的论文中表达出相当乐观的情绪，认为具有完全智能的机器将在二十年内出现。ARPA（国防高等研究计划署）等政府机构向这一新兴领域投入了大笔资金。</p>
<p>第一代AI研究者们非常乐观，曾作出了如下预言:</p>
<ul>
<li>1958年，H. A. Simon，Allen Newell：&ldquo;十年之内，数字计算机将成为国际象棋世界冠军。&rdquo; &ldquo;十年之内，数字计算机将发现并证明一个重要的数学定理。&rdquo;</li>
<li>1965年，H. A. Simon：&ldquo;二十年内，机器将能完成人能做到的一切工作。&rdquo;</li>
<li>1967年，Marvin Minsky：&ldquo;一代之内&hellip;&hellip;创造&lsquo;人工智能&rsquo;的问题将获得实质上的解决。&rdquo;</li>
<li>1970年，Marvin Minsky：&ldquo;在三到八年的时间里我们将得到一台具有人类平均智能的机器。&rdquo;</li>

</ul>
<p>早期，人工智能使用传统的人工智能方法进行研究，什么是传统的人工智能研究呢？简单的讲，就是首先了解人类是如何产生智能的，然后让计算机按照人的思路去做。因此在语音识别、机器翻译等领域迟迟不能突破，人工智能研究陷入低谷。<br /><br /></p>
<h2 id="第一次ai低谷1974---1980">第一次AI低谷：1974 - 1980</h2>
<p>由于人工智能研究者们对项目难度评估不足，这除了导致承诺无法兑现外，还让人们当初的乐观期望遭到严重打击。到了70年代，人工智能开始遭遇批评，研究经费也被转移到那些目标明确的特定项目上。</p>
<p>1972年康奈尔大学的教授弗雷德.贾里尼克（Fred Jelinek)被要求到IBM做语音识别。在之前各个大学和研究这个问题已经花了20多年的时间，主流的研究方法有两个特点，一个是让计算机尽可能地模拟人的发音特点和听觉特征，一个是让计算机尽可能的方法理解人所讲的完整的语句。对于前一项研究，有被称为特征提取，后一项的研究大都使用传统人工智能的方法，它基于规则和语义。</p>
<p>贾里尼克任务，人的大脑是一个信息源，从思考到找到合适的语句，再通过发音说出来，是一个编码的过程，经过媒介传播到耳朵，是一个解码的过程。既然是一个典型的通讯问题，那就可以用解决通讯方法来解决问题，为此贾里尼克用两个数据模型（马尔科夫模型）分别描述信源和信道。然后使用大量的语音数据来训练。最后，贾里尼克团队花了4年团队，将语音识别从过去的70%提高到90%。后来人们尝试使用此方法来解决其他智能问题，但因为缺少数据，结果不太理想。</p>
<p>在当时，由于计算机性能的瓶颈、计算复杂性的指数级增长、数据量缺失等问题，一些难题看上去好像完全找不到答案。比如像今天已经比较常见的机器视觉功能在当时就不可能找到一个足够大的数据库来支撑程序去学习，机器无法吸收足够的数据量自然也就谈不上视觉方面的智能化。</p>
<p>项目的停滞不但让批评者有机可乘&mdash;&mdash;1973年Lighthill针对英国人工智能研究状况的报告批评了人工智能在实现其&ldquo;宏伟目标&rdquo;上的完全失败，也影响到了项目资金的流向。人工智能遭遇了6年左右的低谷。<br /><br /></p>
<h2 id="繁荣1980---1987">繁荣：1980 - 1987</h2>
<p>在80年代，一类名为&ldquo;专家系统&rdquo;的AI程序开始为全世界的公司所采纳，而&ldquo;知识处理&rdquo;成为了主流AI研究的焦点。1981年，日本经济产业省拨款八亿五千万美元支持第五代计算机项目。其目标是造出能够与人对话，翻译语言，解释图像，并且像人一样推理的机器。</p>
<p>受到日本刺激，其他国家纷纷作出响应。英国开始了耗资三亿五千万英镑的Alvey工程。美国一个企业协会组织了MCC（Microelectronics and Computer Technology Corporation，微电子与计算机技术集团），向AI和信息技术的大规模项目提供资助。DARPA也行动起来，组织了战略计算促进会（Strategic Computing Initiative），其1988年向AI的投资是1984年的三倍。人工智能又迎来了大发展。</p>
<p><img src="http://www.ityouknow.com/assets/images/2017/reading/Symbolics3640_Modified.jpg" alt="" /><br />早期的专家系统Symbolics 3640</p>
<p>专家系统是一种程序，能够依据一组从专门知识中推演出的逻辑规则在某一特定领域回答或解决问题。最早的示例由Edward Feigenbaum和他的学生们开发。1965年起设计的Dendral能够根据分光计读数分辨混合物。1972年设计的MYCIN能够诊断血液传染病。它们展示了这一方法的威力。专家系统仅限于一个很小的知识领域，从而避免了常识问题；其简单的设计又使它能够较为容易地编程实现或修改。总之，实践证明了这类程序的实用性。直到现在AI才开始变得实用起来。</p>
<p>专家系统的能力来自于它们存储的专业知识。这是70年代以来AI研究的一个新方向。Pamela McCorduck在书中写道，&ldquo;不情愿的AI研究者们开始怀疑，因为它违背了科学研究中对最简化的追求。智能可能需要建立在对分门别类的大量知识的多种处理方法之上。&rdquo; &ldquo;70年代的教训是智能行为与知识处理关系非常密切。有时还需要在特定任务领域非常细致的知识。&rdquo;知识库系统和知识工程成为了80年代AI研究的主要方向。</p>
<p>1982年，物理学家John Hopfield证明一种新型的神经网络（现被称为&ldquo;Hopfield网络&rdquo;）能够用一种全新的方式学习和处理信息。大约在同时（早于Paul Werbos），David Rumelhart推广了反向传播算法，一种神经网络训练方法。这些发现使1970年以来一直遭人遗弃的联结主义重获新生。<br /><br /></p>
<h2 id="第二次ai低谷1987---1993">第二次AI低谷：1987 - 1993</h2>
<p>&ldquo;AI之冬&rdquo;一词由经历过1974年经费削减的研究者们创造出来。他们注意到了对专家系统的狂热追捧，预计不久后人们将转向失望。事实被他们不幸言中：从80年代末到90年代初，AI遭遇了一系列财政问题。</p>
<p>变天的最早征兆是1987年AI硬件市场需求的突然下跌。Apple和IBM生产的台式机性能不断提升，到1987年时其性能已经超过了Symbolics和其他厂家生产的昂贵的Lisp机。老产品失去了存在的理由：一夜之间这个价值五亿美元的产业土崩瓦解。</p>
<p>XCON等最初大获成功的专家系统维护费用居高不下。它们难以升级，难以使用，脆弱（当输入异常时会出现莫名其妙的错误），成了以前已经暴露的各种各样的问题的牺牲品。专家系统的实用性仅仅局限于某些特定情景。到了80年代晚期，战略计算促进会大幅削减对AI的资助。DARPA的新任领导认为AI并非&ldquo;下一个浪潮&rdquo;，拨款将倾向于那些看起来更容易出成果的项目。</p>
<p>1991年人们发现十年前日本人宏伟的&ldquo;第五代工程&rdquo;并没有实现。事实上其中一些目标，比如&ldquo;与人展开交谈&rdquo;，直到2010年也没有实现。与其他AI项目一样，期望比真正可能实现的要高得多。<br /><br /></p>
<h2 id="走在正确的路上1993---2005">走在正确的路上：1993 - 2005</h2>
<p>现已年过半百的AI终于实现了它最初的一些目标。它已被成功地用在技术产业中，不过有时是在幕后。这些成就有的归功于计算机性能的提升，有的则是在高尚的科学责任感驱使下对特定的课题不断追求而获得的。不过，至少在商业领域里AI的声誉已经不如往昔了。</p>
<p>&ldquo;实现人类水平的智能&rdquo;这一最初的梦想曾在60年代令全世界的想象力为之着迷，其失败的原因至今仍众说纷纭。各种因素的合力将AI拆分为各自为战的几个子领域，有时候它们甚至会用新名词来掩饰&ldquo;人工智能&rdquo;这块被玷污的金字招牌。AI比以往的任何时候都更加谨慎，却也更加成功。</p>
<p>第一次让全世界感到计算机智能水平有了质的飞跃实在1966年，IBM的超级计算机深蓝大战人类国际象棋冠军卡斯伯罗夫，卡斯伯罗夫是世界上最富传奇色彩的国际象棋世界冠军，这次比赛最后以4：2比分战胜了深蓝。对于这次比赛媒体认为深蓝虽然输了比赛，但这毕竟是国际象棋上计算机第一次战胜世界冠军两局。时隔一年后，改进后的深蓝卷土重来，以3.5：2.5的比分战胜了斯伯罗夫。自从1997年以后，计算机下棋的本领越来越高，进步超过人的想象。到了现在，棋类游戏中计算机已经可以完败任何人类。</p>
<p>深蓝实际上收集了世界上百位国际大师的对弈棋谱，供计算机学习。这样一来，深蓝其实看到了名家们在各种局面下的走法。当然深蓝也会考虑卡斯伯罗夫可能采用的走法，对不同的状态给出可能性评估，然后根据对方下一步走法对盘面的影响，核实这些可能性的估计，找到一个最有利自己的状态，并走出这步棋。因此深蓝团队其实把一个机器智能问题变成了一个大数据和大量计算的问题。</p>
<p><img src="http://www.ityouknow.com/assets/images/2017/reading/Deep_Blue.jpg" alt="" /><br />IBM&ldquo;深蓝&rdquo;战胜国际象棋世界冠军</p>
<p>越来越多的AI研究者们开始开发和使用复杂的数学工具。人们广泛地认识到，许多AI需要解决的问题已经成为数学，经济学和运筹学领域的研究课题。数学语言的共享不仅使AI可以与其他学科展开更高层次的合作，而且使研究结果更易于评估和证明。AI已成为一门更严格的科学分支。</p>
<p>Judea Pearl发表于1988年的名著将概率论和决策理论引入AI。现已投入应用的新工具包括贝叶斯网络，隐马尔可夫模型，信息论，随机模型和经典优化理论。针对神经网络和进化算法等&ldquo;计算智能&rdquo;范式的精确数学描述也被发展出来。<br /><br /></p>
<h2 id="大数据2005---现在">大数据：2005 - 现在</h2>
<p>从某种意义上讲，2005年是大数据元年，虽然大部分人感受不到数据带来的变化，但是一项科研成果却让全世界从事机器翻译的人感到震惊，那就是之前在机器翻译领域从来没有技术积累、不为人所知的Google，以巨大的优势打败了全世界所有机器翻译研究团队，一跃成为这个领域的领头羊。</p>
<p>就是Google花重金请到了当时世界上水平最高的机器翻译专家弗朗兹&middot;奥科 (Franz Och)博士。奥科用了上万倍的数据来训练系统。量变的积累就导致了质变的发生。奥科能训练出一个六元模型，而当时大部分研究团队的数据量只够训练三元模型。简单地讲，一个 好的三元模型可以准确地构造英语句子中的短语和简单的句子成分之间的搭配，而六元模型则可以构造整个从句和复杂的句子成分之间的搭配，相当于将这些片段从一种语言到另一种语言直接对译过去了。不难想象，如果一个系统对大部分句子在很长的片段上直译，那么其准确性相比那些在词组单元做翻译的系统要准确得多。</p>
<p>如今在很多与&ldquo;智能&rdquo;有关的研究领域，比如图像识别和自然语言理解，如果所采用的方法无法利用数据量的优势，会被认为是落伍的。</p>
<p>数据驱动方法从20世纪70年代开始起步，在八九十年代得到缓慢但稳步的发展。进入21世纪后，由于互联网的出现，使得可用的数据量剧增，数据驱动方法的优势越来越明显，最终完成了从量变到质变的飞跃。如今很多需要类似人类智能才能做的事情，计算机已经可以胜任了，这得益于数据量的增加。</p>
<p>全世界各个领域数据不断向外扩展，渐渐形成了另外一个特点，那就是很多数据开始出现交叉，各个维度的数据从点和线渐渐连成了网，或者说，数据之间的关联性极大地增强，在这样的背景下，就出现了大数据。</p>
<p>大数据是一种思维方式的改变。现在的相比过去大了很多，量变带来了质变，思维方式、做事情的方法就应该和以往有所不同。这其实是帮助我们理解大数据概念的一把钥匙。在有大数据之前，计算机并不擅长解决需要人类智能来解决的问题，但是今天这些问题换个思路就可以解决了，其核心就是变智能问题为数据问题。由此，全世界开始了新的一轮技术革命&mdash;&mdash;智能革命。</p>
<p><img src="http://www.ityouknow.com/assets/images/2017/reading/Artificial_intelligence.jpg" alt="" /></p>
<blockquote>
<p>建议购买正版书籍，如需试读电子版本，请在公众号回复：&rdquo;智能时代&ldquo;</p>

</blockquote>
<p>参考：</p>
<p><a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8F%B2">人工智能史</a></p>
<p><a href="https://book.douban.com/subject/26838557/">智能时代</a></p>
<hr />
<p>作者：纯洁的微笑<br />出处：<a href="http://www.ityouknow.com/">http://www.ityouknow.com/</a><br />版权归作者所有，转载请注明出处</p>]]></description></item><item><title>漫画 |《程序员十二时辰》，内容过于真实 ...</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040237.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 14 Dec 2019 09:12:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040237.html</guid><description><![CDATA[<p>据说程序员的一天是这样渡过....</p>
<h2 id="开始新的一天">7：00 开始新的一天</h2>
<p>起床缓冲中，已经进行 &hellip;&hellip;6%</p>
<p>回想昨晚不该又 High 到 2 点</p>
<p>7：10 闹钟响到第 6 次的时候，终于鼓起勇气起床。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/1.png" alt="" /></p>
<p>其实我也不想那么晚睡，但，只有凌晨以后的时间</p>
<p>我才觉得时间属于自己！</p>
<h2 id="地铁中">7：40 地铁中</h2>
<p>上班的心情比上坟还要沉重</p>
<p>每天在地铁就拼劲了一天的力气</p>
<p><img src="http://favorites.ren/assets/images/2019/it/2.png" alt="" /></p>
<p>哪怕你是一个96公斤的胖子，也可以被挤得双脚悬空。</p>
<p>住在燕郊的同事总是对我说：</p>
<p>上班不累，上下班累</p>
<p>我懂！</p>
<h2 id="公司打卡">9：01 公司打卡</h2>
<p>仅仅迟到1分钟的痛，有谁能懂？</p>
<p><img src="http://favorites.ren/assets/images/2019/it/3.png" alt="" /></p>
<p>据公司HR说，三次迟到就可以领取公司的特殊奖状...</p>
<p>我一直想鼓起勇气问问 HR</p>
<p>为什么领导可以 12 点以后才来...</p>
<h2 id="开始办公">9：10 开始办公</h2>
<p>打开电脑，提示您有106条未读邮件</p>
<p>明明就坐在你的对面，偏偏要发个邮件来沟通</p>
<p>有可能怕背锅吧...</p>
<p><img src="http://favorites.ren/assets/images/2019/it/4.png" alt="" /></p>
<p>顺便打开博客园，瞅瞅今天又更了什么新技术。</p>
<h2 id="项目开会">10：00 项目开会</h2>
<p>项目沟通会议，永远是一场PK大赛！</p>
<p>董事长说你们研发都是一群高智商人群，1个月肯定就可以搞定</p>
<p>偷偷瞄了一眼，技术老大下意识的又摸了摸自己的秃头</p>
<p><img src="http://favorites.ren/assets/images/2019/it/5.png" alt="" /></p>
<p>原定1个小时的会议，又拖延了51分钟，精准卡到了饭点。</p>
<h2 id="公司食堂">12：00 公司食堂</h2>
<p>排队半小时，吃饭三分钟</p>
<p>三分钟吃饭时间，总能发现各种各样的惊喜（吓）</p>
<p><img src="http://favorites.ren/assets/images/2019/it/6.png" alt="" /></p>
<p>头发丝、洗锅细铁丝、环保材料、小动物...</p>
<p>食堂吃饭就是另一种野外生存锻炼。</p>
<h2 id="公司附近遛弯">12：40 公司附近遛弯</h2>
<p>不小心又遇到了领导，每次遇到领导都不知道如何打招呼</p>
<p>&ldquo;领导吃了吗&rdquo;好像是废话</p>
<p>&ldquo;领导去干嘛&rdquo;我能管得着吗？</p>
<p><img src="http://favorites.ren/assets/images/2019/it/7.png" alt="" /></p>
<p>正在犹豫之间，领导把头转向了另外一个方向，擦肩而过。</p>
<h2 id="午休">13：00 午休</h2>
<p>各种鼾声此消彼长，一度有种进了民工房的错觉</p>
<p>有的喜欢趴着睡，有的喜欢仰着睡，有的喜欢脱掉鞋睡...</p>
<p><img src="http://favorites.ren/assets/images/2019/it/8.png" alt="" /></p>
<p>夏天，配上浓浓的脚臭和各种外卖的味道，刺激、酸爽！</p>
<h2 id="修改-bug-中">14：00 修改 Bug 中</h2>
<p>终于可以好好改改 Bug 了</p>
<p>为了修改一个很深的 Bug，无意中在一个很老的组件包中，发现一段醒目的代码注释</p>
<p>突然有一种泪流满面的感动，兄弟诚不欺我</p>
<p><img src="http://favorites.ren/assets/images/2019/it/9.png" alt="" /></p>
<p>面对前任兄弟的真诚，对着代码注释，深情的拜了三拜。</p>
<h2 id="沟通需求">16：30 沟通需求</h2>
<p>新来了一个产品妹子</p>
<p>第 106 次来到我的身边，看来梁静茹又给了她一次勇气</p>
<p><img src="http://favorites.ren/assets/images/2019/it/10.png" alt="" /></p>
<p>努力镇压住心中的杀气，问道，这次又改什么？</p>
<h2 id="启动加班中">18：20 启动加班中</h2>
<p>非研发部门，总是可以在下班十分钟之内撤退完毕，整齐如一</p>
<p>当办公司都走空的时候，才是程序员真正的 Coding 时间</p>
<p><img src="http://favorites.ren/assets/images/2019/it/11.png" alt="" /></p>
<p>当没有人打扰时，Coding 就是一种享受</p>
<p>有种改变世界的感觉</p>
<p>虽然有可能是一种错觉。</p>
<h2 id="继续加班中">19：00 继续加班中</h2>
<p>不在加班中爆发，就在加班中灭亡</p>
<p>995、996、997、711、007...</p>
<p>有的公司为了鼓励加班，设置很多变态的规定</p>
<p>17：30 下班 ，18：30 有班车，19：00 有工作餐，21：00 后打车报销</p>
<p>总有一个坑等着你</p>
<p><img src="http://favorites.ren/assets/images/2019/it/12.png" alt="" /></p>
<p>想想1.5-2H 的地铁，还不如再干两个小时吧...</p>
<p>每次回家坐在出租车上，看着窗外这座城市的繁华</p>
<p>却始终感觉自己是局外人</p>
<p>永远融不进去这个待了好多年的城市。</p>
<h2 id="作为一名程序员">作为一名程序员</h2>
<p>有几句知心话要对大家说：</p>
<p>每一个北漂人都不容易，</p>
<p>老板的情怀很重要，但自己的身体更重要。</p>
<p>没有听说哪个公司离开了一个程序员就倒闭了。</p>
<p>但，如果你的家庭没有了顶梁柱的你，</p>
<p>一切都垮了！</p>
<p>有时候很多读者问我，</p>
<p>一线城市重要，还是二线城市重要？</p>
<p>对我来讲和家人在一起最重要！</p>
<p>程序员的生活不应该只有工作，</p>
<p>虽然工作有可能改变世界，</p>
<p>但最需要你改变的可能是你的家庭。</p>
<p>最近看新闻，有很多些程序员，</p>
<p>在工作中就突然倒下了，</p>
<p>有的只是意外，</p>
<p>有的却永远没有起来。</p>
<p>未来很远，只有打好地基，才能走得更稳！</p>
<p><strong>来自纯洁的微笑</strong></p>
<p><a href="https://www.cnblogs.com/ityouknow/p/11337642.html">https://www.cnblogs.com/ityouknow/p/11337642.html</a></p>]]></description></item><item><title>漫画 | 外行对程序员误会有多深！</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040227.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 14 Dec 2019 09:09:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040227.html</guid><description><![CDATA[<p>程序员如今已经发展成社会的主流职业，以至于街头的王大妈李大爷都能说出一二来，据说他们认为的程序员是这样子的：</p>
<p>1.程序员都是秃头，秃的越狠越是高级。<br />2.程序员各个都是死宅男，整天在家玩电脑。<br />3.甚至外行给程序员们总结了一句话：钱多话少死得早！</p>
<p>那程序员真正的生活是什么样的呢？</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer01.png" alt="" /></p>
<p>老妈曾经总认为，程序员的办公环境就像混乱的网吧，而我的工作基本和网瘾少年打游戏差不多，其实....</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer02.png" alt="" /></p>
<p>每个程序员似乎都有被叫去修电脑的经历，最有趣的是，很多程序员靠着这个技能找到了女朋友！</p>
<p>但修电脑绝非程序员的本职，代码才是程序员们的核心武器。</p>
<p>当一名程序员面对电脑时，他一定在享受那个 Coding 世界，用代码完成他对这个世界的诉说。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer03.png" alt="" /></p>
<p>比较尴尬的是，很多 IT 公司老板并不是技术出身，往往认为程序员只是写几行代码而已...</p>
<p>实际上程序员大量的时间都被开会、PK、培训、面试这种无聊的事情所占用。</p>
<p>每当夜深人静的时候，才是程序员最佳的 Coding 时间。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer04.png" alt="" /></p>
<p>由于各种自媒体的渲染，外行们总以为程序员个个都是四件套，格子衫、黑框眼镜、牛仔裤、运动鞋，为此还给大家解释过为什么是这四件套，耐脏+百搭+随性。</p>
<p>但是其实程序员也有很多潮人，也不是各个都穿格子衫，那些以为程序员都穿格子衫的外行们，肯定没看过 Github 上面那个女装大佬的开源项目。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer05.png" alt="" /></p>
<p>关于发型，这是外行们吐槽最狠的地方了，一致认为头发的疏密和经验成反比。</p>
<p>抖音上面甚至出现了一个播放量很高的视频，一个小伙子面试的时候，被面试官说是经验不足，当这名面试者把帽子拿下来露出光亮的脑门时，面试官立刻满意的说，请您明天来上班。</p>
<p>但其实很多资深的架构师也是可以有一头乌黑的秀发的，至于秃头，那真的和技术能力没有太多关系，真正和秃头最相关的其实是基因。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer06.png" alt="" /></p>
<p>还有一些媒体中，程序员像极了吸大烟的瘾君子，精神萎靡不振，二十岁的青年搞得像个老大爷。</p>
<p>其实这只是程序员自嘲的一种表现而已，真正的程序员健康、阳光、帅气，型男、肌肉男也是常见的品种。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer07.png" alt="" /></p>
<p>我们村的老大爷总以为我是这样找工作的，其实只要技术在身，手机 APP 聊聊天就能搞定。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer08.png" alt="" /></p>
<p>在亲朋好友的眼中程序员的工资老高了，年薪百万是常态；但谁知一线程序员的苦，车贷、房贷、房租、日常开销，很多程序员仍在过着月光的生活。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer09.png" alt="" /></p>
<p>在朋友的眼中，程序员 999 、997 、007 ，这个。。。。。。确实是真的！</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer10.png" alt="" /></p>
<p>在很多人眼中，程序员就只会和电脑打交道，以至于很多人都找不到女朋友。</p>
<p>这个。。。</p>
<p>这个。。。</p>
<p>也是真的！</p>
<p><img src="http://favorites.ren/assets/images/2019/it/programmer11.png" alt="" /></p>
<p>曾经看到过这样一段对话：</p>
<ul>
<li>A：你知道为什么很多程序员都把头像换成女朋友吗？</li>
<li>B：不知道</li>
<li>A：因为程序员最大的炫耀就是：有女朋友！</li>
<li>B：哈哈哈</li>

</ul>
<p>最后我想给大家说两句真心话：</p>
<p>程序员并不像传说中的那样目光呆滞，着装随意，疏于打理，不善交流，也不是什么电脑问题都可以修理，什么号都可以盗，什么网站都可以黑掉。</p>
<p>那些关于程序员的传说，很多是外行对程序员的误解，但更多是我们程序员对外自嘲的结果，因为.....，外行们实在黑不到点子上呀，只好我们自己来了。</p>
<p>真正的程序员和普通白领上班族没有太大的区别，只是程序员这个职业稍微特殊一点，那就是：每个程序员都有一个用代码改变世界的梦！</p>
<p>我喜欢程序员，他们单纯、固执、容易体会到成就感。<br />面对压力，能够挑灯夜战不眠不休。<br />面对困难，能够迎难而上挑战自我。</p>
<p>他们也会感到困惑与彷徨，但每个优秀的程序员的心中或许都有一个比尔盖茨或乔布斯那样的梦想，那就是，用智慧开创属于自己的事业！</p>
<p>我想说的是，其实我是一个程序员。</p>
<p><strong>来自纯洁的微笑</strong></p>
<p><a href="https://www.cnblogs.com/ityouknow/p/11659888.html" target="_blank">https://www.cnblogs.com/ityouknow/p/11659888.html</a></p>]]></description></item><item><title>爬虫究竟是合法还是违法的？</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040211.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 14 Dec 2019 09:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/14/12040211.html</guid><description><![CDATA[<p>&nbsp;</p>
<p>据说互联网上 50%以上的流量都是爬虫创造的，也许你看到很多热门数据都是爬虫所创造的，所以可以说无爬虫就无互联网的繁荣。</p>
<p>前天写了一篇文章<a href="http://www.ityouknow.com/it/2019/10/07/beizhua.html">《 只因写了一段爬虫，公司200多人被抓！》</a>，讲述程序员因写爬虫而被刑侦的事件。文章传播很广，评论中讨论最热是：爬虫究竟是合法还是违法的？</p>
<p>这个话题涉及到我们很多程序员的日常工作，所以有必要和大家细聊一下。</p>
<h2 id="技术无罪">01.技术无罪？</h2>
<p>很多朋友给我留言：技术是无罪的，技术本身确实是没有对错的，但使用技术的人是有对错的，公司或者程序员如果明知使用其技术是非法的，那么公司或者人就需要为之付出代价。</p>
<p>在今年国家颁布《中华人民共和国网络安全法》之后，很多以前处于灰色地带的业务都不能做了。</p>
<p>君不见之前曾经非常火的各种社工库网站，现在绝大部分都已经消失匿迹了吗？因为最新的安全法强调：贩卖个人信息超过50条属于&ldquo;情节严重&rdquo;，需要追求其法律责任。</p>
<p>很多草根站长都纷纷主动关闭了网站；还有很多涉及版权信息的网站，比如书籍、影视剧、课程等后期也会面临越来越严格的审查，这就是目前大的形势。</p>
<p>2014年12月20日，人人影视字幕站发布微博称，人人影视正式关闭，并表示或将继续为正版商提供翻译服务，也可能转变为讨论社区的形式。</p>
<p>2019年6月，吾爱破解因版权问题关站整改...<br />.....</p>
<p>随着中国经济的不断往前走，知识产权问题会越来越重视，非法爬虫是现在一个重要的打击部分，</p>
<p>如果有程序员走在灰色的边缘尽早收手，不要因为一点小的收益导致触犯法律，从而得不偿失。</p>
<p>技术是无罪的，但是用到了错的地方代价也是非常巨大的。</p>
<h2 id="爬虫岗位人人自危">02.爬虫岗位人人自危</h2>
<p>我在拉钩上搜索： 爬虫工程师，显示有 217 条相关招聘信息，薪资从10-60k 都有，说明市场上对爬虫的需求是很大的。</p>
<p><img src="http://favorites.ren/assets/images/2019/it/pythonlaw01.jpg" alt="" /></p>
<p>前天文章发出去之后有很多程序员给我留言：</p>
<ul>
<li>我们领导安排我爬取公司内部的信息，这算不算犯罪呢？</li>
<li>爬取网上公开的信息，这算不算犯罪呢？</li>
<li>写了一段代码上传到 Github，被人用了犯法吗？</li>

</ul>
<p>简单回答一下这些问题：</p>
<ul>
<li>
<p>1.爬取公司内部信息有公司授权当然不算犯罪的，但是公司内部不用接口而用爬虫不知道是为什么？</p>

</li>
<li>
<p>2.爬取网上公开信息不犯法，但如果大量开启爬虫导致对方服务器崩溃也是违法的，这属于暴力攻击的范畴了。</p>

</li>
<li>
<p>3.写了一段代码上传到 Github 上面，有人利用你的代码做了其它非法的事情，绝大多数都没有问题的，但如果你写的软件涉及到入侵、暴力破解、病毒等就不好说了。</p>

</li>

</ul>
<p>还有朋友认为这事责任在企业不在程序员，日常工作中项目初期设计和最后上线需要通过公司的法务批准，所有代码必须有其他程序员同事评审通过才能提交。</p>
<p>这位朋友说的挺对的，按道理每个公司都应该有法务和风控在前面，后面才是产品设计和程序员开发的事情，但如果一家公司为了利益，老板可以直接让这两个部门闭嘴，后面程序员可以不干吗？</p>
<p>更甚至很多公司其实就没有这两个部门或者说形同虚设。那么做为程序员自己也需要操一份心，凡是涉及到入侵类的程序都不能干，因为有一个东西叫做：单位犯罪。</p>
<p>单位犯罪，是指公司、企业、事业单位、机关、团体为单位谋取利益，经单位决策机构或者负责人决定实施的，法律规定应当负刑事责任的危害社会的行为。</p>
<p>我国刑法对单位犯罪原则上采取双罚制度，即单位犯罪的，对单位判处罚金，并对其直接负责的主管人员和其他直接责任人员判处刑罚。</p>
<h2 id="什么样的爬虫是非法的">03.什么样的爬虫是非法的？</h2>
<p>爬虫不能涉及个人隐私！</p>
<p>如果爬虫程序采集到公民的姓名、身份证件号码、通信通讯联系方式、住址、账号密码、财产状况、行踪轨迹等个人信息，并将之用于非法途径的，则肯定构成非法获取公民个人信息的违法行为。</p>
<p>也就是说你爬虫爬取信息没有问题，但不能涉及到个人的隐私问题，如果涉及了并且通过非法途径收益了，那肯定是违法行为。</p>
<p>另外，还有下列三种情况，爬虫有可能违法，严重的甚至构成犯罪：</p>
<ul>
<li>
<p>1.爬虫程序规避网站经营者设置的反爬虫措施或者破解服务器防抓取措施，非法获取相关信息，情节严重的，有可能构成&ldquo;非法获取计算机信息系统数据罪&rdquo;。</p>

</li>
<li>
<p>2.爬虫程序干扰被访问的网站或系统正常运营，后果严重的，触犯刑法，构成&ldquo;破坏计算机信息系统罪&rdquo;</p>

</li>
<li>
<p>3.爬虫采集的信息属于公民个人信息的，有可能构成非法获取公民个人信息的违法行为，情节严重的，有可能构成&ldquo;侵犯公民个人信息罪&rdquo;。</p>

</li>

</ul>
<p>现在网上有很多付费的课程，比如极客时间、Gitchat、慕课网、知识星球等等，这些付费内部信息如果被非法爬取手法出售获利，一种违法行为。</p>
<p>之前我就遇到一个网友，把各个知识星球的内容都抓下来，合到一起自己去卖，自作聪明觉得发现了一个大的商机，其实自己不知道这个行为其实很危险，风险和收益明显不对等。</p>
<p>我这两天看的时候，他的一个公众号都被封了，后来又转移了一个小号继续搞，迟早又是被封的命运，真的很不值当。最可怜是那些买他服务的用户，因为他宣传时承诺永久，肯定永久不了。</p>
<h2 id="什么样的爬虫是合法的">04.什么样的爬虫是合法的？</h2>
<p>1、 遵守 Robots 协议</p>
<p>Robots 协议也叫 robots.txt（统一小写）是一种存放于网站根目录下的 ASCII 编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。</p>
<p>Robots 协议就是告诉爬虫，哪些信息是可以爬取，哪些信息不能被爬取，严格按照 Robots 协议 爬取网站相关信息一般不会出现太大问题。</p>
<p>2、不能造成对方服务器瘫痪</p>
<p>但不是说只要遵守 Robots 协议的爬虫就没有问题，还涉及到两个因素，第一不能大规模爬虫导致对方服务器瘫痪，这等于网络攻击。</p>
<p>2019年05月28日国家网信办发布的《数据安全管理办法（征求意见稿）》中，拟通过行政法规的形式，对爬虫的使用进行限制：</p>
<p>网络运营者采取自动化手段访问收集网站数据，不得妨碍网站正常运行；此类行为严重影响网站运行，如自动化访问收集流量超过网站日均流量三分之一，网站要求停止自动化访问收集时，应当停止。</p>
<p>3、不能非法获利</p>
<p>恶意利用爬虫技术抓取数据，攫取不正当竞争的优势，甚至是牟取不法利益的，则可能触犯法律。实践中，非法使用爬虫技术抓取数据而产生的纠纷其实数量并不少，大多是以不正当竞争为由提请诉讼。</p>
<p>举个例子，如果你把大众点评上的所有公开信息都抓取了下来，自己复制了一个一模一样的网站，并且还通过这个网站获取了大量的利润，这样也是有问题的。</p>
<p>一般情况下，爬虫都是为了企业获利的，因此需要爬虫开发者的道德自持和企业经营者的良知才是避免触碰法律底线的根本所在。</p>
<h2 id="最后">05.最后</h2>
<p>最近看了很多关于程序员出事的事件，东南亚程序员被打，多个大数据公司被查等等。做为一名普通的程序员，希望大家也可以多关注此类事件，从而提醒自己。</p>
<p>有风险的行业谨慎进入，比如现金贷、不合规的P2P、赌博类游戏、黑五类产品的行业。如果公司安排入侵某个网站数据，或者有同事/朋友邀请泄露公司信息的都需要保持警惕，有时候一个很小的动作都有可能导致出问题。</p>
<p>我们绝大多数公司和个人使用的爬虫都是没有问题的，不必人人自危，只要把握住不要爬取个人信息，不要利用爬虫非法获利，不要爬取网站的付费内容，基本上不会有问题。</p>
<p>程序员是世界上最单纯的一批人，也是一批高智商低情商的人，工作是工作但也需要适当保持谨慎，对于一些游走在法律边缘的事情请保持距离。</p>
<p>敬畏法律，遵纪守法，从我做起。</p>
<p><strong>本文来自纯洁的微笑</strong></p>
<p><a href="https://www.cnblogs.com/ityouknow/p/11697613.html">https://www.cnblogs.com/ityouknow/p/11697613.html</a></p>]]></description></item><item><title>【C语言】用指针作为形参完成数据的升序排列</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/13/12035052.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 13 Dec 2019 06:51:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/13/12035052.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">void</span> sort(<span style="color: #0000ff;">int</span> *x,<span style="color: #0000ff;">int</span><span style="color: #000000;"> n);
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> arr[<span style="color: #800080;">10</span>] = { <span style="color: #800080;">11</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">23</span>,<span style="color: #800080;">15</span>,<span style="color: #800080;">79</span>,<span style="color: #800080;">66</span>,<span style="color: #800080;">58</span>,<span style="color: #800080;">69</span>,<span style="color: #800080;">45</span><span style="color: #000000;"> },i;
    sort(arr, </span><span style="color: #800080;">10</span><span style="color: #000000;">);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">排序结果如下：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d </span><span style="color: #800000;">"</span><span style="color: #000000;">, arr[i]);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}
</span><span style="color: #0000ff;">void</span> sort(<span style="color: #0000ff;">int</span> *x, <span style="color: #0000ff;">int</span><span style="color: #000000;"> n)
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, k, t;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; n - <span style="color: #800080;">1</span>; i++<span style="color: #000000;">)
    {
        k </span>=<span style="color: #000000;"> i;
        </span><span style="color: #0000ff;">for</span> (j = i + <span style="color: #800080;">1</span>; j &lt; n; j++<span style="color: #000000;">)
            </span><span style="color: #0000ff;">if</span> (x[j] &lt;<span style="color: #000000;"> x[k])
                k </span>=<span style="color: #000000;"> j;
        </span><span style="color: #0000ff;">if</span> (i !=<span style="color: #000000;"> k)
        {
            t </span>=<span style="color: #000000;"> x[i];
            x[i] </span>=<span style="color: #000000;"> x[k];
            x[k] </span>=<span style="color: #000000;"> t;
        }
    }
}</span></pre>
</div>
]]></description></item><item><title>【C语言】数组名作函数参数，完成数据的升序排列</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/13/12035029.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 13 Dec 2019 06:46:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/13/12035029.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">void</span> sort(<span style="color: #0000ff;">int</span> x[],<span style="color: #0000ff;">int</span><span style="color: #000000;"> n);
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> arr[<span style="color: #800080;">10</span>] = { <span style="color: #800080;">11</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">23</span>,<span style="color: #800080;">15</span>,<span style="color: #800080;">79</span>,<span style="color: #800080;">66</span>,<span style="color: #800080;">58</span>,<span style="color: #800080;">69</span>,<span style="color: #800080;">45</span><span style="color: #000000;"> },i;
    sort(arr, </span><span style="color: #800080;">10</span><span style="color: #000000;">);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">排序结果如下：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d </span><span style="color: #800000;">"</span><span style="color: #000000;">, arr[i]);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}
</span><span style="color: #0000ff;">void</span> sort(<span style="color: #0000ff;">int</span> x[], <span style="color: #0000ff;">int</span><span style="color: #000000;"> n)
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, k, t;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; n - <span style="color: #800080;">1</span>; i++<span style="color: #000000;">)
    {
        k </span>=<span style="color: #000000;"> i;
        </span><span style="color: #0000ff;">for</span> (j = i + <span style="color: #800080;">1</span>; j &lt; n; j++<span style="color: #000000;">)
            </span><span style="color: #0000ff;">if</span> (x[j] &lt;<span style="color: #000000;"> x[k])
                k </span>=<span style="color: #000000;"> j;
        </span><span style="color: #0000ff;">if</span> (i !=<span style="color: #000000;"> k)
        {
            t </span>=<span style="color: #000000;"> x[i];
            x[i] </span>=<span style="color: #000000;"> x[k];
            x[k] </span>=<span style="color: #000000;"> t;
        }
    }
}</span></pre>
</div>
<p><strong>选择排序</strong></p>]]></description></item><item><title>【C语言】请输入一个n(n&lt;=10)并输出一个n行n列的杨辉三角</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/13/12032944.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Thu, 12 Dec 2019 23:49:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/13/12032944.html</guid><description><![CDATA[<p>应用二维数组的知识</p>
<p>杨辉三角特点:</p>
<p>1.第一列和对角线的元素全部为1</p>
<p>2.其他元素等于上一行的当前列的值和上一行中当前列前边一列的值之和</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">#define</span> N 11
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
</span><span style="color: #0000ff;">int</span> a[N][N]={{<span style="color: #800080;">0</span>},{<span style="color: #800080;">0</span>,<span style="color: #800080;">1</span>}};<span style="color: #008000;">/*</span><span style="color: #008000;">初始化第0行和第一行，其他全部为0</span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">int</span><span style="color: #000000;"> n,i,j;
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入行数:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>,&amp;<span style="color: #000000;">n);
</span><span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">2</span>;i&lt;=n;i++)<span style="color: #008000;">//</span><span style="color: #008000;">从第2行开始循环计算杨辉三角的每一个值</span>
<span style="color: #0000ff;">for</span>(j=<span style="color: #800080;">1</span>;j&lt;=i;j++)<span style="color: #008000;">//</span><span style="color: #008000;">i==j是对角线位置，是本行应处理的最后一个单元</span>
a[i][j]=a[i-<span style="color: #800080;">1</span>][j]+a[i-<span style="color: #800080;">1</span>][j-<span style="color: #800080;">1</span><span style="color: #000000;">];
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d行%d列的杨辉三角:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,n,n);
</span><span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">1</span>;i&lt;=n;i++)<span style="color: #008000;">//</span><span style="color: #008000;">从第一行开始循环输出杨辉三角</span>
<span style="color: #000000;">{
</span><span style="color: #0000ff;">for</span>(j=<span style="color: #800080;">1</span>;j&lt;=i;j++<span style="color: #000000;">)
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%4d</span><span style="color: #800000;">"</span><span style="color: #000000;">,a[i][j]);
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
}
</span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>]]></description></item><item><title>【C语言】指针函数例子</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/13/12032939.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Thu, 12 Dec 2019 23:27:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/13/12032939.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;

<span style="color: #0000ff;">char</span>* getword(<span style="color: #0000ff;">char</span><span style="color: #000000;">);

</span><span style="color: #0000ff;">char</span>* getword(<span style="color: #0000ff;">char</span><span style="color: #000000;"> c)
{
    
    </span><span style="color: #0000ff;">switch</span><span style="color: #000000;"> (c)
    {
    </span><span style="color: #0000ff;">case</span><span style="color: #800000;">'</span><span style="color: #800000;">A</span><span style="color: #800000;">'</span>:<span style="color: #0000ff;">return</span><span style="color: #800000;">"</span><span style="color: #800000;">Apple</span><span style="color: #800000;">"</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">case</span><span style="color: #800000;">'</span><span style="color: #800000;">B</span><span style="color: #800000;">'</span>:<span style="color: #0000ff;">return</span><span style="color: #800000;">"</span><span style="color: #800000;">Banana</span><span style="color: #800000;">"</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">case</span><span style="color: #800000;">'</span><span style="color: #800000;">C</span><span style="color: #800000;">'</span>:<span style="color: #0000ff;">return</span><span style="color: #800000;">"</span><span style="color: #800000;">Cat</span><span style="color: #800000;">"</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">case</span><span style="color: #800000;">'</span><span style="color: #800000;">D</span><span style="color: #800000;">'</span>:<span style="color: #0000ff;">return</span><span style="color: #800000;">"</span><span style="color: #800000;">Dog</span><span style="color: #800000;">"</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">default</span>:<span style="color: #0000ff;">return</span><span style="color: #800000;">"</span><span style="color: #800000;">None</span><span style="color: #800000;">"</span><span style="color: #000000;">;
    }
}
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span><span style="color: #000000;"> input;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一个大写字母：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">input);

    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%s\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, getword(input));
}</span></pre>
</div>
<p>可以运行，但是在某些IDE是会报错</p>
]]></description></item><item><title>【Python】小练习</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/12/12031423.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Thu, 12 Dec 2019 12:24:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/12/12031423.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">Hello,world!</span><span style="color: #800000;">"</span><span style="color: #000000;">)

</span><span style="color: #0000ff;">if</span> 5&gt;2<span style="color: #000000;">:
 </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">5大于2</span><span style="color: #800000;">"</span><span style="color: #000000;">)

 </span><span style="color: #008000;">#</span><span style="color: #008000;">这是一个注释</span>
 <span style="color: #800000;">"""</span><span style="color: #800000;">这也是一个注释</span><span style="color: #800000;">"""</span><span style="color: #000000;">

x </span>= 5<span style="color: #000000;">
y </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Hello, World!</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">print</span><span style="color: #000000;">(x)
</span><span style="color: #0000ff;">print</span><span style="color: #000000;">(y)

x </span>= 5 <span style="color: #008000;">#</span><span style="color: #008000;"> x is of type int</span>
x = <span style="color: #800000;">"</span><span style="color: #800000;">Steve</span><span style="color: #800000;">"</span> <span style="color: #008000;">#</span><span style="color: #008000;"> x is now of type str</span>
<span style="color: #0000ff;">print</span><span style="color: #000000;">(x)

x </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Bill</span><span style="color: #800000;">"</span>
<span style="color: #008000;">#</span><span style="color: #008000;"> is the same as</span>
x = <span style="color: #800000;">'</span><span style="color: #800000;">Bill</span><span style="color: #800000;">'</span>
<span style="color: #0000ff;">print</span><span style="color: #000000;">(x)

x, y, z </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Orange</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">Banana</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">Cherry</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">print</span><span style="color: #000000;">(x)
</span><span style="color: #0000ff;">print</span><span style="color: #000000;">(y)
</span><span style="color: #0000ff;">print</span><span style="color: #000000;">(z)

x </span>= <span style="color: #800000;">"</span><span style="color: #800000;">awesome</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">Python is </span><span style="color: #800000;">"</span> +<span style="color: #000000;"> x)

x </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Python is </span><span style="color: #800000;">"</span><span style="color: #000000;">
y </span>= <span style="color: #800000;">"</span><span style="color: #800000;">awesome</span><span style="color: #800000;">"</span><span style="color: #000000;">
z </span>=  x +<span style="color: #000000;"> y
</span><span style="color: #0000ff;">print</span><span style="color: #000000;">(z)

x </span>= 5<span style="color: #000000;">
y </span>= 10
<span style="color: #0000ff;">print</span>(x +<span style="color: #000000;"> y)

</span><span style="color: #008000;">#</span><span style="color: #008000;">如果您尝试组合字符串和数字，Python 会给出错误</span>
x = 10<span style="color: #000000;">
y </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Bill</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">print</span>(x + y)</pre>
</div>
<p><strong>结果：</strong></p>
<p><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191212202325047-1296750417.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】利用二维数组输出成绩</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/12/12031027.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Thu, 12 Dec 2019 10:56:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/12/12031027.html</guid><description><![CDATA[<p><strong>目的：用二维数组输出下面成绩</strong></p>
<p><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191212184838859-252310793.png" alt="" /></p>
<p>&nbsp;</p>
<p><span style="color: #ff0000;"><strong>希望你可以成为第五名童鞋！</strong></span></p>
<p>&nbsp;<strong>代码：</strong></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 创建一个带有 4行 5 列的数组 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span> a[<span style="color: #800080;">4</span>][<span style="color: #800080;">5</span>] =<span style="color: #000000;"> {
        {</span><span style="color: #800080;">80</span>,<span style="color: #800080;">92</span>,<span style="color: #800080;">85</span>,<span style="color: #800080;">86</span>,<span style="color: #800080;">99</span><span style="color: #000000;">},
        {</span><span style="color: #800080;">78</span>,<span style="color: #800080;">65</span>,<span style="color: #800080;">89</span>,<span style="color: #800080;">70</span>,<span style="color: #800080;">99</span><span style="color: #000000;">},
        {</span><span style="color: #800080;">67</span>,<span style="color: #800080;">78</span>,<span style="color: #800080;">76</span>,<span style="color: #800080;">89</span>,<span style="color: #800080;">99</span><span style="color: #000000;">},
        {</span><span style="color: #800080;">88</span>,<span style="color: #800080;">68</span>,<span style="color: #800080;">98</span>,<span style="color: #800080;">90</span>,<span style="color: #800080;">99</span><span style="color: #000000;">}
    };
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j;
    </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 输出数组中每个元素的值 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">4</span>; i++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">0</span>; j &lt; <span style="color: #800080;">5</span>; j++<span style="color: #000000;">)
        {
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d </span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i][j]);
        }
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p><strong>结果：</strong></p>
<p><strong><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191212185342609-1347524706.png" alt="" /></strong></p>
<p><strong>矩阵转置</strong></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 创建一个带有 4行 5 列的数组 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span> a[<span style="color: #800080;">4</span>][<span style="color: #800080;">5</span>] =<span style="color: #000000;"> {
        {</span><span style="color: #800080;">80</span>,<span style="color: #800080;">92</span>,<span style="color: #800080;">85</span>,<span style="color: #800080;">86</span>,<span style="color: #800080;">99</span><span style="color: #000000;">},
        {</span><span style="color: #800080;">78</span>,<span style="color: #800080;">65</span>,<span style="color: #800080;">89</span>,<span style="color: #800080;">70</span>,<span style="color: #800080;">99</span><span style="color: #000000;">},
        {</span><span style="color: #800080;">67</span>,<span style="color: #800080;">78</span>,<span style="color: #800080;">76</span>,<span style="color: #800080;">89</span>,<span style="color: #800080;">99</span><span style="color: #000000;">},
        {</span><span style="color: #800080;">88</span>,<span style="color: #800080;">68</span>,<span style="color: #800080;">98</span>,<span style="color: #800080;">90</span>,<span style="color: #800080;">99</span><span style="color: #000000;">}
    };
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j;
    </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 输出数组中每个元素的值 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">0</span>; j &lt; <span style="color: #800080;">4</span>; j++<span style="color: #000000;">)
        {
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d </span><span style="color: #800000;">"</span><span style="color: #000000;">, a[j][i]);
        }
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p><strong>结果：</strong></p>
<p><strong><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191212185529912-1110680306.png" alt="" /></strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】多维数组</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/12/12030927.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Thu, 12 Dec 2019 10:31:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/12/12030927.html</guid><description><![CDATA[<p>C 语言支持多维数组。多维数组声明的一般形式如下：</p>
<div class="cnblogs_code">
<pre>type name[size1][size2]...[sizeN];</pre>
</div>
<h2 class="tutheader">二维数组</h2>
<p>多维数组最简单的形式是二维数组。一个二维数组，在本质上，是一个一维数组的列表。声明一个 x 行 y 列的二维整型数组，形式如下：</p>
<div class="cnblogs_code">
<pre>type arrayName [ x ][ y ];</pre>
</div>
<p>其中，<strong>type</strong>&nbsp;可以是任意有效的 C 数据类型，<strong>arrayName</strong>&nbsp;是一个有效的 C 标识符。一个二维数组可以被认为是一个带有 x 行和 y 列的表格。下面是一个二维数组，包含 3 行和 4 列：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">int</span> x[<span style="color: #800080;">3</span>][<span style="color: #800080;">4</span>];</pre>
</div>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/09/two_dimensional_arrays.jpg" alt="C 中的二维数组" /></p>
<p>因此，数组中的每个元素是使用形式为 a[ i , j ] 的元素名称来标识的，其中 a 是数组名称，i 和 j 是唯一标识 a 中每个元素的下标。</p>
<h3>初始化二维数组</h3>
<p>多维数组可以通过在括号内为每行指定值来进行初始化。下面是一个带有 3 行 4 列的数组。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">3</span>][<span style="color: #800080;">4</span>] = {0，<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">8</span>,<span style="color: #800080;">9</span>,<span style="color: #800080;">10</span>,<span style="color: #800080;">11</span>};</pre>
</div>
<p>或者</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">3</span>][<span style="color: #800080;">4</span>] =<span style="color: #000000;"> {  
 {</span><span style="color: #800080;">0</span>, <span style="color: #800080;">1</span>, <span style="color: #800080;">2</span>, <span style="color: #800080;">3</span>} ,   <span style="color: #008000;">/*</span><span style="color: #008000;">  初始化索引号为 0 的行 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
 {</span><span style="color: #800080;">4</span>, <span style="color: #800080;">5</span>, <span style="color: #800080;">6</span>, <span style="color: #800080;">7</span>} ,   <span style="color: #008000;">/*</span><span style="color: #008000;">  初始化索引号为 1 的行 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
 {</span><span style="color: #800080;">8</span>, <span style="color: #800080;">9</span>, <span style="color: #800080;">10</span>, <span style="color: #800080;">11</span>}   <span style="color: #008000;">/*</span><span style="color: #008000;">  初始化索引号为 2 的行 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
};</span></pre>
</div>
<h3>访问二维数组元素</h3>
<p>二维数组中的元素是通过使用下标（即数组的行索引和列索引）来访问的。例如：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">int</span> val = a[<span style="color: #800080;">2</span>][<span style="color: #800080;">3</span>];</pre>
</div>
<p>例子：</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 一个带有 3行 4 列的数组 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span> a[<span style="color: #800080;">3</span>][<span style="color: #800080;">4</span>] = {<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">7</span>,<span style="color: #800080;">8</span>,<span style="color: #800080;">9</span>,<span style="color: #800080;">10</span>,<span style="color: #800080;">11</span>,<span style="color: #800080;">12</span><span style="color: #000000;">};
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j;
    </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 输出数组中每个元素的值 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">3</span>; i++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">0</span>; j &lt; <span style="color: #800080;">4</span>; j++<span style="color: #000000;">)
        {
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d </span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i][j]);
        }
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>结果：</p>
<p><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191212183027424-1962725090.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】输入一个字符串，并对字符串中的偶数位置的字符按从小到大的顺序排序，奇数位置的字符不动，输出排序后的结果</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/11/12025112.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 11 Dec 2019 13:04:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/11/12025112.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;<span style="color: #000000;">
#include</span>&lt;<span style="color: #0000ff;">string</span>.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span> a[<span style="color: #800080;">100</span><span style="color: #000000;">];
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i,j,k,len;
    gets_s(a);
    len</span>= strlen(a);<span style="color: #008000;">/*</span><span style="color: #008000;">计数器:遇到'\0'停止并返回计数器值</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">0</span>;i&lt;len/<span style="color: #800080;">2</span>;i++<span style="color: #000000;">)
        </span><span style="color: #0000ff;">for</span>(j=<span style="color: #800080;">0</span>;j&lt;len-<span style="color: #800080;">2</span>;j+=<span style="color: #800080;">2</span><span style="color: #000000;">)
        </span><span style="color: #0000ff;">if</span> (a[i] &gt; a[i + <span style="color: #800080;">2</span><span style="color: #000000;">])
        {
            k </span>= a[i]; a[i] = a[i + <span style="color: #800080;">2</span>]; a[i + <span style="color: #800080;">2</span>] =<span style="color: #000000;"> k;
}
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; len; i++<span style="color: #000000;">)
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%3c</span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i]);
}</span></pre>
</div>
]]></description></item><item><title>【C语言】一堆数组中存放了10个小于100的整数，请编程对所有数据按照从小到大的顺序进行排序，若个位数相等，则按照十位从小到大的顺序排序，输出排序后的结果</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/11/12024921.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 11 Dec 2019 12:22:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/11/12024921.html</guid><description><![CDATA[<p><strong>分析：取余，判断个位是否相等，利用冒泡法排序</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span>] = { <span style="color: #800080;">11</span>,<span style="color: #800080;">22</span>,<span style="color: #800080;">33</span>,<span style="color: #800080;">44</span>,<span style="color: #800080;">15</span>,<span style="color: #800080;">20</span>,<span style="color: #800080;">17</span>,<span style="color: #800080;">30</span>,<span style="color: #800080;">10</span>,<span style="color: #800080;">23</span> };<span style="color: #008000;">/*</span><span style="color: #008000;">数组</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, k;
    </span><span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">0</span>;i&lt;<span style="color: #800080;">9</span>;i++<span style="color: #000000;">)
        </span><span style="color: #0000ff;">for</span>(j=<span style="color: #800080;">0</span>;j&lt;<span style="color: #800080;">9</span>-i;j++<span style="color: #000000;">)
            </span><span style="color: #0000ff;">if</span> (a[j] % <span style="color: #800080;">10</span> &lt; a[j + <span style="color: #800080;">1</span>] % <span style="color: #800080;">10</span> || a[j] % <span style="color: #800080;">10</span> == a[j + <span style="color: #800080;">1</span>] % <span style="color: #800080;">10</span>)<span style="color: #008000;">/*</span><span style="color: #008000;">冒泡算法+个位是否相等</span><span style="color: #008000;">*/</span><span style="color: #000000;">
            {
                k </span>= a[j]; a[j] = a[j + <span style="color: #800080;">1</span>]; a[j + <span style="color: #800080;">1</span>] = k;<span style="color: #008000;">/*</span><span style="color: #008000;">交换</span><span style="color: #008000;">*/</span><span style="color: #000000;">
            }
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d</span><span style="color: #800000;">"</span>, a[i]);<span style="color: #008000;">/*</span><span style="color: #008000;">循环打印结果</span><span style="color: #008000;">*/</span><span style="color: #000000;">
   
}</span></pre>
</div>
]]></description></item><item><title>【C语言】移动指针</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/11/12020200.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 11 Dec 2019 00:08:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/11/12020200.html</guid><description><![CDATA[<p>移动指针</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;

<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
  </span><span style="color: #0000ff;">char</span> *s=<span style="color: #800000;">"</span><span style="color: #800000;">哈哈哈哈哈哈</span><span style="color: #800000;">"</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">for</span>(*s;s!=<span style="color: #800000;">"</span><span style="color: #800000;">\0</span><span style="color: #800000;">"</span>;s++<span style="color: #000000;">)

printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c</span><span style="color: #800000;">"</span>,*<span style="color: #000000;">s);

}</span></pre>
</div>
<p>这个s首先会指向第一个字符&ldquo;哈&rdquo;然后通过循环会一次打印出一个字符，s++是地址移动，打印了一个字符后，就会移动到下一个字符！</p>
<p>&nbsp;</p>]]></description></item><item><title>Python中68个内置函数的总结</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/09/12012129.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 09 Dec 2019 09:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/09/12012129.html</guid><description><![CDATA[<p><span data-spm-anchor-id="a2c4e.11153940.0.i15.4cd567f452Vvz8">内置函数</span></p>
<p>内置函数就是Python给你提供的, 拿来直接用的函数, 比如print., input等. 截止到python版本3.6.2 python一共提供了68个内置函数.</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>#68个内置函数
# abs()         　　dict()      　　help()       　　min()       　　setattr()
# all()         　　dir()       　　hex()        　　next()      　　slice() 
# any()         　　divmod()    　　id()         　　object()    　　sorted() 
# ascii()       　　enumerate() 　　input()      　　oct()       　　staticmethod() 
# bin()         　　eval()      　　int()        　　open()      　　str() 
# bool()        　　exec()      　　isinstance() 　　ord()       　　sum() 
# bytearray()   　　ﬁlter()     　　issubclass() 　　pow()       　　super() 
# bytes()       　　ﬂoat()      　　iter()       　　print()     　　tuple() 
# callable()    　　format()    　　len()        　　property()  　　type() 
# chr()         　　frozenset() 　　list()       　　range()     　　vars() 
# classmethod() 　　getattr()   　　locals()     　　repr()      　　zip() 
# compile()     　　globals()   　　map()        　　reversed()  　　__import__() 
# complex()     　　hasattr()   　　max()        　　round() 
# delattr()     　　hash()      　　memoryview() 　　set()</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i1.4cd567f452Vvz8"><span data-spm-anchor-id="a2c4e.11153940.0.i18.4cd567f452Vvz8">1. 和数字相关</span></p>
<p>(1) 数据类型</p>
<p>1) bool : 布尔型(True,False)</p>
<p>2) int : 整型(整数)</p>
<p>3) float : 浮点型(小数)</p>
<p>4) complex : 复数</p>
<p>(2) 进制转换</p>
<p>1) bin() 将给的参数转换成二进制</p>
<p>2) otc() 将给的参数转换成八进制</p>
<p>3) hex() 将给的参数转换成十六进制</p>
<div class="cnblogs_code">
<pre>print(bin(10))  # 二进制:0b1010
print(hex(10))  # 十六进制:0xa
print(oct(10))  # 八进制:0o12</pre>
</div>
<p>(3) 数学运算</p>
<p>1) abs() 返回绝对值</p>
<p>2) divmode() 返回商和余数</p>
<p>3) round() 四舍五入</p>
<p>4) pow(a, b) 求a的b次幂, 如果有三个参数. 则求完次幂后对第三个数取余</p>
<p>5) sum() 求和</p>
<p>6) min() 求最小值</p>
<p>7) max() 求最大值</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>print(abs(-2))  # 绝对值:2

print(divmod(20,3)) # 求商和余数:(6,2)

print(round(4.50))   # 五舍六入:4
print(round(4.51))   #5

print(pow(10,2,3))  # 如果给了第三个参数. 表示最后取余:1

print(sum([1,2,3,4,5,6,7,8,9,10]))  # 求和:55

print(min(5,3,9,12,7,2))  #求最小值:2

print(max(7,3,15,9,4,13))  #求最大值:15</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p><strong>&nbsp;</strong></p>
<p><span data-spm-anchor-id="a2c4e.11153940.0.i19.4cd567f452Vvz8">2. 和数据结构相关</span></p>
<p>(1) 序列</p>
<p>1) 列表和元组</p>
<p>　　list() 将一个可迭代对象转换成列表</p>
<p data-spm-anchor-id="a2c4e.11153940.0.i6.4cd567f452Vvz8">　　tuple() 将一个可迭代对象转换成元组</p>
<div class="cnblogs_code">
<pre>print(list((1,2,3,4,5,6)))  #[1, 2, 3, 4, 5, 6]
print(tuple([1,2,3,4,5,6]))  #(1, 2, 3, 4, 5, 6)</pre>
</div>
<ol data-spm-anchor-id="a2c4e.11153940.0.i9.4cd567f452Vvz8">
<li data-spm-anchor-id="a2c4e.11153940.0.i11.4cd567f452Vvz8">相关内置函数</li>
</ol>
<p data-spm-anchor-id="a2c4e.11153940.0.i10.4cd567f452Vvz8">　　reversed() 将一个序列翻转, 返回翻转序列的迭代器</p>
<p>　　slice() 列表的切片</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>lst = "你好啊"
it = reversed(lst)   # 不会改变原列表. 返回一个迭代器, 设计上的一个规则
print(list(it))  #['啊', '好', '你']

lst = [1, 2, 3, 4, 5, 6, 7]
print(lst[1:3:1])  #[2,3]

s = slice(1, 3, 1)  #  切片用的
print(lst[s])  #[2,3]</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i22.4cd567f452Vvz8">3) 字符串</p>
<p data-spm-anchor-id="a2c4e.11153940.0.i23.4cd567f452Vvz8">　　str() 将数据转化成字符串</p>
<div class="cnblogs_code">
<pre>print(str(123)+'456')  #123456
　　format()     与具体数据相关, 用于计算各种小数, 精算等.</pre>
</div>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>s = "hello world!"
print(format(s, "^20"))  #剧中
print(format(s, "&lt;20"))  #左对齐
print(format(s, "&gt;20"))  #右对齐
#     hello world!    
# hello world!        
#         hello world!

print(format(3, 'b' ))    # 二进制:11
print(format(97, 'c' ))   # 转换成unicode字符:a
print(format(11, 'd' ))   # ⼗进制:11
print(format(11, 'o' ))   # 八进制:13 
print(format(11, 'x' ))   # 十六进制(⼩写字母):b
print(format(11, 'X' ))   # 十六进制(大写字母):B
print(format(11, 'n' ))   # 和d⼀样:11
print(format(11))         # 和d⼀样:11

print(format(123456789, 'e' ))      # 科学计数法. 默认保留6位小数:1.234568e+08
print(format(123456789, '0.2e' ))   # 科学计数法. 保留2位小数(小写):1.23e+08
print(format(123456789, '0.2E' ))   # 科学计数法. 保留2位小数(大写):1.23E+08
print(format(1.23456789, 'f' ))     # 小数点计数法. 保留6位小数:1.234568
print(format(1.23456789, '0.2f' ))  # 小数点计数法. 保留2位小数:1.23
print(format(1.23456789, '0.10f'))  # 小数点计数法. 保留10位小数:1.2345678900
print(format(1.23456789e+3, 'F'))   # 小数点计数法. 很大的时候输出INF:1234.567890</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i26.4cd567f452Vvz8">bytes() 把字符串转化成bytes类型</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>bs = bytes("今天吃饭了吗", encoding="utf-8")
print(bs)  #b'\xe4\xbb\x8a\xe5\xa4\xa9\xe5\x90\x83\xe9\xa5\xad\xe4\xba\x86\xe5\x90\x97'
　　 bytearray()    返回一个新字节数组. 这个数字的元素是可变的, 并且每个元素的值得范围是[0,256)

ret = bytearray("alex" ,encoding ='utf-8')
print(ret[0])  #97
print(ret)  #bytearray(b'alex')
ret[0] = 65  #把65的位置A赋值给ret[0]
print(str(ret))  #bytearray(b'Alex')</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>ord() 输入字符找带字符编码的位置</p>
<p>chr() 输入位置数字找出对应的字符</p>
<p>ascii() 是ascii码中的返回该值 不是就返回u...</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>print(ord('a'))  # 字母a在编码表中的码位:97
print(ord('中'))  # '中'字在编码表中的位置:20013

print(chr(65))  # 已知码位,求字符是什么:A
print(chr(19999))  #丟

for i in range(65536):  #打印出0到65535的字符
    print(chr(i), end=" ")

print(ascii("@"))  #'@'</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i30.4cd567f452Vvz8">repr() 返回一个对象的string形式</p>
<div class="cnblogs_code">
<pre>s = "今天\n吃了%s顿\t饭" % 3
print(s)
#今天
# 吃了3顿    饭
print(repr(s))   # 原样输出,过滤掉转义字符 \n \t \r 不管百分号%
#'今天\n吃了3顿\t饭'</pre>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i33.4cd567f452Vvz8">(2) 数据集合</p>
<p>　　1) 字典</p>
<p>　　dict 创建一个字典</p>
<p>　　2) 集合</p>
<p>　　set 创建一个集合</p>
<p>frozenset() 创建一个冻结的集合. 冻结的集合不能进行添加和删除操作</p>
<p>(3) 相关内置函数</p>
<p>　　len() 返回一个对象中的元素的个数</p>
<p>　　sorted() 对可迭代对象进行排序操作 (lamda)</p>
<p>　　语法:</p>
<p>　　sorted(Iterable, key=函数(排序规则), reverse=False)</p>
<p>Iterable: 可迭代对象</p>
<p>key: 排序规则(排序函数), 在sorted内部会将可迭代对象中的每一个元素传递给这个函数的参数. 根据函数运算的结果进行排序</p>
<p>reverse: 是否是倒叙. True: 倒叙, False: 正序</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>lst = [5,7,6,12,1,13,9,18,5]
lst.sort()  # sort是list里面的一个方法
print(lst)  #[1, 5, 5, 6, 7, 9, 12, 13, 18]

ll = sorted(lst) # 内置函数. 返回给你一个新列表  新列表是被排序的
print(ll)  #[1, 5, 5, 6, 7, 9, 12, 13, 18]

l2 = sorted(lst,reverse=True)  #倒序
print(l2)  #[18, 13, 12, 9, 7, 6, 5, 5, 1]</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<div class="cnblogs_code">
<pre>#根据字符串长度给列表排序
lst = ['one', 'two', 'three', 'four', 'five', 'six']
def f(s):
    return len(s)
l1 = sorted(lst, key=f, )
print(l1)  #['one', 'two', 'six', 'four', 'five', 'three']</pre>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i38.4cd567f452Vvz8">enumerate() 获取集合的枚举对象</p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>lst = ['one','two','three','four','five']
for index, el in enumerate(lst,1):    # 把索引和元素一起获取,索引默认从0开始. 可以更改
    print(index)
    print(el)
# 1
# one
# 2
# two
# 3
# three
# 4
# four
# 5
# five</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i40.4cd567f452Vvz8">　all() 可迭代对象中全部是True, 结果才是True</p>
<p>　　any() 可迭代对象中有一个是True, 结果就是True</p>
<div class="cnblogs_code">
<pre>print(all([1,'hello',True,9]))  #True
print(any([0,0,0,False,1,'good']))  #True</pre>
</div>
<p>zip() 函数用于将可迭代的对象作为参数, 将对象中对应的元素打包成一个元组, 然后返回由这些元组组成的列表. 如果各个迭代器的元素个数不一致, 则返回列表长度与最短的对象相同</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>lst1 = [1, 2, 3, 4, 5, 6]
lst2 = ['醉乡民谣', '驴得水', '放牛班的春天', '美丽人生', '辩护人', '被嫌弃的松子的一生']
lst3 = ['美国', '中国', '法国', '意大利', '韩国', '日本']
print(zip(lst1, lst1, lst3))  #&lt;zip object at 0x00000256CA6C7A88&gt;
for el in zip(lst1, lst2, lst3):
    print(el)
# (1, '醉乡民谣', '美国')
# (2, '驴得水', '中国')
# (3, '放牛班的春天', '法国')
# (4, '美丽人生', '意大利')
# (5, '辩护人', '韩国')
# (6, '被嫌弃的松子的一生', '日本')</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>fiter() 过滤 (lamda)</p>
<p>语法:</p>
<ul>
<li>fiter(function. Iterable)</li>
<li>function: 用来筛选的函数. 在ﬁlter中会自动的把iterable中的元素传递给function. 然后根据function返回的True或者False来判断是否保留留此项数据 , Iterable: 可迭代对象</li>
</ul>
<div class="cnblogs_code">
<pre>def func(i):    # 判断奇数
    return i % 2 == 1
lst = [1,2,3,4,5,6,7,8,9]
l1 = filter(func, lst)  #l1是迭代器
print(l1)  #&lt;filter object at 0x000001CE3CA98AC8&gt;
print(list(l1))  #[1, 3, 5, 7, 9]</pre>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i47.4cd567f452Vvz8">map() 会根据提供的函数对指定序列列做映射(lamda)</p>
<p data-spm-anchor-id="a2c4e.11153940.0.i48.4cd567f452Vvz8">语法 : map(function, iterable) 可以对可迭代对象中的每一个元素进行映射. 分别去执行 function</p>
<div class="cnblogs_code">
<pre>def f(i):
    return i
lst = [1,2,3,4,5,6,7,]
it = map(f, lst) # 把可迭代对象中的每一个元素传递给前面的函数进行处理. 处理的结果会返回成迭代器
print(list(it))  #[1, 2, 3, 4, 5, 6, 7]</pre>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i51.4cd567f452Vvz8">3. 和作用域相关</p>
<p>locals() 返回当前作用域中的名字</p>
<p>globals() 返回全局作用域中的名字</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>def func():
    a = 10
    print(locals())  # 当前作用域中的内容
    print(globals())  # 全局作用域中的内容
    print("今天内容很多")
func()
# {'a': 10}
# {'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': 
# &lt;_frozen_importlib_external.SourceFileLoader object at 0x0000026F8D566080&gt;, 
# '__spec__': None, '__annotations__': {}, '__builtins__': &lt;module 'builtins' 
# (built-in)&gt;, '__file__': 'D:/pycharm/练习/week03/new14.py', '__cached__': None,
#  'func': &lt;function func at 0x0000026F8D6B97B8&gt;}
# 今天内容很多</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>4. 和迭代器/生成器相关</p>
<ul>
<li>range() 生成数据</li>
<li>next() 迭代器向下执行一次, 内部实际使⽤用了__ next__()⽅方法返回迭代器的下一个项目</li>
<li>iter() 获取迭代器, 内部实际使用的是__ iter__()⽅方法来获取迭代器</li>
</ul>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>for i in range(15,-1,-5):
    print(i)
# 15
# 10
# 5
# 0

lst = [1,2,3,4,5]
it = iter(lst)  #  __iter__()获得迭代器
print(it.__next__())  #1
print(next(it)) #2  __next__()  
print(next(it))  #3
print(next(it))  #4</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i54.4cd567f452Vvz8">5. 字符串类型代码的执行</p>
<ul>
<li>eval() 执行字符串类型的代码. 并返回最终结果</li>
<li>exec() 执行字符串类型的代码</li>
<li>compile() 将字符串类型的代码编码. 代码对象能够通过exec语句来执行或者eval()进行求值</li>
</ul>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>s1 = input("请输入a+b:")  #输入:8+9
print(eval(s1))  # 17 可以动态的执行代码. 代码必须有返回值

s2 = "for i in range(5): print(i)"
a = exec(s2) # exec 执行代码不返回任何内容
# 0
# 1
# 2
# 3
# 4
print(a)  #None

# 动态执行代码
exec("""
def func():
    print(" 我是周杰伦")
""" )
func()  #我是周杰伦</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>code1 = "for i in range(3): print(i)"
com = compile(code1, "", mode="exec")   # compile并不会执行你的代码.只是编译
exec(com)   # 执行编译的结果
# 0
# 1
# 2

code2 = "5+6+7"
com2 = compile(code2, "", mode="eval")
print(eval(com2))  # 18

code3 = "name = input('请输入你的名字:')"  #输入:hello
com3 = compile(code3, "", mode="single")
exec(com3)
print(name)  #hello</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p>6. 输入输出</p>
<ul>
<li>print() : 打印输出</li>
<li>input() : 获取用户输出的内容</li>
</ul>
<div class="cnblogs_code">
<pre>print("hello", "world", sep="*", end="@") # sep:打印出的内容用什么连接,end:以什么为结尾
#hello*world@</pre>
</div>
<p><span data-spm-anchor-id="a2c4e.11153940.0.i59.4cd567f452Vvz8">7. 内存相关</span></p>
<p>hash() : 获取到对象的哈希值(int, str, bool, tuple). hash算法:(1) 目的是唯一性 (2) dict 查找效率非常高, hash表.用空间换的时间 比较耗费内存</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<pre>s = 'alex'
print(hash(s))  #-168324845050430382

lst = [1, 2, 3, 4, 5]
print(hash(lst))  #报错,列表是不可哈希的
　　id() :  获取到对象的内存地址

s = 'alex'
print(id(s))  #2278345368944</pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
</div>
<p><span data-spm-anchor-id="a2c4e.11153940.0.i63.4cd567f452Vvz8">8.文件操作相关</span></p>
<p>open() : 用于打开一个文件, 创建一个文件句柄</p>
<div class="cnblogs_code">
<pre>f = open('file',mode='r',encoding='utf-8')
f.read()
f.close()</pre>
</div>
<p>9. 模块相关</p>
<p>__ import__() : 用于动态加载类和函数</p>
<div class="cnblogs_code">
<pre># 让用户输入一个要导入的模块
import os
name = input("请输入你要导入的模块:")
__import__(name)    # 可以动态导入模块</pre>
</div>
<p data-spm-anchor-id="a2c4e.11153940.0.i67.4cd567f452Vvz8">10. 帮助</p>
<p>help() : 函数用于查看函数或模块用途的详细说明</p>
<div class="cnblogs_code">
<pre>print(help(str))  #查看字符串的用途</pre>
</div>
<p>11. 调用相关</p>
<p>callable() : 用于检查一个对象是否是可调用的. 如果返回True, object有可能调用失败, 但如果返回False. 那调用绝对不会成功</p>
<div class="cnblogs_code">
<pre>a = 10
print(callable(a))  #False  变量a不能被调用
#
def f():
    print("hello")
print(callable(f))   # True 函数是可以被调用的</pre>
</div>
<p>12. 查看内置属性</p>
<p>dir() : 查看对象的内置属性, 访问的是对象中的__dir__()方法</p>
<div class="cnblogs_code">
<pre>print(dir(tuple))  #查看元组的方法</pre>
</div>]]></description></item><item><title>【Python】变量命名习惯</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/09/12011744.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 09 Dec 2019 08:20:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/09/12011744.html</guid><description><![CDATA[<p><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191209161933174-182773348.png" alt="" /></p>
<p>&nbsp;</p>
<p><span style="font-size: 14pt;">&nbsp;仅供参考，个人习惯</span></p>]]></description></item><item><title>【Python】 基础语法</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/09/12011696.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 09 Dec 2019 08:16:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/09/12011696.html</guid><description><![CDATA[<p>Python 语言与 Perl，C 和 Java 等语言有许多相似之处。但是，也存在一些差异。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>第一个 Python 程序</h2>
<p><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191209160617396-1723046324.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18pt;"><strong>&nbsp;欢迎，入坑！</strong></span></p>
<h2>Python 标识符</h2>
<p>在 Python 里，标识符由字母、数字、下划线组成。</p>
<p>在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。</p>
<p>Python 中的标识符是区分大小写的。</p>
<p>以下划线开头的标识符是有特殊意义的。以单下划线开头&nbsp;<span class="marked">_foo&nbsp;的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用&nbsp;<span class="marked">from xxx import *&nbsp;而导入。</span></span></p>
<p>以双下划线开头的&nbsp;<span class="marked">__foo&nbsp;代表类的私有成员，以双下划线开头和结尾的&nbsp;<span class="marked">__foo__&nbsp;代表 Python 里特殊方法专用的标识，如&nbsp;<span class="marked">__init__()&nbsp;代表类的构造函数。</span></span></span></p>
<p>Python 可以同一行显示多条语句，方法是用分号&nbsp;<span class="marked">;&nbsp;分开，如：</span></p>
<div class="cnblogs_code">
<pre>&gt;&gt;&gt; <span style="color: #0000ff;">print</span> (<span style="color: #800000;">'你好</span><span style="color: #800000;">'</span>);<span style="color: #0000ff;">print</span> (<span style="color: #800000;">'世界</span><span style="color: #800000;">'</span><span style="color: #000000;">);
你好<br />世界</span></pre>
</div>
<h2>Python 保留字符</h2>
<p>下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。</p>
<p>所有 Python 的关键字只包含小写字母。</p>
<table class="reference">
<tbody>
<tr>
<td>and</td>
<td>exec</td>
<td>not</td>
</tr>
<tr>
<td>assert</td>
<td>finally</td>
<td>or</td>
</tr>
<tr>
<td>break</td>
<td>for</td>
<td>pass</td>
</tr>
<tr>
<td>class</td>
<td>from</td>
<td>print</td>
</tr>
<tr>
<td>continue</td>
<td>global</td>
<td>raise</td>
</tr>
<tr>
<td>def</td>
<td>if</td>
<td>return</td>
</tr>
<tr>
<td>del</td>
<td>import</td>
<td>try</td>
</tr>
<tr>
<td>elif</td>
<td>in</td>
<td>while</td>
</tr>
<tr>
<td>else</td>
<td>is</td>
<td>with</td>
</tr>
<tr>
<td>except</td>
<td>lambda</td>
<td>yield</td>
</tr>
</tbody>
</table>
<hr />
<h2>行和缩进</h2>
<p>学习 Python 与其他语言最大的区别就是，Python 的代码块不使用大括号&nbsp;<span class="marked">{}&nbsp;来控制类，函数以及其他逻辑判断。python 最具特色的就是用缩进来写模块。</span></p>
<p>缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p>
<p>以下实例缩进为四个空格:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span><span style="color: #000000;"> True:
    </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">True</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">False</span><span style="color: #800000;">"</span>)</pre>
</div>
<p>以下代码将会执行错误：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python</span><span style="color: #008000;">
#</span><span style="color: #008000;"> -*- coding: UTF-8 -*-</span><span style="color: #008000;">
#</span><span style="color: #008000;"> 文件名：test.py</span>

<span style="color: #0000ff;">if</span><span style="color: #000000;"> True:
    </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">Answer</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">True</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">Answer</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    </span><span style="color: #008000;">#</span><span style="color: #008000;"> 没有严格缩进，在执行时会报错</span>
  <span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">False</span><span style="color: #800000;">"</span>)</pre>
</div>
<p>执行以上代码，会出现如下错误提醒：</p>
<div class="cnblogs_code">
<pre> File <span style="color: #800000;">"</span><span style="color: #800000;">test.py</span><span style="color: #800000;">"</span>, line 11
    <span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">False</span><span style="color: #800000;">"</span><span style="color: #000000;">)
                  </span>^<span style="color: #000000;">
IndentationError: unindent does </span><span style="color: #0000ff;">not</span> match any outer indentation level</pre>
</div>
<p><strong>IndentationError: unindent does not match any outer indentation level</strong>错误表明，你使用的缩进方式不一致，有的是 tab 键缩进，有的是空格缩进，改为一致即可。</p>
<p>如果是&nbsp;<strong>IndentationError: unexpected indent</strong>&nbsp;错误, 则 python 编译器是在告诉你"<span class="marked">Hi，老兄，你的文件里格式不对了，可能是tab和空格没对齐的问题"，所有 python 对格式要求非常严格。(没办法~)</span></p>
<p>因此，在 Python 的代码块中必须使用相同数目的行首缩进空格数。</p>
<p>建议你在每个缩进层次使用&nbsp;<strong>单个制表符</strong>&nbsp;或&nbsp;<strong>两个空格</strong>&nbsp;或&nbsp;<strong>四个空格</strong>&nbsp;, 切记不能混用</p>
<h2>多行语句</h2>
<p>Python语句中一般以新行作为语句的结束符。</p>
<p>但是我们可以使用斜杠（ \）将一行的语句分为多行显示，如下所示：</p>
<div class="cnblogs_code">
<pre>total = item_one +<span style="color: #000000;"> \
        item_two </span>+<span style="color: #000000;"> \
        item_three</span></pre>
</div>
<p>语句中包含 [], {} 或 () 括号就不需要使用多行连接符。如下实例：</p>
<div class="cnblogs_code">
<pre>days = [<span style="color: #800000;">'</span><span style="color: #800000;">Monday</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">Tuesday</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">Wednesday</span><span style="color: #800000;">'</span><span style="color: #000000;">,
        </span><span style="color: #800000;">'</span><span style="color: #800000;">Thursday</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">Friday</span><span style="color: #800000;">'</span>]</pre>
</div>
<h2>Python 引号</h2>
<p>Python 可以使用引号(&nbsp;<strong>'</strong>&nbsp;)、双引号(&nbsp;<strong>"</strong>&nbsp;)、三引号(&nbsp;<strong>'''</strong>&nbsp;或&nbsp;<strong>"""</strong>&nbsp;) 来表示字符串，引号的开始与结束必须的相同类型的。</p>
<p>其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。</p>
<div class="cnblogs_code">
<pre>word = <span style="color: #800000;">'</span><span style="color: #800000;">word</span><span style="color: #800000;">'</span><span style="color: #000000;">
sentence </span>= <span style="color: #800000;">"</span><span style="color: #800000;">这是一个句子。</span><span style="color: #800000;">"</span><span style="color: #000000;">
paragraph </span>= <span style="color: #800000;">"""</span><span style="color: #800000;">这是一个段落。
包含了多个语句</span><span style="color: #800000;">"""</span></pre>
</div>
<h2>Python空行</h2>
<p>函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。</p>
<p>空行与代码缩进不同，空行并不是Python语法的一部分。书写时不插入空行，Python解释器运行也不会出错。但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。</p>
<p>记住：空行也是程序代码的一部分。</p>
<h2>print 输出</h2>
<p>print 默认输出是换行的，如果要实现不换行需要在变量末尾加上逗号&nbsp;<span class="marked">,。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python</span><span style="color: #008000;">
#</span><span style="color: #008000;"> -*- coding: UTF-8 -*-</span>
<span style="color: #000000;">
x</span>=<span style="color: #800000;">"</span><span style="color: #800000;">a</span><span style="color: #800000;">"</span><span style="color: #000000;">
y</span>=<span style="color: #800000;">"</span><span style="color: #800000;">b</span><span style="color: #800000;">"</span>
<span style="color: #008000;">#</span><span style="color: #008000;"> 换行输出</span>
<span style="color: #0000ff;">print</span><span style="color: #000000;"> x
</span><span style="color: #0000ff;">print</span><span style="color: #000000;"> y

</span><span style="color: #0000ff;">print</span> <span style="color: #800000;">'</span><span style="color: #800000;">---------</span><span style="color: #800000;">'</span>
<span style="color: #008000;">#</span><span style="color: #008000;"> 不换行输出</span>
<span style="color: #0000ff;">print</span><span style="color: #000000;"> x,
</span><span style="color: #0000ff;">print</span><span style="color: #000000;"> y,

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 不换行输出</span>
<span style="color: #0000ff;">print</span> x,y</pre>
</div>
<p>以上实例执行结果为：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">a
b
</span>---------<span style="color: #000000;">
a b a b</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【Python】 注释</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/09/12011546.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 09 Dec 2019 08:01:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/09/12011546.html</guid><description><![CDATA[<p>确保对模块, 函数, 方法和行内注释使用正确的风格</p>
<p>Python中的注释有单行注释和多行注释：</p>
<p>Python中单行注释以&nbsp;<span class="marked">#&nbsp;开头，例如：：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;"> 这是一个注释</span>
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">Hello, World!</span><span style="color: #800000;">"</span>)</pre>
</div>
<p>多行注释用三个单引号&nbsp;<span class="marked">'''&nbsp;或者三个双引号&nbsp;<span class="marked">"""&nbsp;将注释括起来，例如:</span></span></p>
<h3>1、单引号（'''）</h3>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python3 </span>
<span style="color: #800000;">'''</span><span style="color: #800000;">
这是多行注释，用三个单引号
这是多行注释，用三个单引号 
这是多行注释，用三个单引号
</span><span style="color: #800000;">'''</span>
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">Hello, World!</span><span style="color: #800000;">"</span>)</pre>
</div>
<h3>2、双引号（"""）</h3>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python3 </span>
<span style="color: #800000;">"""</span><span style="color: #800000;">
这是多行注释，用三个双引号
这是多行注释，用三个双引号 
这是多行注释，用三个双引号
</span><span style="color: #800000;">"""</span>
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">Hello, World!</span><span style="color: #800000;">"</span>)</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】输入10个人的成绩，求平均值</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/08/12006551.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sun, 08 Dec 2019 10:09:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/08/12006551.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    </span><span style="color: #0000ff;">float</span> sum = <span style="color: #800080;">0</span>,score[<span style="color: #800080;">100</span><span style="color: #000000;">];
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入10个数字：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
    {
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">score[i]);
        sum </span>= sum +<span style="color: #000000;"> score[i];
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">平均成绩为：%.1f</span><span style="color: #800000;">"</span>,sum / <span style="color: #800080;">10</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【Markdown】新手快速入门基础教程</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12003740.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 14:27:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12003740.html</guid><description><![CDATA[<p><strong>Markdown&nbsp;</strong>是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br />当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。<br />推荐使用 Typora 编辑器，它支持 MacOS 、Windows、Linux 平台，且包含多种主题，编辑后直接渲染出效果。附上Typora 官网：<a class="uri" href="https://typora.io/">https://typora.io/</a></p>
<h2 id="一标题">一、标题</h2>
<p>使用#号可表示 1-6 级标题，一级标题对应一个#号，二级标题对应两个#号，以此类推。<br />注：标准语法一般在#后跟个空格再写文字</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs shell"><span class="hljs-meta">#<span class="bash"> 这是一级标题
<span class="hljs-meta">
#<span class="bash"><span class="hljs-comment"># 这是二级标题
<span class="hljs-meta">
#<span class="bash"><span class="hljs-comment">## 这是三级标题
<span class="hljs-meta">
#<span class="bash"><span class="hljs-comment">### 这是四级标题
<span class="hljs-meta">
#<span class="bash"><span class="hljs-comment">#### 这是五级标题
<span class="hljs-meta">
#<span class="bash"><span class="hljs-comment">##### 这是六级标题</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
<p><strong>效果：</strong></p>
<h1 id="这是一级标题">这是一级标题</h1>
<h2 id="这是二级标题">这是二级标题</h2>
<h3 id="这是三级标题">这是三级标题</h3>
<h4 id="这是四级标题">这是四级标题</h4>
<h5 id="这是五级标题">这是五级标题</h5>
<h6 id="这是六级标题">这是六级标题</h6>
<hr />
<h2 id="二字体">二、字体</h2>
<p><strong>加粗</strong></p>
<p>文字左右分别用两个*号包起来</p>
<p><strong>斜体</strong></p>
<p>文字左右分别用一个*号包起来</p>
<p><strong>斜体加粗</strong></p>
<p>文字左右分别用三个*号包起来</p>
<p><strong>删除线</strong></p>
<p>文字左右分别用两个~~号包起来</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs markdown"><span class="hljs-strong">**这是加粗的文字**
<span class="hljs-emphasis">*这是倾斜的文字*`
<span class="hljs-strong">***这是斜体加粗的文字***
~~这是加删除线的文字~~</span></span></span></code></pre>
<p><strong>效果：</strong></p>
<p><strong>这是加粗的文字</strong><br /><em>这是倾斜的文字</em>`<br /><strong><em>这是斜体加粗的文字</em></strong><br /><del>这是加删除线的文字</del></p>
<hr />
<h2 id="三引用">三、引用</h2>
<p>在引用的文字前加&gt;即可，引用可以嵌套。</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs shell"><span class="hljs-meta">&gt;<span class="bash">这是引用的内容
<span class="hljs-meta">&gt;<span class="bash">&gt;这是引用的内容</span></span></span></span></code></pre>
<p><strong>效果：</strong></p>
<blockquote>
<p>这是引用的内容</p>
<blockquote>
<p>这是引用的内容</p>
</blockquote>
</blockquote>
<p><strong>列表中使用</strong></p>
<p><strong>示例</strong>：</p>
<pre><code class="hljs markdown"><span class="hljs-bullet">* 第一项
<span class="hljs-code">    &gt; 引用1
<span class="hljs-code">    &gt; 引用2
<span class="hljs-bullet">* 第二项</span></span></span></span></code></pre>
<p><strong>效果：</strong></p>
<ul>
<li>
<p>第一项</p>
<blockquote>
<p>引用1<br />引用2</p>

</blockquote>

</li>
<li>
<p>第二项</p>

</li>

</ul>
<hr />
<h2 id="四分割线">四、分割线</h2>
<p>三个或者三个以上的 - 或者 * 都可以。</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs yaml"><span class="hljs-bullet">-<span class="hljs-meta">---
</span></span></code></pre>
<p><strong>效果：</strong></p>
<hr />
<h2 id="五图片">五、图片</h2>
<pre><code class="hljs markdown">![<span class="hljs-string">图片alt](<span class="hljs-link">图片地址 ''图片title'')

图片alt就是显示在图片下面的文字，相当于对图片内容的解释。
图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span></span></code></pre>
<p><strong>示例：</strong></p>
<pre><code class="hljs markdown">![<span class="hljs-string">博客园logo](<span class="hljs-link">&lt;https://www.cnblogs.com/images/logo_small.gif&gt; ''博客园logo'')</span></span></code></pre>
<p><strong>效果：</strong></p>
<p><img title="'博客园logo'" src="https://www.cnblogs.com/images/logo_small.gif" alt="博客园logo" /></p>
<hr />
<h2 id="六超链接">六、超链接</h2>
<pre><code class="hljs markdown">[<span class="hljs-string">超链接名](<span class="hljs-link">超链接地址 "超链接title")
title可加可不加</span></span></code></pre>
<p><strong>示例：</strong></p>
<pre><code class="hljs markdown">[<span class="hljs-string">百度](<span class="hljs-link">http://www.baidu.com)</span></span></code></pre>
<p><strong>效果：</strong></p>
<p><a href="http://www.baidu.com/">百度</a></p>
<h2 id="七列表">七、列表</h2>
<p>支持有序列表和无序列表。</p>
<p>无序列表使用星号(*****)、加号(<strong>+</strong>)或是减号(<strong>-</strong>)作为列表标记，效果相同。</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs markdown"><span class="hljs-bullet">* 第一项
<span class="hljs-bullet">* 第二项
<span class="hljs-bullet">* 第三项</span></span></span></code></pre>
<p><strong>效果：</strong></p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<p>有序列表使用数字并加上&nbsp;<strong>.</strong>&nbsp;号来表示。</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs markdown"><span class="hljs-bullet">1. 第一项
<span class="hljs-bullet">2. 第二项
<span class="hljs-bullet">3. 第三项</span></span></span></code></pre>
<p><strong>效果：</strong></p>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<p><strong>列表嵌套</strong></p>
<p>列表嵌套只需在子列表中的选项添加四个空格即可。</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs markdown"><span class="hljs-bullet">1. 第一项：
<span class="hljs-code">    - 第一项嵌套的第一个元素
<span class="hljs-code">    - 第一项嵌套的第二个元素
<span class="hljs-bullet">2. 第二项：
<span class="hljs-code">    - 第二项嵌套的第一个元素
<span class="hljs-code">    - 第二项嵌套的第一个元素</span></span></span></span></span></span></code></pre>
<p><strong>效果：</strong></p>
<ol>
<li>第一项：
<ul>
<li>第一项嵌套的第一个元素</li>
<li>第一项嵌套的第二个元素</li>
</ul>
</li>
<li>第二项：
<ul>
<li>第二项嵌套的第一个元素</li>
<li>第二项嵌套的第一个元素</li>
</ul>
</li>
</ol><hr />
<h2 id="八代码">八、代码</h2>
<p>单行代码：代码之间分别用一个反引号包起来</p>
<p>代码区块：可以用&nbsp;<strong>```</strong>&nbsp;包裹一段代码，并指定一种语言（也可以不指定），也可以使用 4 个空格或者一个制表符（Tab 键）</p>
<p><strong>示例：</strong></p>
<pre><code class="hljs javascript"><span class="hljs-string">`printf("hello")` 

​<span class="hljs-string">``<span class="hljs-string">`python
a = hello world
print(a)
​`<span class="hljs-string">``</span></span></span></span></code></pre>
<p><strong>效果：</strong></p>
<p><code>printf("hello")</code></p>
<pre class="python"><code class="hljs">a = hello world
print(a)</code></pre>
<hr />
<h2 id="九表格">九、表格</h2>
<p>制作表格使用&nbsp;<strong>|</strong>&nbsp;来分隔不同的单元格，使用&nbsp;<strong>-</strong>&nbsp;来分隔表头和其他行。</p>
<p><strong>对齐方式</strong></p>
<ul>
<li><strong>-:</strong>&nbsp;设置内容和标题栏居右对齐。</li>
<li><strong>:-</strong>&nbsp;设置内容和标题栏居左对齐。</li>
<li><strong>:-:</strong>&nbsp;设置内容和标题栏居中对齐。</li>
</ul>
<p><strong>示例：</strong></p>
<pre><code class="hljs ruby"><span class="hljs-params">| 左对齐 | 右对齐 <span class="hljs-params">| 居中对齐 |
<span class="hljs-params">| :-----| ----: <span class="hljs-params">| :----: |
<span class="hljs-params">| 单元格 | 单元格 <span class="hljs-params">| 单元格 |
<span class="hljs-params">| 单元格 | 单元格 <span class="hljs-params">| 单元格 |</span></span></span></span></span></span></span></span></code></pre>
<p><strong>效果：</strong></p>
<table>
<thead>
<tr class="header"><th>左对齐</th><th>右对齐</th><th>居中对齐</th></tr>
</thead>
<tbody>
<tr class="odd">
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr class="even">
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody>
</table>
<p><img src="https://img2018.cnblogs.com/blog/1641374/201903/1641374-20190325214232693-296506501.png" alt="" /></p>
<blockquote>
<p>参考：<a class="uri" href="http://www.runoob.com/markdown/md-tutorial.html">http://www.runoob.com/markdown/md-tutorial.html</a></p>
</blockquote>]]></description></item><item><title>【Python】 平方根</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002946.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 10:55:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002946.html</guid><description><![CDATA[<p>平方根，又叫二次方根，表示为〔&radic;￣〕，如：数学语言为：&radic;￣16=4。语言描述为：根号下16=4。</p>
<p>以下实例为通过用户输入一个数字，并计算这个数字的平方根：</p>
<div class="cnblogs_code">
<pre>num = float(input(<span style="color: #800000;">'</span><span style="color: #800000;">请输入一个数字： </span><span style="color: #800000;">'</span><span style="color: #000000;">))
num_sqrt </span>= num ** 0.5
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;"> %0.3f 的平方根为 %0.3f</span><span style="color: #800000;">'</span>%(num ,num_sqrt))</pre>
</div>
<p>执行以上代码输出结果为：</p>
<div class="cnblogs_code">
<pre>请输入一个数字： 4
 4.000 的平方根为 2.000</pre>
</div>
<p>在该实例中，我们通过用户输入一个数字，并使用指数运算符 ** 来计算该数的平方根。</p>
<p>该程序只适用于正数。负数和复数可以使用以下的方式：</p>
<div class="cnblogs_code">
<pre> 
<span style="color: #008000;">#</span><span style="color: #008000;"> 计算实数和复数平方根</span><span style="color: #008000;">
#</span><span style="color: #008000;"> 导入复数数学模块</span>
 
<span style="color: #0000ff;">import</span><span style="color: #000000;"> cmath
 
num </span>= int(input(<span style="color: #800000;">"</span><span style="color: #800000;">请输入一个数字: </span><span style="color: #800000;">"</span><span style="color: #000000;">))
num_sqrt </span>=<span style="color: #000000;"> cmath.sqrt(num)
</span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">{0} 的平方根为 {1:0.3f}+{2:0.3f}j</span><span style="color: #800000;">'</span>.format(num ,num_sqrt.real,num_sqrt.imag))</pre>
</div>
<p>执行以上代码输出结果为：</p>
<div class="cnblogs_code">
<pre>请输入一个数字: -8
-8 的平方根为 0.000+2.828j</pre>
</div>
<p>该实例中，我们使用了 cmath (complex math) 模块的 sqrt() 方法。</p>]]></description></item><item><title>【Python】 数字求和</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002937.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 10:50:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002937.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;"> 用户输入数字</span>
num1 = input(<span style="color: #800000;">'</span><span style="color: #800000;">输入第一个数字：</span><span style="color: #800000;">'</span><span style="color: #000000;">)
num2 </span>= input(<span style="color: #800000;">'</span><span style="color: #800000;">输入第二个数字：</span><span style="color: #800000;">'</span><span style="color: #000000;">)
 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 求和</span>
sum = float(num1) +<span style="color: #000000;"> float(num2)
 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 显示计算结果</span>
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">数字 {0} 和 {1} 相加结果为： {2}</span><span style="color: #800000;">'</span>.format(num1, num2, sum))</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【Python】文件下载小助手</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002930.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 10:46:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002930.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">import</span><span style="color: #000000;"> requests  
</span><span style="color: #0000ff;">from</span> contextlib <span style="color: #0000ff;">import</span><span style="color: #000000;"> closing

</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> ProgressBar(object):  
    </span><span style="color: #0000ff;">def</span> <span style="color: #800080;">__init__</span>(self, title, count=0.0, run_status=None, fin_status=None, total=100.0, unit=<span style="color: #800000;">''</span>, sep=<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>, chunk_size=1.0<span style="color: #000000;">):  
        super(ProgressBar, self).</span><span style="color: #800080;">__init__</span><span style="color: #000000;">()  
        self.info </span>= <span style="color: #800000;">"</span><span style="color: #800000;">[%s] %s %.2f %s %s %.2f %s</span><span style="color: #800000;">"</span><span style="color: #000000;">  
        self.title </span>=<span style="color: #000000;"> title  
        self.total </span>=<span style="color: #000000;"> total  
        self.count </span>=<span style="color: #000000;"> count  
        self.chunk_size </span>=<span style="color: #000000;"> chunk_size  
        self.status </span>= run_status <span style="color: #0000ff;">or</span> <span style="color: #800000;">""</span><span style="color: #000000;">  
        self.fin_status </span>= fin_status <span style="color: #0000ff;">or</span> <span style="color: #800000;">"</span> <span style="color: #800000;">"</span> *<span style="color: #000000;"> len(self.status)  
        self.unit </span>=<span style="color: #000000;"> unit  
        self.seq </span>=<span style="color: #000000;"> sep  
  
    </span><span style="color: #0000ff;">def</span> <span style="color: #800080;">__get_info</span><span style="color: #000000;">(self):  
        </span><span style="color: #008000;">#</span><span style="color: #008000;">[名称] 状态 进度 单位 分割线 总数 单位  </span>
        _info = self.info % (self.title, self.status, self.count/self.chunk_size, self.unit, self.seq, self.total/<span style="color: #000000;">self.chunk_size, self.unit)  
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> _info  
  
    </span><span style="color: #0000ff;">def</span> refresh(self, count = 1, status =<span style="color: #000000;"> None):  
        self.count </span>+=<span style="color: #000000;"> count  
        self.status </span>= status <span style="color: #0000ff;">or</span><span style="color: #000000;"> self.status  
        end_str </span>= <span style="color: #800000;">"</span><span style="color: #800000;">\r</span><span style="color: #800000;">"</span>  
        <span style="color: #0000ff;">if</span> self.count &gt;=<span style="color: #000000;"> self.total:  
            end_str </span>= <span style="color: #800000;">'</span><span style="color: #800000;">\n</span><span style="color: #800000;">'</span><span style="color: #000000;">  
            self.status </span>= status <span style="color: #0000ff;">or</span><span style="color: #000000;"> self.fin_status  
        </span><span style="color: #0000ff;">print</span>(self.<span style="color: #800080;">__get_info</span>(), end=<span style="color: #000000;">end_str, )  


</span><span style="color: #0000ff;">if</span> <span style="color: #800080;">__name__</span> == <span style="color: #800000;">'</span><span style="color: #800000;">__main__</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">*</span><span style="color: #800000;">'</span> * 100<span style="color: #000000;">)
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">\t\t\t\t欢迎使用文件下载小助手</span><span style="color: #800000;">'</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">作者:muzihuaner https://www.cnblogs.com/HGNET/</span><span style="color: #800000;">'</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">*</span><span style="color: #800000;">'</span> * 100<span style="color: #000000;">)
    url  </span>= input(<span style="color: #800000;">'</span><span style="color: #800000;">请输入需要下载的文件链接:\n</span><span style="color: #800000;">'</span><span style="color: #000000;">)
    filename </span>= url.split(<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>)[-1<span style="color: #000000;">]
    with closing(requests.get(url, stream</span>=<span style="color: #000000;">True)) as response:  
        chunk_size </span>= 1024<span style="color: #000000;">  
        content_size </span>= int(response.headers[<span style="color: #800000;">'</span><span style="color: #800000;">content-length</span><span style="color: #800000;">'</span><span style="color: #000000;">])  
        </span><span style="color: #0000ff;">if</span> response.status_code == 200<span style="color: #000000;">:
            </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">文件大小:%0.2f KB</span><span style="color: #800000;">'</span> % (content_size /<span style="color: #000000;"> chunk_size))
            progress </span>= ProgressBar(<span style="color: #800000;">"</span><span style="color: #800000;">%s下载进度</span><span style="color: #800000;">"</span> %<span style="color: #000000;"> filename
                        , total </span>=<span style="color: #000000;"> content_size  
                        , unit </span>= <span style="color: #800000;">"</span><span style="color: #800000;">KB</span><span style="color: #800000;">"</span><span style="color: #000000;">  
                        , chunk_size </span>=<span style="color: #000000;"> chunk_size  
                        , run_status </span>= <span style="color: #800000;">"</span><span style="color: #800000;">正在下载</span><span style="color: #800000;">"</span><span style="color: #000000;">  
                        , fin_status </span>= <span style="color: #800000;">"</span><span style="color: #800000;">下载完成</span><span style="color: #800000;">"</span><span style="color: #000000;">)  

            with open(filename, </span><span style="color: #800000;">"</span><span style="color: #800000;">wb</span><span style="color: #800000;">"</span><span style="color: #000000;">) as file:  
                    </span><span style="color: #0000ff;">for</span> data <span style="color: #0000ff;">in</span> response.iter_content(chunk_size=<span style="color: #000000;">chunk_size):  
                        file.write(data)  
                        progress.refresh(count</span>=<span style="color: #000000;">len(data))  
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
            </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">链接异常</span><span style="color: #800000;">'</span>)</pre>
</div>
<p>&nbsp;&nbsp;</p>]]></description></item><item><title>【Python爬虫程序】抓取MM131美女图片，并将这些图片下载到本地指定文件夹。</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002793.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 09:59:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002793.html</guid><description><![CDATA[<h1>一、项目名称</h1>
<p>抓取<a href="http://www.mm131.net/" rel="nofollow">MM131美女写真</a>图片，并将这些图片下载到本地指定文件夹。</p>
<p>共有6种类型的美女图片：</p>
<ol>
<li>
<p>性感美女</p>
</li>
<li>
<p>清纯美眉</p>
</li>
<li>
<p>美女校花</p>
</li>
<li>
<p>性感车模</p>
</li>
<li>
<p>旗袍美女</p>
</li>
<li>
<p>明星写真</p>
</li>
</ol>
<p>抓取后的效果图如下，每个图集是一个独立的文件夹：</p>
<p><a href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/blob/master/image/pic1.jpg" rel="noopener noreferrer" target="_blank"><img src="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/raw/master/image/pic1.jpg" alt="图片保存的文件夹" /></a></p>
<p>&nbsp;</p>
<h2><a id="user-content-二项目目的" class="anchor" href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures#%E4%BA%8C%E9%A1%B9%E7%9B%AE%E7%9B%AE%E7%9A%84"></a>二、项目目的</h2>
<p>抓取美女写真图片，能有啥目的，纯粹是为了技术，顺便养养眼，不行吗？</p>
<p>另外，可以分析不同图片类型的图集数量、图片数量，以此来判断什么类型的图片最受欢迎。</p>
<h2><a id="user-content-三项目要求" class="anchor" href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures#%E4%B8%89%E9%A1%B9%E7%9B%AE%E8%A6%81%E6%B1%82"></a>三、项目要求</h2>
<ol>
<li>
<p>成功抓取到图片，并将图片进行重命名后保存到指定的文件夹，文件夹使用图集的名称</p>
</li>
<li>
<p>开始下载后，要有下载进度的提示，当前已下载图集数、剩余图集数、正在下载第几张图片，类似这样：</p>
</li>
</ol>
<p><a href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/blob/master/image/pic4.jpeg" rel="noopener noreferrer" target="_blank"><img src="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/raw/master/image/pic4.jpeg" alt="下载提示" /></a></p>
<ol start="3">
<li>
<p>也可以增加一些其他功能，例如，请求多长时间获取不到结果时，该怎么办，这个我没写，留给大家自由发挥了</p>
</li>
<li>
<p>分析不同图片类型的图集数量、图片数量，以此来判断什么类型的图片最受欢迎，这个我没做，留给大家，前面会做了，这个就很简单了</p>
</li>
</ol>
<h2><a id="user-content-四步骤" class="anchor" href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures#%E5%9B%9B%E6%AD%A5%E9%AA%A4"></a>四、步骤</h2>
<p>声明一下，这个是我自己的思路，一定不是最好的，大家可以有更好的思路，欢迎交流。</p>
<p>步骤1：写一个函数，用于获取某一个图片类型每一页的页面链接，如 清纯美眉，共31页，需要将每一页的页面链接拿到，</p>
<p>要拿到每一页的链接，需要知道链接的规则，以及一共有多少页，如下图标红处，如何知道某个图片类型共有多少页呢？</p>
<p>也就是怎么把 list_1_31.html 中的 31 拿到呢？</p>
<p><a href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/blob/master/image/pic5.jpeg" rel="noopener noreferrer" target="_blank"><img src="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/raw/master/image/pic5.jpeg" alt="图集链接" /></a></p>
<p>步骤2：写一个函数，用于获取某一个页面的全部图集链接，如 清纯美眉第一页，拿到这个页面的所有的图集链接，</p>
<p>注意看每一个图集的链接，有什么统一的规则</p>
<p><a href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/blob/master/image/pic6.jpeg" rel="noopener noreferrer" target="_blank"><img src="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/raw/master/image/pic6.jpeg" alt="图集链接" /></a></p>
<p>步骤3：写一个函数，用于将某一图集的所有图片保存下来，如 清纯美眉第一个第一个图集，把这个图集的所有图片都保存下来，</p>
<p>注意看每一个图集的图片链接，有什么规则</p>
<p><a href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/blob/master/image/pic7.jpeg" rel="noopener noreferrer" target="_blank"><img src="https://github.com/HuanGeNet/grab_beautiful_girls_pictures/raw/master/image/pic7.jpeg" alt="图集链接" /></a></p>
<p>步骤4：开始执行以上的函数，验证是否得到想要的结果。</p>
<p>建议，仔细研究一下不同图片类型的页面链接、图集链接之间的相同点和不同点，然后构思写代码。不要一次性全部下载，在写每一个函数时，传入一个具体的链接进行测试，保证每个函数都满足要求后，再批量下载。</p>
<h2><a id="user-content-五如何使用" class="anchor" href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures#%E4%BA%94%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8"></a>五、如何使用</h2>
<ol>
<li>
<p>Python3 版本</p>
</li>
<li>
<p>已安装程序需要的库，如 requests、BeautifulSoup、os、time</p>
</li>
</ol>
<h2><a id="user-content-六版权声明" class="anchor" href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures#%E5%85%AD%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E"></a>六、版权声明</h2>
<p>图片版本由其官方网址持有，抓取图片仅供技术交流使用，切勿商用。</p>
<p>本项目来自GitHub，由于MM131换了域名，so我更新了一下</p>
<p>&nbsp;原文章：<a href="https://www.jianshu.com/p/e4a3bf1f95ab">https://www.jianshu.com/p/e4a3bf1f95ab</a></p>
<p>项目地址：<a href="https://github.com/HuanGeNet/grab_beautiful_girls_pictures">https://github.com/HuanGeNet/grab_beautiful_girls_pictures</a></p>]]></description></item><item><title>【Python】爬虫原理</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002156.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 08:17:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002156.html</guid><description><![CDATA[<h2>前言</h2>
<p>简单来说互联网是由一个个站点和网络设备组成的大网，我们通过浏览器访问站点，站点把HTML、JS、CSS代码返回给浏览器，这些代码经过浏览器解析、渲染，将丰富多彩的网页呈现我们眼前；</p>
<p>&nbsp;</p>
<h2>一、爬虫是什么？</h2>
<p>如果我们把互联网比作一张大的蜘蛛网，数据便是存放于蜘蛛网的各个节点，而爬虫就是一只小蜘蛛，</p>
<p>沿着网络抓取自己的猎物（数据）爬虫指的是：向网站发起请求，获取资源后分析并提取有用数据的程序；</p>
<p>从技术层面来说就是 通过程序模拟浏览器请求站点的行为，把站点返回的HTML代码/JSON数据/二进制数据（图片、视频） 爬到本地，进而提取自己需要的数据，存放起来使用；</p>
<p>&nbsp;</p>
<h2><img src="https://images2017.cnblogs.com/blog/1122865/201711/1122865-20171109155619981-1355599979.png" alt="" /></h2>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>二、爬虫的基本流程：</h2>
<p>&nbsp;</p>
<p>用户获取网络数据的方式：</p>
<p>方式1：浏览器提交请求---&gt;下载网页代码---&gt;解析成页面</p>
<p>方式2：模拟浏览器发送请求(获取网页代码)-&gt;提取有用的数据-&gt;存放于数据库或文件中</p>
<p>爬虫要做的就是方式2；</p>
<p>&nbsp;<img src="https://images2017.cnblogs.com/blog/1122865/201711/1122865-20171109155753419-1411600537.png" alt="" /></p>
<p><strong>1、发起请求</strong></p>
<p>使用http库向目标站点发起请求，即发送一个Request</p>
<p>Request包含：请求头、请求体等&nbsp;</p>
<p>Request模块缺陷：不能执行JS 和CSS 代码</p>
<p>&nbsp;</p>
<p><strong>2、获取响应内容</strong></p>
<p>如果服务器能正常响应，则会得到一个Response</p>
<p>Response包含：html，json，图片，视频等</p>
<p>&nbsp;</p>
<p><strong>3、解析内容</strong></p>
<p>解析html数据：正则表达式（RE模块），第三方解析库如Beautifulsoup，pyquery等</p>
<p>解析json数据：json模块</p>
<p>解析二进制数据:以wb的方式写入文件</p>
<p>&nbsp;</p>
<p><strong>4、保存数据</strong></p>
<p>数据库（MySQL，Mongdb、Redis）</p>
<p>文件</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>三、http协议 请求与响应</h2>
<p><img src="https://images2017.cnblogs.com/blog/1122865/201711/1122865-20171109162243872-1491006257.png" alt="" /></p>
<p>&nbsp;</p>
<p>Request：用户将自己的信息通过浏览器（socket client）发送给服务器（socket server）</p>
<p>Response：服务器接收请求，分析用户发来的请求信息，然后返回数据（返回的数据中可能包含其他链接，如：图片，js，css等）</p>
<p>ps：浏览器在接收Response后，会解析其内容来显示给用户，而爬虫程序在模拟浏览器发送请求然后接收Response后，是要提取其中的有用数据。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>四、 request</h2>
<p><strong>1、请求方式：</strong></p>
<p>常见的请求方式：GET / POST</p>
<p>&nbsp;</p>
<p><strong>2、请求的URL</strong></p>
<p>url全球统一资源定位符，用来定义互联网上一个唯一的资源 例如：一张图片、一个文件、一段视频都可以用url唯一确定</p>
<p>&nbsp;</p>
<p>url编码</p>
<p>https://www.baidu.com/s?wd=图片</p>
<p>图片会被编码（看示例代码）</p>
<p>&nbsp;</p>
<p>网页的加载过程是：</p>
<p>加载一个网页，通常都是先加载document文档，</p>
<p>在解析document文档的时候，遇到链接，则针对超链接发起下载图片的请求</p>
<p>&nbsp;</p>
<p><strong>3、请求头</strong></p>
<p>User-agent：请求头中如果没有user-agent客户端配置，服务端可能将你当做一个非法用户host；</p>
<p>cookies：cookie用来保存登录信息</p>
<p>注意： 一般做爬虫都会加上请求头</p>
<p><img src="https://images2017.cnblogs.com/blog/1122865/201711/1122865-20171109164328044-1812809779.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;<img src="https://images2017.cnblogs.com/blog/1122865/201711/1122865-20171109165932544-1148817400.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;<img src="https://images2017.cnblogs.com/blog/1122865/201711/1122865-20171109165421872-1350037263.png" alt="" /></p>
<p>&nbsp;</p>
<p><strong>请求头需要注意的参数：</strong></p>
<p>（1）Referrer：访问源至哪里来（一些大型网站，会通过Referrer 做防盗链策略；所有爬虫也要注意模拟）</p>
<p>（2）User-Agent:访问的浏览器（要加上否则会被当成爬虫程序）</p>
<p>（3）cookie：请求头注意携带</p>
<p>&nbsp;</p>
<p><strong>4、请求体</strong></p>
<pre>请求体
    如果是get方式，请求体没有内容 （get请求的请求体放在 url后面参数中，直接能看到）
    如果是post方式，请求体是format data

    ps：
    1、登录窗口，文件上传等，信息都会被附加到请求体内
    2、登录，输入错误的用户名密码，然后提交，就可以看到post，正确登录后页面通常会跳转，无法捕捉到post</pre>
<p>&nbsp;</p>
<h2>五、 响应Response</h2>
<p><strong>1、响应状态码</strong></p>
<p><strong>　　</strong>200：代表成功</p>
<p>　　301：代表跳转</p>
<p>　　404：文件不存在</p>
<p>　　403：无权限访问</p>
<p>　　502：服务器错误</p>
<p>&nbsp;</p>
<p><strong>2、respone header</strong></p>
<p><br /><strong>响应头需要注意的参数：</strong></p>
<p>（1）Set-Cookie:BDSVRTM=0; path=/：可能有多个，是来告诉浏览器，把cookie保存下来</p>
<p>（2）Content-Location：服务端响应头中包含Location返回浏览器之后，浏览器就会重新访问另一个页面</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>3、preview就是网页源代码</strong></p>
<p>JSO数据</p>
<p>如网页html，图片</p>
<p>二进制数据等&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h2>六、总结</h2>
<p><strong>1、总结爬虫流程：</strong></p>
<p>&nbsp;爬取---&gt;解析---&gt;存储</p>
<p>&nbsp;</p>
<p><strong>2、爬虫所需工具：</strong></p>
<p>&nbsp;请求库：requests,selenium（可以驱动浏览器解析渲染CSS和JS，但有性能劣势（有用没用的网页都会加载）；）<br />&nbsp;解析库：正则，beautifulsoup，pyquery<br />&nbsp;存储库：文件，MySQL，Mongodb，Redis</p>]]></description></item><item><title>C语言最重要的知识点(电子文档)</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002009.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 07:57:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12002009.html</guid><description><![CDATA[<p><strong>总体上必须清楚的</strong><strong>:</strong></p>
<p>&nbsp;<strong>1)</strong><strong>程序结构是三种</strong><strong>: <span style="text-decoration: underline; color: #ff0000;">&nbsp;</span></strong><span style="color: #ff0000;"><strong><span style="text-decoration: underline;">顺序结构</span></strong><strong> 、<span style="text-decoration: underline;">选择结构</span>(分支结构)、<span style="text-decoration: underline;">循环结构</span>。</strong></span></p>
<p><strong>&nbsp;2)</strong><strong>读程序都要从main()入口, 然后从最上面顺序往下读(碰到循环做循环,碰到选择做选择)，<span style="color: #ff0000;">有且只有一个main函数</span>。</strong></p>
<p><strong>&nbsp;3)</strong><strong>计算机的数据在电脑中保存是以 二进制的形式. 数据存放的位置就是 他的地址. </strong></p>
<p><strong>&nbsp;4)bit</strong><strong>是位 是指为0 或者1。 byte 是指字节,<span style="color: #ff0000;"> 一个字节 = 八个位</span>.</strong></p>
<p><strong>概念常考到的：</strong><strong>&nbsp; </strong></p>
<p><strong>3</strong><strong>、每个C语言程序中main函数是有且只有一个。</strong></p>
<p><strong>4</strong><strong>、在函数中不可以再定义函数。</strong></p>
<p><strong>5</strong><strong>、算法：可以没有输入，但是一定要有输出。</strong></p>
<p><strong>6</strong><strong>、break可用于循环结构和switch语句。</strong></p>
<p><strong>7</strong><strong>、逗号运算符的级别最低，赋值的级别倒数第二。</strong></p>
<p>&nbsp;</p>
<p><strong>更多内容，请下载文档</strong></p>
<p><a href="https://www.lanzous.com/i7vytne" target="_blank"><strong>https://www.lanzous.com/i7vytne</strong></a></p>
<p><strong>二维码</strong></p>
<p><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191207155637754-212552072.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【Python】一些函数</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12001795.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 07:17:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12001795.html</guid><description><![CDATA[<h2>Python 数字类型转换</h2>
<p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。</p>
<ul class="list">
<li>
<p><strong>int(x)</strong>&nbsp;将x转换为一个整数。</p>
</li>
<li>
<p><strong>float(x)</strong>&nbsp;将x转换到一个浮点数。</p>
</li>
<li>
<p><strong>complex(x)</strong>&nbsp;将x转换到一个复数，实数部分为 x，虚数部分为 0。</p>
</li>
<li>
<p><strong>complex(x, y)</strong>&nbsp;将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。</p>
</li>
</ul>
<p>以下实例将浮点数变量 a 转换为整数：</p>
<div class="cnblogs_code">
<pre>&gt;&gt;&gt; a = 1.0
&gt;&gt;&gt;<span style="color: #000000;"> int(a)
</span>1</pre>
</div>
<h2>数学函数</h2>
<table class="reference">
<tbody>
<tr><th>函数</th><th>返回值 ( 描述 )</th></tr>
<tr>
<td>abs(x)</td>
<td>返回数字的绝对值，如abs(-10) 返回 10</td>
</tr>
<tr>
<td>ceil(x)</td>
<td>返回数字的上入整数，如math.ceil(4.1) 返回 5</td>
</tr>
<tr>
<td>
<p>cmp(x, y)</p>
</td>
<td>如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1。&nbsp;<strong>Python 3 已废弃，使用 (x&gt;y)-(x&lt;y) 替换</strong>。</td>
</tr>
<tr>
<td>exp(x)</td>
<td>返回e的x次幂(e<sup>x</sup>),如math.exp(1) 返回2.718281828459045</td>
</tr>
<tr>
<td>fabs(x)</td>
<td>返回数字的绝对值，如math.fabs(-10) 返回10.0</td>
</tr>
<tr>
<td>floor(x)</td>
<td>返回数字的下舍整数，如math.floor(4.9)返回 4</td>
</tr>
<tr>
<td>log(x)</td>
<td>如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td>
</tr>
<tr>
<td>log10(x)</td>
<td>返回以10为基数的x的对数，如math.log10(100)返回 2.0</td>
</tr>
<tr>
<td>max(x1, x2,...)</td>
<td>返回给定参数的最大值，参数可以为序列。</td>
</tr>
<tr>
<td>min(x1, x2,...)</td>
<td>返回给定参数的最小值，参数可以为序列。</td>
</tr>
<tr>
<td>modf(x)</td>
<td>返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td>
</tr>
<tr>
<td>pow(x, y)</td>
<td>x**y 运算后的值。</td>
</tr>
<tr>
<td>round(x [,n])</td>
<td>返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。</td>
</tr>
<tr>
<td>sqrt(x)</td>
<td>返回数字x的平方根。</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<hr />
<h2>随机数函数</h2>
<p>随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。</p>
<p>Python包含以下常用随机数函数：</p>
<table class="reference">
<tbody>
<tr><th>函数</th><th>描述</th></tr>
<tr>
<td>choice(seq)</td>
<td>从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。</td>
</tr>
<tr>
<td>randrange ([start,] stop [,step])</td>
<td>从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1</td>
</tr>
<tr>
<td>random()</td>
<td>随机生成下一个实数，它在[0,1)范围内。</td>
</tr>
<tr>
<td>seed([x])</td>
<td>改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。</td>
</tr>
<tr>
<td>shuffle(lst)</td>
<td>将序列的所有元素随机排序</td>
</tr>
<tr>
<td>uniform(x, y)</td>
<td>随机生成下一个实数，它在[x,y]范围内。</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<hr />
<h2>三角函数</h2>
<p>Python包括以下三角函数：</p>
<table class="reference">
<tbody>
<tr><th>函数</th><th>描述</th></tr>
<tr>
<td>acos(x)</td>
<td>返回x的反余弦弧度值。</td>
</tr>
<tr>
<td>asin(x)</td>
<td>返回x的反正弦弧度值。</td>
</tr>
<tr>
<td>atan(x)</td>
<td>返回x的反正切弧度值。</td>
</tr>
<tr>
<td>atan2(y, x)</td>
<td>返回给定的 X 及 Y 坐标值的反正切值。</td>
</tr>
<tr>
<td>cos(x)</td>
<td>返回x的弧度的余弦值。</td>
</tr>
<tr>
<td>hypot(x, y)</td>
<td>返回欧几里德范数 sqrt(x*x + y*y)。</td>
</tr>
<tr>
<td>sin(x)</td>
<td>返回的x弧度的正弦值。</td>
</tr>
<tr>
<td>tan(x)</td>
<td>返回x弧度的正切值。</td>
</tr>
<tr>
<td>degrees(x)</td>
<td>将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0</td>
</tr>
<tr>
<td>radians(x)</td>
<td>将角度转换为弧度</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<hr />
<h2>数学常量</h2>
<p>&nbsp;</p>
<table class="reference">
<tbody>
<tr><th>常量</th><th>描述</th></tr>
<tr>
<td>pi</td>
<td>数学常量 pi（圆周率，一般以&pi;来表示）</td>
</tr>
<tr>
<td>e</td>
<td>数学常量 e，e即自然常数（自然常数）。</td>
</tr>
</tbody>
</table>]]></description></item><item><title>【Python】 运算符</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/07/12001761.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 07 Dec 2019 07:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/07/12001761.html</guid><description><![CDATA[<h2>什么是运算符？</h2>
<p>本章节主要说明Python的运算符。举个简单的例子&nbsp;<strong>4 +5 = 9&nbsp;</strong>。 例子中，<strong>4</strong>&nbsp;和&nbsp;<strong>5</strong>&nbsp;被称为<strong>操作数</strong>，"<strong>+</strong>" 称为运算符。</p>
<p>&nbsp;</p>
<p>接下来让我们一个个来学习Python的运算符。</p>
<h2 id="ysf1">Python算术运算符</h2>
<p>以下假设变量a为10，变量b为21：</p>
<table class="reference">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>+</td>
<td>加 - 两个对象相加</td>
<td>a + b 输出结果 31</td>
</tr>
<tr>
<td>-</td>
<td>减 - 得到负数或是一个数减去另一个数</td>
<td>a - b 输出结果 -11</td>
</tr>
<tr>
<td>*</td>
<td>乘 - 两个数相乘或是返回一个被重复若干次的字符串</td>
<td>a * b 输出结果 210</td>
</tr>
<tr>
<td>/</td>
<td>除 - x 除以 y</td>
<td>b / a 输出结果 2.1</td>
</tr>
<tr>
<td>%</td>
<td>取余 - 返回除法的余数</td>
<td>b % a 输出结果 1</td>
</tr>
<tr>
<td>**</td>
<td>幂 - 返回x的y次幂</td>
<td>a**b 为10的21次方</td>
</tr>
<tr>
<td>//</td>
<td>取整除 - 向下取接近除数的整数</td>
<td>
<pre class="prettyprint prettyprinted"><span class="pun">&gt;&gt;&gt;<span class="pln"> <span class="lit">9<span class="com">//2<span class="pln">
<span class="lit">4<span class="pln">
<span class="pun">&gt;&gt;&gt;<span class="pln"> <span class="pun">-<span class="lit">9<span class="com">//2<span class="pln">
<span class="pun">-<span class="lit">5</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</td>
</tr>
</tbody>
</table>
<p>以下实例演示了Python所有算术运算符的操作：</p>
<div class="example">
<h2 class="example">实例(Python 3.0+)</h2>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python3</span>
<span style="color: #000000;"> 
a </span>= 21<span style="color: #000000;">
b </span>= 10<span style="color: #000000;">
c </span>=<span style="color: #000000;"> 0
 
c </span>= a +<span style="color: #000000;"> b
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">1 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>= a -<span style="color: #000000;"> b
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">2 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>= a *<span style="color: #000000;"> b
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">3 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>= a /<span style="color: #000000;"> b
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">4 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>= a %<span style="color: #000000;"> b
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">5 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 修改变量 a 、b 、c</span>
a = 2<span style="color: #000000;">
b </span>= 3<span style="color: #000000;">
c </span>= a**<span style="color: #000000;">b 
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">6 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
a </span>= 10<span style="color: #000000;">
b </span>= 5<span style="color: #000000;">
c </span>= a//<span style="color: #000000;">b 
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">7 - c 的值为：</span><span style="color: #800000;">"</span>, c)</pre>
</div>
<p>以上实例输出结果：</p>
<div class="cnblogs_code">
<pre>1 - c 的值为： 31
2 - c 的值为： 11
3 - c 的值为： 210
4 - c 的值为： 2.1
5 - c 的值为： 1
6 - c 的值为： 8
7 - c 的值为： 2</pre>
</div>
<h2 id="ysf2">Python比较运算符</h2>
<p>以下假设变量a为10，变量b为20：</p>
<table class="reference">
<tbody>
<tr><th width="10%">运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>==</td>
<td>等于 - 比较对象是否相等</td>
<td>(a == b) 返回 False。</td>
</tr>
<tr>
<td>!=</td>
<td>不等于 - 比较两个对象是否不相等</td>
<td>(a != b) 返回 True。</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于 - 返回x是否大于y</td>
<td>(a &gt; b) 返回 False。</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td>
<td>(a &lt; b) 返回 True。</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于等于 - 返回x是否大于等于y。</td>
<td>(a &gt;= b) 返回 False。</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于 - 返回x是否小于等于y。</td>
<td>(a &lt;= b) 返回 True。</td>
</tr>
</tbody>
</table>
<p>以下实例演示了Python所有比较运算符的操作：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python3</span>
<span style="color: #000000;"> 
a </span>= 21<span style="color: #000000;">
b </span>= 10<span style="color: #000000;">
c </span>=<span style="color: #000000;"> 0
 
</span><span style="color: #0000ff;">if</span> ( a ==<span style="color: #000000;"> b ):
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">1 - a 等于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">1 - a 不等于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
 
</span><span style="color: #0000ff;">if</span> ( a !=<span style="color: #000000;"> b ):
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">2 - a 不等于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">2 - a 等于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
 
</span><span style="color: #0000ff;">if</span> ( a &lt;<span style="color: #000000;"> b ):
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">3 - a 小于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">3 - a 大于等于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
 
</span><span style="color: #0000ff;">if</span> ( a &gt;<span style="color: #000000;"> b ):
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">4 - a 大于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">4 - a 小于等于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 修改变量 a 和 b 的值</span>
a = 5<span style="color: #000000;">;
b </span>= 20<span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> ( a &lt;=<span style="color: #000000;"> b ):
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">5 - a 小于等于 b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">5 - a 大于  b</span><span style="color: #800000;">"</span><span style="color: #000000;">)
 
</span><span style="color: #0000ff;">if</span> ( b &gt;=<span style="color: #000000;"> a ):
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">6 - b 大于等于 a</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
   </span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">6 - b 小于 a</span><span style="color: #800000;">"</span>)</pre>
</div>
<p>以上实例输出结果：</p>
<div class="cnblogs_code">
<pre>1 -<span style="color: #000000;"> a 不等于 b
</span>2 -<span style="color: #000000;"> a 不等于 b
</span>3 -<span style="color: #000000;"> a 大于等于 b
</span>4 -<span style="color: #000000;"> a 大于 b
</span>5 -<span style="color: #000000;"> a 小于等于 b
</span>6 - b 大于等于 a</pre>
</div>
<h2 id="ysf3">Python赋值运算符</h2>
<p>以下假设变量a为10，变量b为20：</p>
<table class="reference">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>=</td>
<td>简单的赋值运算符</td>
<td>c = a + b 将 a + b 的运算结果赋值为 c</td>
</tr>
<tr>
<td>+=</td>
<td>加法赋值运算符</td>
<td>c += a 等效于 c = c + a</td>
</tr>
<tr>
<td>-=</td>
<td>减法赋值运算符</td>
<td>c -= a 等效于 c = c - a</td>
</tr>
<tr>
<td>*=</td>
<td>乘法赋值运算符</td>
<td>c *= a 等效于 c = c * a</td>
</tr>
<tr>
<td>/=</td>
<td>除法赋值运算符</td>
<td>c /= a 等效于 c = c / a</td>
</tr>
<tr>
<td>%=</td>
<td>取模赋值运算符</td>
<td>c %= a 等效于 c = c % a</td>
</tr>
<tr>
<td>**=</td>
<td>幂赋值运算符</td>
<td>c **= a 等效于 c = c ** a</td>
</tr>
<tr>
<td>//=</td>
<td>取整除赋值运算符</td>
<td>c //= a 等效于 c = c // a</td>
</tr>
<tr>
<td>:=</td>
<td>海象运算符，可在表达式内部为变量赋值。<strong>Python3.8 版本新增运算符</strong>。</td>
<td>
<p>在这个示例中，赋值表达式可以避免调用 len() 两次:</p>
<pre class="prettyprint prettyprinted"><span class="kwd">if<span class="pln"> <span class="pun">(<span class="pln">n <span class="pun">:=<span class="pln"> len<span class="pun">(<span class="pln">a<span class="pun">))<span class="pln"> <span class="pun">&gt;<span class="pln"> <span class="lit">10<span class="pun">:<span class="pln">
    <span class="kwd">print<span class="pun">(<span class="pln">f<span class="str">"List is too long ({n} elements, expected &lt;= 10)"<span class="pun">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</td>
</tr>
</tbody>
</table>
<p>以下实例演示了Python所有赋值运算符的操作：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python3</span>
<span style="color: #000000;"> 
a </span>= 21<span style="color: #000000;">
b </span>= 10<span style="color: #000000;">
c </span>=<span style="color: #000000;"> 0
 
c </span>= a +<span style="color: #000000;"> b
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">1 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>+=<span style="color: #000000;"> a
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">2 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>*=<span style="color: #000000;"> a
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">3 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>/=<span style="color: #000000;"> a 
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">4 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>= 2<span style="color: #000000;">
c </span>%=<span style="color: #000000;"> a
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">5 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>**=<span style="color: #000000;"> a
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">6 - c 的值为：</span><span style="color: #800000;">"</span><span style="color: #000000;">, c)
 
c </span>//=<span style="color: #000000;"> a
</span><span style="color: #0000ff;">print</span> (<span style="color: #800000;">"</span><span style="color: #800000;">7 - c 的值为：</span><span style="color: #800000;">"</span>, c)</pre>
</div>
<p>以上实例输出结果：</p>
<div class="cnblogs_code">
<pre>1 - c 的值为： 31
2 - c 的值为： 52
3 - c 的值为： 1092
4 - c 的值为： 52.0
5 - c 的值为： 2
6 - c 的值为： 2097152
7 - c 的值为： 99864</pre>
</div>
<p>&nbsp;</p>
</div>]]></description></item><item><title>【Python】字符串(String)</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997728.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 06 Dec 2019 13:05:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997728.html</guid><description><![CDATA[<ul>
<li>python中单引号和双引号使用完全相同。</li>
<li>使用三引号('''或""")可以指定一个多行字符串。</li>
<li>转义符 '\'</li>
<li>反斜杠可以用来转义，使用r可以让反斜杠不发生转义。。 如 r"this is a line with \n" 则\n会显示，并不是换行。</li>
<li>按字面意义级联字符串，如"this " "is " "string"会被自动转换为this is string。</li>
<li>字符串可以用 + 运算符连接在一起，用 * 运算符重复。</li>
<li>Python 中的字符串有两种索引方式，从左往右以 0 开始，从右往左以 -1 开始。</li>
<li>Python中的字符串不能改变。</li>
<li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</li>
<li>字符串的截取的语法格式如下：<span class="marked">变量[头下标:尾下标:步长]</span></li>
</ul>
<div class="cnblogs_code">
<pre>word = <span style="color: #800000;">'</span><span style="color: #800000;">字符串</span><span style="color: #800000;">'</span><span style="color: #000000;">
sentence </span>= <span style="color: #800000;">"</span><span style="color: #800000;">这是一个句子。</span><span style="color: #800000;">"</span><span style="color: #000000;">
paragraph </span>= <span style="color: #800000;">"""</span><span style="color: #800000;">这是一个段落，
可以由多行组成</span><span style="color: #800000;">"""</span></pre>
</div>
<p><strong>&nbsp;实例</strong></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python3</span>
<span style="color: #000000;"> 
str</span>=<span style="color: #800000;">'</span><span style="color: #800000;">muzihuaner</span><span style="color: #800000;">'</span>
 
<span style="color: #0000ff;">print</span>(str)                 <span style="color: #008000;">#</span><span style="color: #008000;"> 输出字符串</span>
<span style="color: #0000ff;">print</span>(str[0:-1])           <span style="color: #008000;">#</span><span style="color: #008000;"> 输出第一个到倒数第二个的所有字符</span>
<span style="color: #0000ff;">print</span>(str[0])              <span style="color: #008000;">#</span><span style="color: #008000;"> 输出字符串第一个字符</span>
<span style="color: #0000ff;">print</span>(str[2:5])            <span style="color: #008000;">#</span><span style="color: #008000;"> 输出从第三个开始到第五个的字符</span>
<span style="color: #0000ff;">print</span>(str[2:])             <span style="color: #008000;">#</span><span style="color: #008000;"> 输出从第三个开始后的所有字符</span>
<span style="color: #0000ff;">print</span>(str * 2)             <span style="color: #008000;">#</span><span style="color: #008000;"> 输出字符串两次</span>
<span style="color: #0000ff;">print</span>(str + <span style="color: #800000;">'</span><span style="color: #800000;">你好</span><span style="color: #800000;">'</span>)        <span style="color: #008000;">#</span><span style="color: #008000;"> 连接字符串</span>
 
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">------------------------------</span><span style="color: #800000;">'</span><span style="color: #000000;">)
 
</span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">'</span><span style="color: #800000;">hello\nmuzihuaner</span><span style="color: #800000;">'</span>)      <span style="color: #008000;">#</span><span style="color: #008000;"> 使用反斜杠(\)+n转义特殊字符</span>
<span style="color: #0000ff;">print</span>(r<span style="color: #800000;">'</span><span style="color: #800000;">hello\nmuzihuaner</span><span style="color: #800000;">'</span>)     <span style="color: #008000;">#</span><span style="color: #008000;"> 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></pre>
</div>
<p>这里的 r 指 raw，即 raw string<strong>(原始字符串)</strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【Python】猜数小游戏</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997629.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 06 Dec 2019 12:47:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997629.html</guid><description><![CDATA[<p><strong>有点沙雕</strong></p>
<div class="cnblogs_code">
<pre>temp=input(<span style="color: #800000;">"</span><span style="color: #800000;">猜猜我心里想的是哪个数字？</span><span style="color: #800000;">"</span><span style="color: #000000;">)
guess</span>=<span style="color: #000000;">int (temp)
</span><span style="color: #0000ff;">if</span> guess==8<span style="color: #000000;">:
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">你是我肚里的蛔虫么？</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">哼，猜中也没有奖励</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">哈哈，猜错了哦！是8</span><span style="color: #800000;">"</span><span style="color: #000000;">)

    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">游戏结束，不玩了！</span><span style="color: #800000;">"</span>)</pre>
</div>
<p><span style="background-color: #ff0000;"><strong>PS：代码缩进很重要！</strong></span></p>
<p><span style="background-color: #ffffff;"><strong>升级版1.0 if嵌套 （当用户猜错，给出提示）</strong></span></p>
<div class="cnblogs_code">
<pre>temp=input(<span style="color: #800000;">"</span><span style="color: #800000;">猜猜我心里想的是哪个数字？</span><span style="color: #800000;">"</span><span style="color: #000000;">)
guess</span>=<span style="color: #000000;">int (temp)
</span><span style="color: #0000ff;">if</span> guess==8<span style="color: #000000;">:
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">你是我肚里的蛔虫么？</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">哼，猜中也没有奖励</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">if</span> guess&lt;8<span style="color: #000000;">:
        </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">小啦~</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
        </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">大啦~</span><span style="color: #800000;">"</span><span style="color: #000000;">)

</span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">游戏结束，不玩了！</span><span style="color: #800000;">"</span>)</pre>
</div>
<p>&nbsp;<strong>升级版2.0 循环（提供多个机会给用户）</strong></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">三次机会</span>
counts=3
<span style="color: #008000;">#</span><span style="color: #008000;">循环</span>
<span style="color: #0000ff;">while</span> counts&gt;<span style="color: #000000;">0:
    temp</span>=input(<span style="color: #800000;">"</span><span style="color: #800000;">猜猜我心里想的是哪个数字？只有三次机会哦！\n</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    guess</span>=<span style="color: #000000;">int (temp)

    </span><span style="color: #0000ff;">if</span> guess==8<span style="color: #000000;">:
     </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">你是我肚里的蛔虫么？</span><span style="color: #800000;">"</span><span style="color: #000000;">)
     </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">哼，猜中也没有奖励</span><span style="color: #800000;">"</span><span style="color: #000000;">)
     </span><span style="color: #0000ff;">break</span>
    <span style="color: #0000ff;">else</span><span style="color: #000000;">:
        </span><span style="color: #0000ff;">if</span> guess&lt;8<span style="color: #000000;">:
            </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">小啦~</span><span style="color: #800000;">"</span><span style="color: #000000;">)
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
            </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">大啦~</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    counts</span>=counts-1
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">游戏结束，不玩了！</span><span style="color: #800000;">"</span>)</pre>
</div>
<p><strong>注意：代码缩进很重要的！</strong></p>
<p><strong>&nbsp;升级版3.0 随机数 （每次运行程序，答案随机）</strong></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">import</span> random <span style="color: #008000;">#</span><span style="color: #008000;">导入随机数轮子 ~</span><span style="color: #008000;">
#</span><span style="color: #008000;">三次机会</span>
counts=3<span style="color: #000000;">
answer</span>=random.randint(1,10)<span style="color: #008000;">#</span><span style="color: #008000;">随机产生一个1-10以内的随机数</span><span style="color: #008000;">
#</span><span style="color: #008000;">循环</span>
<span style="color: #0000ff;">while</span> counts&gt;<span style="color: #000000;">0:
    temp</span>=input(<span style="color: #800000;">"</span><span style="color: #800000;">猜猜我心里想的是哪个数字？只有三次机会哦！\n</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    guess</span>=<span style="color: #000000;">int (temp)

    </span><span style="color: #0000ff;">if</span> guess==<span style="color: #000000;">answer:
     </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">你是我肚里的蛔虫么？</span><span style="color: #800000;">"</span><span style="color: #000000;">)
     </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">哼，猜中也没有奖励</span><span style="color: #800000;">"</span><span style="color: #000000;">)
     </span><span style="color: #0000ff;">break</span>
    <span style="color: #0000ff;">else</span><span style="color: #000000;">:
        </span><span style="color: #0000ff;">if</span> guess&lt;<span style="color: #000000;">answer:
            </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">小啦~</span><span style="color: #800000;">"</span><span style="color: #000000;">)
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
            </span><span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">大啦~</span><span style="color: #800000;">"</span><span style="color: #000000;">)
    counts</span>=counts-1
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">游戏结束，不玩了！</span><span style="color: #800000;">"</span>)</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【Python】第一个程序---Helloworld！</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997463.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 06 Dec 2019 12:25:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997463.html</guid><description><![CDATA[<p>对于大多数程序语言，第一个入门编程代码便是"Hello World！"，以下代码为使用Python输出"Hello World！"：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python3</span>
 
<span style="color: #0000ff;">print</span>(<span style="color: #800000;">"</span><span style="color: #800000;">Hello, World!</span><span style="color: #800000;">"</span>)</pre>
</div>
<p><span style="font-size: 18px;"><strong>从入门到。。。</strong></span></p>
<p><span style="font-size: 18px;"><strong><img src="https://img2018.cnblogs.com/i-beta/1783030/201912/1783030-20191206202506240-969761963.png" alt="" /></strong></span></p>
<p>&nbsp;</p>
<p><span style="font-size: 18px;"><strong></strong></span></p>
<p>&nbsp;</p>]]></description></item><item><title>Python 环境搭建</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997427.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 06 Dec 2019 12:20:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997427.html</guid><description><![CDATA[<p>本章节我们将向大家介绍如何在本地搭建 Python3 开发环境。</p>
<p>Python3 可应用于多平台包括 Windows、Linux 和 Mac OS X。</p>
<ul>
<li>Unix (Solaris, Linux, FreeBSD, AIX, HP/UX, SunOS, IRIX, 等等。)</li>
<li>Win 9x/NT/2000</li>
<li>Macintosh (Intel, PPC, 68K)</li>
<li>OS/2</li>
<li>DOS (多个DOS版本)</li>
<li>PalmOS</li>
<li>Nokia 移动手机</li>
<li>Windows CE</li>
<li>Acorn/RISC OS</li>
<li>BeOS</li>
<li>Amiga</li>
<li>VMS/OpenVMS</li>
<li>QNX</li>
<li>VxWorks</li>
<li>Psion</li>
<li>Python 同样可以移植到 Java 和 .NET 虚拟机上。</li>
</ul>
<p>&nbsp;</p>
<hr />
<h2>Python3 下载</h2>
<p>Python3 最新源码，二进制文档，新闻资讯等可以在 Python 的官网查看到：</p>
<p>Python 官网：<a href="https://www.python.org/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/</a></p>
<p>你可以在以下链接中下载 Python 的文档，你可以下载 HTML、PDF 和 PostScript 等格式的文档。</p>
<p>Python文档下载地址：<a href="https://www.python.org/doc/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/doc/</a></p>
<p>&nbsp;</p>
<hr />
<h2>Python 安装</h2>
<p>Python 已经被移植在许多平台上（经过改动使它能够工作在不同平台上）。</p>
<p>您需要下载适用于您使用平台的二进制代码，然后安装 Python。</p>
<p>如果您平台的二进制代码是不可用的，你需要使用C编译器手动编译源代码。</p>
<p>编译的源代码，功能上有更多的选择性， 为 Python 安装提供了更多的灵活性。</p>
<p>以下是各个平台安装包的下载地址：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/07/F2135662-1078-4EE2-BEBB-353F8D8E521F.jpg" alt="" /></p>
<p><strong>Source Code</strong>&nbsp;可用于 Linux 上的安装。</p>
<p>以下为不同平台上安装 Python3 的方法。</p>
<h3>Unix &amp; Linux 平台安装 Python3:</h3>
<p>以下为在 Unix &amp; Linux 平台上安装 Python 的简单步骤：</p>
<ul class="list">
<li>打开WEB浏览器访问&nbsp;<a href="https://www.python.org/downloads/source/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/source/</a></li>
<li>选择适用于 Unix/Linux 的源码压缩包。</li>
<li>下载及解压压缩包&nbsp;<strong>Python-3.x.x.tgz</strong>，<strong>3.x.x</strong>&nbsp;为你下载的对应版本号。</li>
<li>如果你需要自定义一些选项修改&nbsp;<em>Modules/Setup</em></li>

</ul>
<p>以<strong>&nbsp;Python3.6.1</strong>&nbsp;版本为例：</p>
<pre class="prettyprint prettyprinted"><span class="com"># tar -zxvf Python-3.6.1.tgz<span class="pln">
<span class="com"># cd Python-3.6.1<span class="pln">
<span class="com"># ./configure<span class="pln">
<span class="com"># make &amp;&amp; make install</span></span></span></span></span></span></span></pre>
<p>检查 Python3 是否正常可用：</p>
<pre class="prettyprint prettyprinted"><span class="com"># python3 -V<span class="pln">
<span class="typ">Python<span class="pln"> <span class="lit">3.6<span class="pun">.<span class="lit">1</span></span></span></span></span></span></span></pre>
<h3>Window 平台安装 Python:</h3>
<p>以下为在 Window 平台上安装 Python 的简单步骤。</p>
<p>打开 WEB 浏览器访问&nbsp;<a href="https://www.python.org/downloads/windows/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/windows/</a>&nbsp;，一般就下载 executable installer，x86 表示是 32 位机子的，x86-64 表示 64 位机子的。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/07/A0ADAB69-1DA6-409B-AF85-DA2FC7E0B57F.png" alt="" /></p>
<p>记得勾选&nbsp;<strong>Add Python 3.6 to PATH</strong>。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/07/20180226150011548.png" alt="" /></p>
<p>按&nbsp;<span class="marked">Win+R&nbsp;键，输入 cmd 调出命令提示符，输入 python:</span></p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/07/20170707155742110.png" alt="" /></p>
<p>也可以在开始菜单中搜索&nbsp;<strong>IDLE</strong>：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/07/460F6DFB-3BBF-4683-BEA0-23BE8DF021B0.jpg" alt="" /></p>
<h3>MAC 平台安装 Python:</h3>
<p>MAC 系统都自带有 Python2.7 环境，你可以在链接&nbsp;<a href="https://www.python.org/downloads/mac-osx/" rel="nofollow noopener noreferrer" target="_blank">https://www.python.org/downloads/mac-osx/</a>&nbsp;上下载最新版安装 Python 3.x。</p>
<p>你也可以参考源码安装的方式来安装。</p>
<p>&nbsp;</p>
<hr />
<h2>环境变量配置</h2>
<p>程序和可执行文件可以在许多目录，而这些路径很可能不在操作系统提供可执行文件的搜索路径中。</p>
<p>path(路径)存储在环境变量中，这是由操作系统维护的一个命名的字符串。这些变量包含可用的命令行解释器和其他程序的信息。</p>
<p>Unix或Windows中路径变量为PATH（UNIX区分大小写，Windows不区分大小写）。</p>
<p>在Mac OS中，安装程序过程中改变了python的安装路径。如果你需要在其他目录引用Python，你必须在path中添加Python目录。</p>
<h3>在 Unix/Linux 设置环境变量</h3>
<ul>
<li><strong>在 csh shell:</strong>&nbsp;输入<br />
<pre class="prettyprint prettyprinted"><span class="pln">setenv PATH <span class="str">"$PATH:/usr/local/bin/python"</span></span></pre>
, 按下&nbsp;<strong>Enter</strong>。</li>
<li><strong>在 bash shell (Linux) 输入 :</strong><br />
<pre class="prettyprint prettyprinted"><span class="kwd">export<span class="pln"> PATH<span class="pun">=<span class="str">"$PATH:/usr/local/bin/python"</span></span></span></span></pre>
按下&nbsp;<strong>Enter</strong>&nbsp;。</li>
<li><strong>在 sh 或者 ksh shell 输入:</strong><br />
<pre class="prettyprint prettyprinted"><span class="pln">PATH<span class="pun">=<span class="str">"$PATH:/usr/local/bin/python"</span></span></span></pre>
按下 Enter。</li>
</ul>
<p><strong>注意:&nbsp;</strong>/usr/local/bin/python 是 Python 的安装目录。</p>
<h3>在 Windows 设置环境变量</h3>
<p>在环境变量中添加Python目录：</p>
<p><strong>在命令提示框中(cmd) :</strong>&nbsp;输入</p>
<pre class="prettyprint prettyprinted"><span class="pln">path<span class="pun">=%<span class="pln">path<span class="pun">%;<span class="pln">C<span class="pun">:<span class="pln">\Python </span></span></span></span></span></span></span></pre>
<p>按下"Enter"。</p>
<p>&nbsp;</p>
<p><strong>注意:&nbsp;</strong>C:\Python 是Python的安装目录。</p>
<p>也可以通过以下方式设置：</p>
<ul>
<li>右键点击"计算机"，然后点击"属性"</li>
<li>然后点击"高级系统设置"</li>
<li>选择"系统变量"窗口下面的"Path",双击即可！</li>
<li></li>
<li>然后在"Path"行，添加python安装路径即可(我的D:\Python32)，所以在后面，添加该路径即可。&nbsp;<strong>ps：记住，路径直接用分号"；"隔开！</strong></li>
<li>最后设置成功以后，在cmd命令行，输入命令"python"，就可以有相关显示。</li>
</ul>
<p><img src="https://www.runoob.com/wp-content/uploads/2013/11/201209201707594792.png" alt="" /></p>
<hr />
<h2>Python 环境变量</h2>
<p>下面几个重要的环境变量，它应用于Python：</p>
<table class="reference">
<tbody>
<tr><th>变量名</th><th>描述</th></tr>
<tr>
<td>PYTHONPATH</td>
<td>PYTHONPATH是Python搜索路径，默认我们import的模块都会从PYTHONPATH里面寻找。</td>
</tr>
<tr>
<td>PYTHONSTARTUP</td>
<td>Python启动后，先寻找PYTHONSTARTUP环境变量，然后执行此变量指定的文件中的代码。</td>
</tr>
<tr>
<td>PYTHONCASEOK</td>
<td>加入PYTHONCASEOK的环境变量, 就会使python导入模块的时候不区分大小写.</td>
</tr>
<tr>
<td>PYTHONHOME</td>
<td>另一种模块搜索路径。它通常内嵌于的PYTHONSTARTUP或PYTHONPATH目录中，使得两个模块库更容易切换。</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<hr />
<h2>运行Python</h2>
<p>有三种方式可以运行Python：</p>
<h3>1、交互式解释器：</h3>
<p>你可以通过命令行窗口进入python并开在交互式解释器中开始编写Python代码。</p>
<p>你可以在Unix，DOS或任何其他提供了命令行或者shell的系统进行python编码工作。</p>
<div class="code">
<div>$ python # Unix/Linux<br /><br />或者<br /><br />C:&gt;python # Windows/DOS</div>

</div>
<p>以下为Python命令行参数：</p>
<table class="reference">
<tbody>
<tr><th>选项</th><th>描述</th></tr>
<tr>
<td>-d</td>
<td>在解析时显示调试信息</td>

</tr>
<tr>
<td>-O</td>
<td>生成优化代码 ( .pyo 文件 )</td>

</tr>
<tr>
<td>-S</td>
<td>启动时不引入查找Python路径的位置</td>

</tr>
<tr>
<td>-V</td>
<td>输出Python版本号</td>

</tr>
<tr>
<td>-X</td>
<td>从 1.6版本之后基于内建的异常（仅仅用于字符串）已过时。</td>

</tr>
<tr>
<td>-c cmd</td>
<td>执行 Python 脚本，并将运行结果作为 cmd 字符串。</td>

</tr>
<tr>
<td>file</td>
<td>在给定的python文件执行python脚本。</td>

</tr>

</tbody>

</table>
<h3>2、命令行脚本</h3>
<p>在你的应用程序中通过引入解释器可以在命令行中执行Python脚本，如下所示：</p>
<div class="code">
<div>$ python script.py # Unix/Linux<br /><br />或者<br /><br />C:&gt;python script.py # Windows/DOS</div>

</div>
<p><strong>注意：</strong>在执行脚本时，请检查脚本是否有可执行权限。</p>
<h3>3、集成开发环境（IDE：Integrated Development Environment）: PyCharm</h3>
<p>PyCharm 是由 JetBrains 打造的一款 Python IDE，支持 macOS、 Windows、 Linux 系统。</p>
<p>PyCharm 功能 : 调试、语法高亮、Project管理、代码跳转、智能提示、自动完成、单元测试、版本控制&hellip;&hellip;</p>
<p>PyCharm 下载地址 :&nbsp;<a href="https://www.jetbrains.com/pycharm/download/" rel="noopener noreferrer" target="_blank">https://www.jetbrains.com/pycharm/download/</a></p>
<p>PyCharm 安装地址：<a href="https://www.runoob.com/w3cnote/pycharm-windows-install.html" rel="noopener noreferrer" target="_blank">http://www.runoob.com/w3cnote/pycharm-windows-install.html</a></p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/07/A3A7FAA5-61C5-4540-A265-B9FC1B1AE49C.jpg" alt="" /></p>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/06/pycharm_ui_darcula.png" alt="" /></p>
<p><span style="font-size: 14pt;"><strong>其实我用Microsoft Visual Studio Professional 2019</strong></span></p>
<p><span style="font-size: 14pt;"><strong>&nbsp;</strong></span></p>]]></description></item><item><title>Python 简介</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997395.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 06 Dec 2019 12:15:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/06/11997395.html</guid><description><![CDATA[<div class="tutintro">
<h1>Python&nbsp;<span class="color_h1">简介</span></h1>
<p>Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。</p>
<p>Python 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。</p>
</div>
<ul>
<li>
<p><strong>Python 是一种解释型语言：</strong>&nbsp;这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。</p>
</li>
<li>
<p><strong>Python 是交互式语言：</strong>&nbsp;这意味着，您可以在一个 Python 提示符&nbsp;<span class="marked">&gt;&gt;&gt;&nbsp;后直接执行代码。</span></p>
</li>
<li>
<p><strong>Python 是面向对象语言:</strong>&nbsp;这意味着Python支持面向对象的风格或代码封装在对象的编程技术。</p>
</li>
<li>
<p><strong>Python 是初学者的语言：</strong>Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。</p>
</li>
</ul>
<h2>Python 发展历史</h2>
<p>Python 是由 Guido van Rossum 在八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。</p>
<p>Python 本身也是由诸多其他语言发展而来的,这包括 ABC、Modula-3、C、C++、Algol-68、SmallTalk、Unix shell 和其他的脚本语言等等。</p>
<p>像 Perl 语言一样，Python 源代码同样遵循 GPL(GNU General Public License)协议。</p>
<p>现在 Python 是由一个核心开发团队在维护，Guido van Rossum 仍然占据着至关重要的作用，指导其进展。</p>
<p>Python 2.0 于 2000 年 10 月 16 日发布，增加了实现完整的垃圾回收，并且支持 Unicode。</p>
<p>Python 3.0 于 2008 年 12 月 3 日发布，此版不完全兼容之前的 Python 源代码。不过，很多新特性后来也被移植到旧的Python 2.6/2.7版本。</p>
<p>Python 3.0 版本，常被称为 Python 3000，或简称 Py3k。相对于 Python 的早期版本，这是一个较大的升级。</p>
<p>Python 2.7 被确定为最后一个 Python 2.x 版本，它除了支持 Python 2.x 语法外，还支持部分 Python 3.1 语法。</p>
<h2>Python 特点</h2>
<ul>
<li>
<p><strong>1.易于学习：</strong>Python有相对较少的关键字，结构简单，和一个明确定义的语法，学习起来更加简单。</p>
</li>
<li>
<p><strong>2.易于阅读：</strong>Python代码定义的更清晰。</p>
</li>
<li>
<p><strong>3.易于维护：</strong>Python的成功在于它的源代码是相当容易维护的。</p>
</li>
<li>
<p><strong>4.一个广泛的标准库：</strong>Python的最大的优势之一是丰富的库，跨平台的，在UNIX，Windows和Macintosh兼容很好。</p>
</li>
<li>
<p><strong>5.互动模式：</strong>互动模式的支持，您可以从终端输入执行代码并获得结果的语言，互动的测试和调试代码片断。</p>
</li>
<li>
<p><strong>6.可移植：</strong>基于其开放源代码的特性，Python已经被移植（也就是使其工作）到许多平台。</p>
</li>
<li>
<p><strong>7.可扩展：</strong>如果你需要一段运行很快的关键代码，或者是想要编写一些不愿开放的算法，你可以使用C或C++完成那部分程序，然后从你的Python程序中调用。</p>
</li>
<li>
<p><strong>8.数据库：</strong>Python提供所有主要的商业数据库的接口。</p>
</li>
<li>
<p><strong>9.GUI编程：</strong>Python支持GUI可以创建和移植到许多系统调用。</p>
</li>
<li>
<p><strong>10.可嵌入:&nbsp;</strong>你可以将Python嵌入到C/C++程序，让你的程序的用户获得"脚本化"的能力。</p>
</li>
</ul>
<h2>Python 应用</h2>
<ul>
<li>Youtube - 视频社交网站</li>
<li>Reddit - 社交分享网站</li>
<li>Dropbox - 文件分享服务</li>
<li>豆瓣网 - 图书、唱片、电影等文化产品的资料数据库网站</li>
<li>知乎 - 一个问答网站</li>
<li>果壳 - 一个泛科技主题网站</li>
<li>Bottle - Python微Web框架</li>
<li>EVE - 网络游戏EVE大量使用Python进行开发</li>
<li>Blender - 使用Python作为建模工具与GUI语言的开源3D绘图软件</li>
<li>Inkscape - 一个开源的SVG矢量图形编辑器。</li>
<li>...</li>
</ul>
<p><span style="font-size: 14pt;"><strong>人生苦短，我用Python！</strong></span></p>]]></description></item><item><title>【C语言】写一个函数，并调用该函数求两个整数的最大公约数和最小公倍数</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/06/11995025.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 06 Dec 2019 06:25:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/06/11995025.html</guid><description><![CDATA[<p><strong>程序分析：</strong></p>
<p>在数学中，两个数的最小公倍数=两个数的乘积/两数的最大公约数。</p>
<p>求两个数的最大公约数，运用辗转相除法：已知两个整数M和N，假定M&gt;N，则求M%N。</p>
<p>如果余数为0，则N即为所求；如果余数不为0，用N除，再求其余数。。。直到余数为0，则除数就是M和N的最大公约数</p>
<p><strong>代码：</strong></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span> gcd(<span style="color: #0000ff;">int</span> a, <span style="color: #0000ff;">int</span> b)<span style="color: #008000;">/*</span><span style="color: #008000;">求最大公约数</span><span style="color: #008000;">*/</span><span style="color: #000000;">
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> r, t;
    </span><span style="color: #0000ff;">if</span>(a&lt;<span style="color: #000000;">b)
    {
        t </span>=<span style="color: #000000;"> a;
        a </span>=<span style="color: #000000;"> b;
        b </span>=<span style="color: #000000;"> t;
    }
    r </span>= a %<span style="color: #000000;"> b;
    </span><span style="color: #0000ff;">while</span>(r != <span style="color: #800080;">0</span>)<span style="color: #008000;">/*</span><span style="color: #008000;">辗转相除法</span><span style="color: #008000;">*/</span><span style="color: #000000;">
    {
        a </span>=<span style="color: #000000;"> b;
        b </span>=<span style="color: #000000;"> r;
        r </span>= a %<span style="color: #000000;"> b;
    }
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> b;
}
</span><span style="color: #0000ff;">int</span> lcm(<span style="color: #0000ff;">int</span> a, <span style="color: #0000ff;">int</span> b)<span style="color: #008000;">/*</span><span style="color: #008000;">求最小公倍数</span><span style="color: #008000;">*/</span><span style="color: #000000;">
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> r;
    r </span>=<span style="color: #000000;"> gcd(a, b);
    </span><span style="color: #0000ff;">return</span>(a * b /<span style="color: #000000;"> r);
}
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> x, y;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入两个整数:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d %d</span><span style="color: #800000;">"</span>, &amp;x, &amp;<span style="color: #000000;">y);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">两个整数最大公约数为：%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, gcd(x, y));
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">两个数最小公倍数为：%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, lcm(x, y));
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>程序员的江湖，黑话一定要牢记</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986226.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 14:30:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986226.html</guid><description><![CDATA[<p><img src="https://www.runoob.com/wp-content/uploads/2017/09/3d607c302e5349848a74573152dec376_th.jpg" alt="" width="50%" /></p>
<h3>一，老板的黑话</h3>
<p>你来我办公室一下 ==&nbsp;<strong>老子又想到了绝妙的idea</strong></p>
<p>得专注用户体验 ==&nbsp;<strong>界面画的好看点</strong></p>
<p>产品气质不够年轻 ==&nbsp;<strong>饱和度通通调最高</strong></p>
<p>产品气质不够成熟 ==&nbsp;<strong>界面通通做成黑的</strong></p>
<p>产品不够大气 ==&nbsp;<strong>我也不知道哪不好反正就是不好</strong></p>
<p>要精致的感觉 ==&nbsp;<strong>抄苹果</strong></p>
<p>要利用用户的固有习惯 ==&nbsp;<strong>抄同行</strong></p>
<p>要追求流行设计趋势 ==&nbsp;<strong>抄微信/淘宝/滴滴&hellip;</strong></p>
<p>你说的这是另一个问题 ==&nbsp;<strong>我说的才是对的</strong></p>
<p>你说的跟我是一个意思 ==&nbsp;<strong>我说的才是对的</strong></p>
<p>我们讨论的是两件事情 ==&nbsp;<strong>我说的才是对的</strong></p>
<p>我们是弹性工作制 ==&nbsp;<strong>加班不给钱</strong></p>
<p>我们是扁平化管理 ==&nbsp;<strong>公司没几个人</strong></p>
<p>我们会给你很多期权 ==&nbsp;<strong>不会给你很多工资</strong></p>
<p>我们每天都有果盘！ ==&nbsp;<strong>可能是公司唯一的福利了</strong></p>
<p>当务之急是抢占市场 ==&nbsp;<strong>快狂发补贴</strong></p>
<p>快速建立用户群体的壁垒 ==&nbsp;<strong>快拉他们进微信群</strong></p>
<p>要让用户产生自发传播 ==&nbsp;<strong>快让他们转发朋友圈</strong></p>
<p>为了健康发展我们要启动下轮融资 ==&nbsp;<strong>公司没钱了</strong></p>
<p>我们辞退了一些跟不上公司发展的同事 ==&nbsp;<strong>公司没钱了</strong></p>
<p>打补贴战其实不符合我们公司的理念 ==&nbsp;<strong>公司没钱了</strong></p>
<p>我们在寻找合伙人 =&nbsp;<strong>就差一个程序员了</strong></p>
<p>我们有绝妙的idea =<strong>&nbsp;就差一个程序员了</strong></p>
<p>采用了大数据技术 =&nbsp;<strong>日志没清空过，都攒着呢，有什么用我不知道</strong></p>
<p>采用了云技术 =<strong>&nbsp;在IDC机房租了几台服务器</strong></p>
<h3>二，产品经理的黑话</h3>
<p>产品设计应该大道至简 ==<strong>复杂的我也不会</strong></p>
<p>用户都应该用完即走 ==&nbsp;<strong>回不回来我不管</strong></p>
<p>这是常规的典型的做法 ==&nbsp;<strong>我抄的微信/淘宝/滴滴&hellip;</strong></p>
<p>需求要抓住人性 ==&nbsp;<strong>多放美女照片</strong></p>
<p>得考虑用户的使用场景 ==<strong>加个夜间模式</strong></p>
<p>商业模式要形成闭环 ==&nbsp;<strong>放东西线上卖</strong></p>
<p>要搭建完善的用户运营体系 ==<strong>&nbsp;做个积分商城</strong></p>
<p>要有社交元素促进活跃度 ==<strong>&nbsp;塞一个IM</strong></p>
<p>没有用户是因为没有做好运营 ==<strong>不是我的锅</strong></p>
<p>体验不好是因为技术实现问题 ==&nbsp;<strong>不是我的锅</strong></p>
<p>界面难看是因为设计水平不行 ==&nbsp;<strong>反正都不是我的锅</strong></p>
<p>这个我回去再确认一下 ==<strong>&nbsp;别说了，老子没想到</strong></p>
<p>在吗？==&nbsp;<strong>要改需求了</strong></p>
<p>哥哥最近累吗要不要喝奶茶 ==<strong>要改需求了</strong></p>
<p>那个&hellip;有句话&hellip;不知&hellip; ==<strong>要改需求了</strong></p>
<p>下次肯定不改了==&nbsp;<strong>这次先改了再说</strong></p>
<p>你的建议很好我们已经想到了 ==&nbsp;<strong>我擦说得真有道理赶紧提需求</strong></p>
<p>你的建议我们会考虑的 ==&nbsp;<strong>这建议好像有点蠢</strong></p>
<p>你的建议很有启发性 ==<strong>&nbsp;哈哈哈什么杰宝玩意儿</strong></p>
<h3>三，程序员的黑话</h3>
<p>你这个需求不清晰 ==&nbsp;<strong>我不想做</strong></p>
<p>目前技术实现不了 ==&nbsp;<strong>我不想做</strong></p>
<p>现在服务器性能跟不上 ==&nbsp;<strong>我不想做</strong></p>
<p>去找老板/项目经理排期吧 ==&nbsp;<strong>我不想做</strong></p>
<p>你怎么老改需求啊 ==&nbsp;<strong>X了个X</strong></p>
<p>你怎么设计的这么复杂啊 ==<strong>&nbsp;X了个X</strong></p>
<p>你怎么就给这么短时间啊 ==<strong>&nbsp;X了个X</strong></p>
<p>在吗？ ==&nbsp;<strong>要延期了</strong></p>
<p>弟弟最近累吗要不要喝奶茶 ==<strong>&nbsp;要延期了</strong></p>
<p>那个&hellip;有句话&hellip;不知&hellip; ==&nbsp;<strong>要延期了</strong></p>
<p>下次肯定不延期了 ==&nbsp;<strong>这次先应付了再说</strong></p>
<p>你退后点说话 ==&nbsp;<strong>口水别喷到我宝贝键盘上</strong></p>
<p>你别把胸压到桌子上 ==&nbsp;<strong>我宝贝键盘会受不了的</strong></p>
<p>你告诉我输什么我自己来 ==&nbsp;<strong>你别用脏手碰我的宝贝键盘</strong></p>
<p>你怎么还用 Word 啊？ ==&nbsp;<strong>Markdown 才是最好的写作工具</strong></p>
<p>你怎么还在用 ThinkPad 啊？ ==&nbsp;<strong>Mac 才是最好的电脑</strong></p>
<p>你怎么还在自学Java啊？ ==&nbsp;<strong>PHP 才是最好的语言​</strong></p>]]></description></item><item><title>为什么程序员跟其他人比起来应该喝更多的水</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986202.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 14:27:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986202.html</guid><description><![CDATA[<p>我们都不止一次的听到人们说："你至少一天要喝8杯水。"</p>
<p>可问题是，几乎没有人做到了每天喝那么多水。从事编程职业这么多年来，我发现，尤其是程序员，饮水量明显不足。 程序员需要比常人喝更多的水。我在下棋时突然意识到了这一点。连续一个小时的下棋后，我就开始感到口渴。</p>
<p>看起来，是当我的大脑高速运转时，我们需要更多的水。</p>
<p><a href="https://www.runoob.com/wp-content/uploads/2014/07/21.jpg"><img class="attachment-full" src="https://www.runoob.com/wp-content/uploads/2014/07/21.jpg" alt="21" width="280" height="300" /></a></p>
<p>&nbsp;</p>
<h3>缺水状态下我的感受</h3>
<p>我通常是早上起来喝一杯咖啡。咖啡有利尿作用&mdash;&mdash;也就是它会导致小便更多。</p>
<p>在编程的时候，我会全神贯注，根本想不起、也感觉不到要喝水。</p>
<p>工作日里，我有时候会在午餐的时间喝一杯水，或者再加一杯咖啡。</p>
<p>到了晚上，我会在晚饭后再喝一杯。</p>
<p>看起来，这似乎是已经足够了，但事实上，这远远不够。</p>
<p>公司里有台饮水机，但我从来没有使用它，因为这需要我起身离开我的电脑桌。</p>
<p><a href="https://www.runoob.com/wp-content/uploads/2014/07/31.jpg"><img class="attachment-full" src="https://www.runoob.com/wp-content/uploads/2014/07/31.jpg" alt="31" width="209" height="350" /></a></p>
<p>&nbsp;</p>
<h3>缺水的症状</h3>
<p>经历了几年水摄入量不足的生活，我开始出现如下症状：</p>
<ul>
<li>脸看起来疲倦、苍老、皱纹增多。</li>
</ul>
<ul>
<li>消耗功能减弱，吃难于消化的食物后胃部就会出现轻微疼痛。</li>
</ul>
<ul>
<li>喝超过2小杯的啤酒后、或超过一杯的咖啡后，胃也会感到不舒服。</li>
</ul>
<p>经过了很长时间，我终于意识到这些问题的根源是身体缺水。当认识到这点，我决定做一个试验，开始喝更多的水。</p>
<p><a href="https://www.runoob.com/wp-content/uploads/2014/07/41.jpg"><img class="attachment-full" src="https://www.runoob.com/wp-content/uploads/2014/07/41.jpg" alt="41" width="255" height="300" /></a></p>
<h3>一天应该喝多少水？</h3>
<p>这是我脑海里首先跳出来的问题。我在网上搜索，发现我应该每天喝至少1.5升的水。</p>
<p>作为试验，我开始每天带一个1升的水壶去上班。</p>
<p><a href="https://www.runoob.com/wp-content/uploads/2014/07/g.jpg"><img class="attachment-full" src="https://www.runoob.com/wp-content/uploads/2014/07/g.jpg" alt="g" width="105" height="300" /></a></p>
<p>我开始强迫自己喝更多的水。</p>
<p>还有，早上，我开始不再喝咖啡，而是改喝绿茶。</p>
<h3>试验结果</h3>
<p>一个月后，我发现，每天我都会带回家半壶水，我喝不了一整壶水。</p>
<p>六个月后，我发现，我每天能喝大半壶水了。我感觉越来越好，消化功能有轻微改善。</p>
<p><strong>我开始在睡觉前在床边放一壶水，这是转折点。</strong></p>
<p>在开始睡前喝水之后，我感到了明显的改善。</p>
<p>今天，我在上班时喝了一整壶水。</p>
<h3>多喝水给我带来的好处</h3>
<ul>
<li>我的脸开始有光泽</li>
</ul>
<ul>
<li>我的消耗功能改善了很多(这也跟我多锻炼有关)</li>
</ul>
<ul>
<li>我有了更好的状态，感到更有精力了。</li>
</ul>
<ul>
<li>体重减轻</li>
</ul>]]></description></item><item><title>如何通过给MM修电脑培养感情</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986134.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 14:24:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986134.html</guid><description><![CDATA[<p>文章来自网络</p>
<p>&nbsp;</p>
<p>在修之前，向MM反复声明，这电脑故障是有硬件和软件之分的，如果是硬件故障，例如显卡风扇不转了，显示器连线老化，显示器分辨率超出显示器指标，等等都会导致黑屏啊，这个我不回家用专门的工具是修不好的！</p>
<p>这样一旦真的没修好，就立刻耸肩膀装作无奈：真的是硬件问题，还是送去保修吧。而MM当作硬件问题去保修，JS大人即使发现是软件问题，也会毫不犹豫作为硬件问题处理，所以绝对不会有败露的麻烦。</p>
<p><strong>表演篇（中） &ndash; 不管问题 一律重装系统！</strong></p>
<p>不管发生什么，只要MM同意，一律重装系统！这是最简单的方法，虽然很菜。但是如果要感动MM，这也是最好的方法，因为MM会在漫长的等待中觉得你真是很有耐心和爱心的好男人！哈哈哈哈，太阴险了，所以给恐龙修电脑，一般还是对症下药，速战速决，确实当恐龙看上你的时候，你就知道这不是RPWT，而是生命问题！</p>
<p><strong>表演篇（下） &ndash; 关心MM要体现在细节！</strong></p>
<p>如果选择重装，一定要反复问MM：真的可以吗？MM第一遍一般就说可以，这时候要问：没有重要的照片、文档吗？MM会犹豫，但是还是会说不要好了；这时候接着问：QQ聊天记录也会丢掉的！MM会说不要了；记着这时要作思考状，然后问：有没有重要的邮件啊，邮件也会丢掉的。一般啊，很多MM这个时候会反悔，她们就会觉得你是超级贴心人了。</p>
<p>如果选择打开机箱，一定要作惊讶状！怎么这么多灰尘啊！！！（我只见过一个MM的机箱里没有灰尘的，她是实在太爱干净了）这时候MM一般都会不知道怎么回答，你立刻要作出为电脑难过的样子：这么好的电脑，灰尘太多怎么跑得快啊，散热也会受影响的，当然容易出问题了。哈哈哈哈，MM内疚的同时就会觉得你这个人特别懂得爱惜珍惜疼惜是新好男人。</p>
<p><strong>技术篇（上） &ndash; MM电脑出的通常都是弱智问题</strong></p>
<p>所以不要用特别专业的眼光去分析，一般都是系统设置没设置好，例如曾经一个MM，帮她新配的电脑，说音箱左边的不响，过去检查，果然不响，怎么调都只有电流声，心想坏了，买到坏的了，结果不死心一看，音量控制里她全搁到右声道了，晕死！</p>
<p>对于显示屏黑屏这种事情，要多看看显示器开关有没有开，显示器有没有插上电源，显示器线有没有连到主机等等问题！</p>
<p>稍微高级一点，看看BIOS设定，显示器分辨率设定，对比度设定等等，再高级一点，看看是不是显卡风扇停转了在有别的电脑的情况下，和别的电脑对调一下显示器看看，容易分辨是不是显示器的问题。</p>
<p>但是要注意，要是女生寝室的话，慎用！！！因为女生寝室一般好像关系都不好，就是好也不愿意为别人的电脑奉献自己的电脑，这一点和男生寝室不一样，要鄙视一下！要想帅，带上可以外接显示器的本本去，要轻薄的，2.3kg以上就不要驮过去丢脸了。</p>
<p><strong>技术篇（中） &ndash; 要想MM崇拜 请务必拆机箱</strong></p>
<p>不管是不是硬件问题，如果你想MM崇拜到要嫁给你的地步，记住一定要带上一根较大的十字起子，推荐电脑城装机的那种，很长很长的，超帅！我一般带上两根，一个十字头，一个一字头，一个红色有机玻璃柄，一个绿色玻璃柄，就像两把短剑，有了这两柄利器，感觉立马不一样！MM立刻觉得你就是专业的，如果MM看到后觉得害怕，别忘趁势解释一句：修的多了，随身带着方便，你的问题不一定那么大，或许用不上。MM这个时候只会希望自己的电脑坏的彻底一点，好见识你挥动长剑的潇洒身姿！哈哈哈哈，这句是丫丫而已。</p>
<p><strong>技术篇（下） &ndash; 熟练掌握BIOS的窍门是看说明书</strong></p>
<p>其实很多时候问题和解决问题的方法都在BIOS设定上，例如必须掌握的光驱启动，就在BIOS设定里面，这个时候万一忘记了怎么办，求助于说明书吧！！！其实在说明书中，一般都有详尽的说明，甚至包括常见问题的解决方法，只是MM们比较娇嫩，不适宜阅读这么生硬的文字罢了，你的责任就是阅读它们！！！</p>
<p>不要觉得临时看说明书很丢脸！如果说拆机箱可以展现你武的一面，那么你专注阅读的神情正是你展现自己文的一面最好机会！！！能文能武才是你获取MM芳心的致胜法宝，只知道挥着袖子与主板上的灰尘大战的土匪只会让MM觉得这些喜欢硬件的GG都是脏兮兮的疯子。</p>
<p>而你要求获得主板、显卡及其他相关说明书最好的方法，要么就是一开始索要，一进门就让她把她放这些东西的盒子搬出来放好；要么就是拆开机箱以后，惊讶一句：啊！这不是公版设计，我要看一下出厂时的说明书！！！甭管是什么设计，你这一句话出去，MM只会觉得你暴有水准，一眼就能看出是什么设计，其实她们也不知道什么叫公版设计母版设计的。</p>
<p><strong>感情篇（上） &ndash; MM的电脑永远都是最好的</strong></p>
<p>MM一般最要面子，但是找你修电脑总是电脑出了问题，所以你这个时候一定不能在伤口上散盐，切忌在修电脑的时候说：啊这种配置啊，该升级了。或者：这种杂牌的显卡最好不要用。或者：XXX的显示器最烂了。表以为这样可以显示你对硬件市场品牌的了解和个人的品位，这只会让MM恨死你！早期我就犯过类似口不遮拦的错误，结果有一段时间MM们电脑坏了也不敢来找我，唉，前车之鉴啊！</p>
<p>对于MM的电脑，如果牌子好，哪怕是集成主板，也要说这个牌子我最喜欢了，稳定性超好，这次多半是软件问题，盗版毛病就是多！（甭管她机子装的系统是不是正版，用的软件总有盗版吧）如果牌子不好，立刻说，这个牌子性价比一直就是最好的，你真会过日子！不要忘记说"你真会过日子"的时候，一定要注视MM面带百分百诚恳的微笑！！！如果真的什么都不行，就是完全该被淘汰的机子，尽量就不要说话了！！！说什么只会让场面更难堪！！！ 把电脑当作MM的脸，你就知道该怎么做了！</p>
<p><strong>感情篇（中） &ndash; 准确把握时间 营造相遇空间</strong></p>
<p>一般MM让你修电脑，如果答谢的话，一般都是请你吃饭，如果她请你吃饭的规格远远超过正常修电脑的花费，不妨检查一下电脑是否有人为破坏的因素，对于不同的MM，土匪当然是有的求之不得，有的避之不及，因而准确控制维修过程的时间就很重要。这里教初学者一些计算时间的方法：</p>
<p>用GHOST装一个XP系统，一般是25分钟左右（如果你很熟练，20分钟内就够了）用自动方式装一个XP系统，大约是1个小时（具体没算过，如果是烂威盛主板，装好驱动还不止）装一个OFFICE，大约还是要半个小时（这个可以在自定义里中选择，想拖延时间就全选，大概可以多争取半小时）时间还不到吃饭时间，或者时间到了吃饭时间但是你不想去，都可以通过装软件来慢慢消耗，实在不行，就卸载了多装几遍！</p>
<p>当你长年累月修电脑产生厌烦心理时，推荐使用市面上的高度集成版的XP的GHOST版，一次把乱七八糟的软件都给装上了，整个时间和装一个XP干净系统也差不多，装完就走人。</p>
<p><strong>感情篇（下） &ndash; 通过修电脑检验MM人品的方法</strong></p>
<p>实际上利用修电脑这一机会来泡MM的土匪，一般平时都是花了较多时间陪着自己的电脑和网友，没有太多时间和固定场所（例如大学自修室、英语角或者公共社交场所）接触真实MM的人。很多这方面的高手也都是成功地在修好电脑的同时弥补了自己姻缘的缺憾，顺利找到另一半！但是并不是所有的相遇都是美满的结局，这除了土匪个人的RPWT，主要还在于他们在修理电脑的时候没有注意MM们的RPWT。给出一些个人建议：</p>
<p>如果MM只会站在一边看着你修，连杯水都不给你倒，除非她年纪太小太不懂事，不然这样的MM基本不懂关心照顾别人，也不懂尊重别人的劳动和付出。这样的MM若不是超级大美女，还是算了！</p>
<p>如果MM会一直问这问那，特别是如果主要问你为什么要这样修的原因，这种MM不够重视分工，喜欢主导一切，不能够尊重权威和相信理性，娶回家只会让你多一个唠唠叨叨的监工。如果你不喜欢被人呼来唤去，没有自疟倾向，这种MM还是算了！</p>
<p>如果MM一直问你要不要喝水，要不要歇一会儿，还问一些和修电脑无关的情况，例如问你这么好的技术都怎么学来的啊，如果殷勤到一反常态的地步，恭喜你！这个MM想泡你！！！如果这个MM一贯对人热情，那么这种MM属于擅长公关，有很强的管理和组织能力，这种MM也会成为未来家中的主管，但是好在是一种以人为本的管理，你不至于太痛苦这样的MM，只要平时不是那种过分往上爬巴结领导的类型，实际上还算不错的选择。</p>
<p>如果MM话并不多，默默地给你倒杯水，然后再一旁看着，不时跑过来帮你递东西，这种是贤妻良母型，是那种甘愿在背后默默支持你的类型，你要是事业主导型的土匪，毫不犹豫泡这个MM吧！！！极品赞不绝口。（就是恐龙也不妨考虑一下）</p>
<p>如果MM给你东西吃，证明对你不见外；从来没见过的MM话，证明对你很有好感！小子，你赚了！</p>
<p>MM站着看你修电脑，有座位不坐，离得近的是关心电脑！离得远的还站着，如果不是眼睛超好的那种，这种MM有同甘共苦的意识，一般富有同情心，比较爱国（自己到时候对照一下）</p>
<p>MM坐着看你修电脑，正常；MM坐着但是不看你，眼光会游移到别的地方或者做自己的小动作，死了心吧！她已经有意中人了！</p>
<p>MM躺着看你修电脑（还真的有！）遇到的都是和我太熟悉的才这样！第一次就这样没遇到过，真有的话，就是RPWT！！！</p>
<p>MM在你修电脑的时候去洗澡了（遇到一次！）这个MM如果不是三天没洗澡，那就是把你当成家人看待了，我觉得关系很熟这样的话就不算什么；如果第一次就这样，建议逃走或者躺下！！！</p>
<p>MM修电脑的时候把父母介绍给你（到她家修电脑）或者给你看她存在电脑上家人的照片，她很希望成为你重要的朋友。</p>
<p>MM修电脑的时候把MM介绍给你，电脑其实没问题，这个MM觉得你人不错，肥水不流外人田，便宜自己的姐妹先。或者她姐妹最近刚失恋，需要找个凯子过渡一下。</p>]]></description></item><item><title>代码神注释鉴赏，喜欢拿去用</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986078.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 14:15:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986078.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #000000;">魔性图
</span><span style="color: #008000;">/*</span><span style="color: #008000;">*　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
 *　　　　　　　　　瓦瓦　　　　　　　　　　　　十　　　　　　　　　　　　　
 *　　　　　　　　十齱龠己　　　　　　　　　亅瓦車己　　　　　　　　　　　　
 *　　　　　　　　乙龍龠毋日丶　　　　　　丶乙己毋毋丶　　　　　　　　　　　
 *　　　　　　　　十龠馬鬼車瓦　　　　　　己十瓦毋毋　　　　　　　　　　　　
 *　　　　　　　　　鬼馬龠馬龠十　　　　己己毋車毋瓦　　　　　　　　　　　　
 *　　　　　　　　　毋龠龠龍龠鬼乙丶丶乙車乙毋鬼車己　　　　　　　　　　　　
 *　　　　　　　　　乙龠龍龍鬼龍瓦　十瓦毋乙瓦龠瓦亅　　　　　　　　　　　　
 *　　　　　　　　　　馬齱龍馬鬼十丶日己己己毋車乙丶　　　　　　　　　　　　
 *　　　　　　　　　　己齱馬鬼車十十毋日乙己己乙乙　　　　　　　　　　　　　
 *　　　　　　　　　　　車馬齱齱日乙毋瓦己乙瓦日亅　　　　　　　　　　　　　
 *　　　　　　　　　　　亅車齺龖瓦乙車龖龍乙乙十　　　　　　　　　　　　　　
 *　　　　　　　　　　　　日龠龠十亅車龍毋十十　　　　　　　　　　　　　　　
 *　　　　　　　　　　　　日毋己亅　己己十亅亅　　　　　　　　　　　　　　　
 *　　　　　　　　　　　丶己十十乙　　丶丶丶丶丶　　　　　　　　　　　　　　
 *　　　　　　　　　　　亅己十龍龖瓦　　丶　丶　乙十　　　　　　　　　　　　
 *　　　　　　　　　　　亅己十龠龖毋　丶丶　　丶己鬼鬼瓦亅　　　　　　　　　
 *　　　　　　　　　　　十日十十日亅丶亅丶　丶十日毋鬼馬馬車乙　　　　　　　
 *　　　　　　　　　　　十日乙十亅亅亅丶　　十乙己毋鬼鬼鬼龍齺馬乙　　　　　
 *　　　　　　　　　　　丶瓦己乙十十亅丶亅乙乙乙己毋鬼鬼鬼龍齱齺齺鬼十　　　
 *　　　　　　　　　　　　乙乙十十十亅乙瓦瓦己日瓦毋鬼鬼龠齱齱龍龍齱齱毋丶　
 *　　　　　　　　　　　　亅十十十十乙瓦車毋瓦瓦日車馬龠龍龍龍龍龍龠龠龠馬亅
 *　　　　　　　　　　　　　十十十十己毋車瓦瓦瓦瓦鬼馬龠龍龠龠龍龠龠龠馬龠車
 *　　　　　　　　　　　　　　亅十十日毋瓦日日瓦鬼鬼鬼龠龠馬馬龠龍龍龠馬馬車
 *　　　　　　　　　　　　　　亅亅亅乙瓦瓦毋車車車馬龍龠鬼鬼馬龠龍龍龠馬馬鬼
 *　　　　　　　　　　　　丶丶乙亅亅乙車鬼鬼鬼毋車龍龍龠鬼馬馬龠龍齱齱龍馬鬼
 *　　　　　　　　　　　亅己十十己十日鬼鬼車瓦毋龠龍龠馬馬龠龠龠齱齺齺齱龠鬼
 *　　　　　　　　　　　　亅乙乙乙十車馬車毋馬齱齱龍龠龠龠馬龠龍齱龍龠龠鬼瓦
 *　　　　　　　　　　　　　　　　丶毋龠鬼車瓦車馬龠龍龠龠龍齱齱龠馬馬鬼毋日
 *　　　　　　　　　　　　　　　　十乙己日十　　丶己鬼龍齱齺齱龍馬馬馬車毋己
 *　　　　　　　　　　　　　　丶十己乙亅丶　　　　　　亅瓦馬龠龍龠龠馬毋瓦乙
 *　　　　　　　　　　　　　丶十十乙亅十　　　　　　　　亅己瓦車馬龠鬼車瓦乙
 *　　　　　　　　　　　　　丶十乙十十丶　　　　　　　　　丶丶亅十瓦鬼車瓦己
 *　　　　　　　　　　　　　　丶亅亅丶　　　　　　　　　　　　　　　亅日瓦日
 *　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　丶
 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
就不卖关子了，图片转字符可以上这个传送门，白底的话会按空格补全，否则都为字符。

前面的传送门貌似出了点问题，下面再补上个新的传送门，也是很好用的，可以选择质量。

这不，下面的两只doge和一头滑稽就是产自于它，have fun，快去制作专属的字符注释吧。

再补上一个好玩的网站Ascii World，由于这网站的图形太多了，我就不贴上来了。

</span><span style="color: #008000;">/*</span><span style="color: #008000;">*                                                                          
 *          .,:,,,                                        .::,,,::.          
 *        .::::,,;;,                                  .,;;:,,....:i:         
 *        :i,.::::,;i:.      ....,,:::::::::,....   .;i:,.  ......;i.        
 *        :;..:::;::::i;,,:::;:,,,,,,,,,,..,.,,:::iri:. .,:irsr:,.;i.        
 *        ;;..,::::;;;;ri,,,.                    ..,,:;s1s1ssrr;,.;r,        
 *        :;. ,::;ii;:,     . ...................     .;iirri;;;,,;i,        
 *        ,i. .;ri:.   ... ............................  .,,:;:,,,;i:        
 *        :s,.;r:... ....................................... .::;::s;        
 *        ,1r::. .............,,,.,,:,,........................,;iir;        
 *        ,s;...........     ..::.,;:,,.          ...............,;1s        
 *       :i,..,.              .,:,,::,.          .......... .......;1,       
 *      ir,....:rrssr;:,       ,,.,::.     .r5S9989398G95hr;. ....,.:s,      
 *     ;r,..,s9855513XHAG3i   .,,,,,,,.  ,S931,.,,.;s;s&amp;BHHA8s.,..,..:r:     
 *    :r;..rGGh,  :SAG;;G@BS:.,,,,,,,,,.r83:      hHH1sXMBHHHM3..,,,,.ir.    
 *   ,si,.1GS,   sBMAAX&amp;MBMB5,,,,,,:,,.:&amp;8       3@HXHBMBHBBH#X,.,,,,,,rr    
 *   ;1:,,SH:   .A@&amp;&amp;B#&amp;8H#BS,,,,,,,,,.,5XS,     3@MHABM&amp;59M#As..,,,,:,is,   
 *  .rr,,,;9&amp;1   hBHHBB&amp;8AMGr,,,,,,,,,,,:h&amp;&amp;9s;   r9&amp;BMHBHMB9:  . .,,,,;ri.  
 *  :1:....:5&amp;XSi;r8BMBHHA9r:,......,,,,:ii19GG88899XHHH&amp;GSr.      ...,:rs.  
 *  ;s.     .:sS8G8GG889hi.        ....,,:;:,.:irssrriii:,.        ...,,i1,  
 *  ;1,         ..,....,,isssi;,        .,,.                      ....,.i1,  
 *  ;h:               i9HHBMBBHAX9:         .                     ...,,,rs,  
 *  ,1i..            :A#MBBBBMHB##s                             ....,,,;si.  
 *  .r1,..        ,..;3BMBBBHBB#Bh.     ..                    ....,,,,,i1;   
 *   :h;..       .,..;,1XBMMMMBXs,.,, .. :: ,.               ....,,,,,,ss.   
 *    ih: ..    .;;;, ;;:s58A3i,..    ,. ,.:,,.             ...,,,,,:,s1,    
 *    .s1,....   .,;sh,  ,iSAXs;.    ,.  ,,.i85            ...,,,,,,:i1;     
 *     .rh: ...     rXG9XBBM#M#MHAX3hss13&amp;&amp;HHXr         .....,,,,,,,ih;      
 *      .s5: .....    i598X&amp;&amp;A&amp;AAAAAA&amp;XG851r:       ........,,,,:,,sh;       
 *      . ihr, ...  .         ..                    ........,,,,,;11:.       
 *         ,s1i. ...  ..,,,..,,,.,,.,,.,..       ........,,.,,.;s5i.         
 *          .:s1r,......................       ..............;shs,           
 *          . .:shr:.  ....                 ..............,ishs.             
 *              .,issr;,... ...........................,is1s;.               
 *                 .,is1si;:,....................,:;ir1sr;,                  
 *                    ..:isssssrrii;::::::;;iirsssssr;:..                    
 *                         .,::iiirsssssssssrri;;:.                      
 </span><span style="color: #008000;">*/</span>                         


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *               ii.                                         ;9ABH,          
 *              SA391,                                    .r9GG35&amp;G          
 *              &amp;#ii13Gh;                               i3X31i;:,rB1         
 *              iMs,:,i5895,                         .5G91:,:;:s1:8A         
 *               33::::,,;5G5,                     ,58Si,,:::,sHX;iH1        
 *                Sr.,:;rs13BBX35hh11511h5Shhh5S3GAXS:.,,::,,1AG3i,GG        
 *                .G51S511sr;;iiiishS8G89Shsrrsh59S;.,,,,,..5A85Si,h8        
 *               :SB9s:,............................,,,.,,,SASh53h,1G.       
 *            .r18S;..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....,,.1H315199,rX,       
 *          ;S89s,..,,,,,,,,,,,,,,,,,,,,,,,....,,.......,,,;r1ShS8,;Xi       
 *        i55s:.........,,,,,,,,,,,,,,,,.,,,......,.....,,....r9&amp;5.:X1       
 *       59;.....,.     .,,,,,,,,,,,...        .............,..:1;.:&amp;s       
 *      s8,..;53S5S3s.   .,,,,,,,.,..      i15S5h1:.........,,,..,,:99       
 *      93.:39s:rSGB@A;  ..,,,,.....    .SG3hhh9G&amp;BGi..,,,,,,,,,,,,.,83      
 *      G5.G8  9#@@@@@X. .,,,,,,.....  iA9,.S&amp;B###@@Mr...,,,,,,,,..,.;Xh     
 *      Gs.X8 S@@@@@@@B:..,,,,,,,,,,. rA1 ,A@@@@@@@@@H:........,,,,,,.iX:    
 *     ;9. ,8A#@@@@@@#5,.,,,,,,,,,... 9A. 8@@@@@@@@@@M;    ....,,,,,,,,S8    
 *     X3    iS8XAHH8s.,,,,,,,,,,...,..58hH@@@@@@@@@Hs       ...,,,,,,,:Gs   
 *    r8,        ,,,...,,,,,,,,,,.....  ,h8XABMMHX3r.          .,,,,,,,.rX:  
 *   :9, .    .:,..,:;;;::,.,,,,,..          .,,.               ..,,,,,,.59  
 *  .Si      ,:.i8HBMMMMMB&amp;5,....                    .            .,,,,,.sMr
 *  SS       :: h@@@@@@@@@@#; .                     ...  .         ..,,,,iM5
 *  91  .    ;:.,1&amp;@@@@@@MXs.                            .          .,,:,:&amp;S
 *  hS ....  .:;,,,i3MMS1;..,..... .  .     ...                     ..,:,.99
 *  ,8; ..... .,:,..,8Ms:;,,,...                                     .,::.83
 *   s&amp;: ....  .sS553B@@HX3s;,.    .,;13h.                            .:::&amp;1
 *    SXr  .  ...;s3G99XA&amp;X88Shss11155hi.                             ,;:h&amp;,
 *     iH8:  . ..   ,;iiii;,::,,,,,.                                 .;irHA  
 *      ,8X5;   .     .......                                       ,;iihS8Gi
 *         1831,                                                 .,;irrrrrs&amp;@
 *           ;5A8r.                                            .:;iiiiirrss1H
 *             :X@H3s.......                                .,:;iii;iiiiirsrh
 *              r#h:;,...,,.. .,,:;;;;;:::,...              .:;;;;;;iiiirrss1
 *             ,M8 ..,....,.....,,::::::,,...         .     .,;;;iiiiiirss11h
 *             8B;.,,,,,,,.,.....          .           ..   .:;;;;iirrsss111h
 *            i@5,:::,,,,,,,,.... .                   . .:::;;;;;irrrss111111
 *            9Bi,:,,,,......                        ..r91;;;;;iirrsss1ss1111
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*                                                                    
 *            .,,       .,:;;iiiiiiiii;;:,,.     .,,                   
 *          rGB##HS,.;iirrrrriiiiiiiiiirrrrri;,s&amp;##MAS,                
 *         r5s;:r3AH5iiiii;;;;;;;;;;;;;;;;iiirXHGSsiih1,               
 *            .;i;;s91;;;;;;::::::::::::;;;;iS5;;;ii:                  
 *          :rsriii;;r::::::::::::::::::::::;;,;;iiirsi,               
 *       .,iri;;::::;;;;;;::,,,,,,,,,,,,,..,,;;;;;;;;iiri,,.           
 *    ,9BM&amp;,            .,:;;:,,,,,,,,,,,hXA8:            ..,,,.       
 *   ,;&amp;@@#r:;;;;;::::,,.   ,r,,,,,,,,,,iA@@@s,,:::;;;::,,.   .;.      
 *    :ih1iii;;;;;::::;;;;;;;:,,,,,,,,,,;i55r;;;;;;;;;iiirrrr,..       
 *   .ir;;iiiiiiiiii;;;;::::::,,,,,,,:::::,,:;;;iiiiiiiiiiiiri         
 *   iriiiiiiiiiiiiiiii;;;::::::::::::::::;;;iiiiiiiiiiiiiiiir;        
 *  ,riii;;;;;;;;;;;;;:::::::::::::::::::::::;;;;;;;;;;;;;;iiir.       
 *  iri;;;::::,,,,,,,,,,:::::::::::::::::::::::::,::,,::::;;iir:       
 * .rii;;::::,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,::::;;iri       
 * ,rii;;;::,,,,,,,,,,,,,:::::::::::,:::::,,,,,,,,,,,,,:::;;;iir.      
 * ,rii;;i::,,,,,,,,,,,,,:::::::::::::::::,,,,,,,,,,,,,,::i;;iir.      
 * ,rii;;r::,,,,,,,,,,,,,:,:::::,:,:::::::,,,,,,,,,,,,,::;r;;iir.      
 * .rii;;rr,:,,,,,,,,,,,,,,:::::::::::::::,,,,,,,,,,,,,:,si;;iri       
 *  ;rii;:1i,,,,,,,,,,,,,,,,,,:::::::::,,,,,,,,,,,,,,,:,ss:;iir:       
 *  .rii;;;5r,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,sh:;;iri        
 *   ;rii;:;51,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.:hh:;;iir,        
 *    irii;::hSr,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,sSs:;;iir:         
 *     irii;;:iSSs:.,,,,,,,,,,,,,,,,,,,,,,,,,,,..:135;:;;iir:          
 *      ;rii;;:,r535r:...,,,,,,,,,,,,,,,,,,..,;sS35i,;;iirr:           
 *       :rrii;;:,;1S3Shs;:,............,:is533Ss:,;;;iiri,            
 *        .;rrii;;;:,;rhS393S55hh11hh5S3393Shr:,:;;;iirr:              
 *          .;rriii;;;::,:;is1h555555h1si;:,::;;;iirri:.               
 *            .:irrrii;;;;;:::,,,,,,,,:::;;;;iiirrr;,                  
 *               .:irrrriiiiii;;;;;;;;iiiiiirrrr;,.                    
 *                  .,:;iirrrrrrrrrrrrrrrrri;:.                        
 *                        ..,:::;;;;:::,,.                             
 </span><span style="color: #008000;">*/</span>                                                                     


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * ┌───┐   ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┬───┐ ┌───┬───┬───┐
 * │Esc│   │ F1│ F2│ F3│ F4│ │ F5│ F6│ F7│ F8│ │ F9│F10│F11│F12│ │P/S│S L│P/B│  ┌┐    ┌┐    ┌┐
 * └───┘   └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┴───┘ └───┴───┴───┘  └┘    └┘    └┘
 * ┌───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───┬───────┐ ┌───┬───┬───┐ ┌───┬───┬───┬───┐
 * │~ `│! 1│@ 2│# 3│$ 4│% 5│^ 6│&amp; 7│* 8│( 9│) 0│_ -│+ =│ BacSp │ │Ins│Hom│PUp│ │N L│ / │ * │ - │
 * ├───┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─────┤ ├───┼───┼───┤ ├───┼───┼───┼───┤
 * │ Tab │ Q │ W │ E │ R │ T │ Y │ U │ I │ O │ P │{ [│} ]│ | \ │ │Del│End│PDn│ │ 7 │ 8 │ 9 │   │
 * ├─────┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴┬──┴─────┤ └───┴───┴───┘ ├───┼───┼───┤ + │
 * │ Caps │ A │ S │ D │ F │ G │ H │ J │ K │ L │: ;│" '│ Enter  │               │ 4 │ 5 │ 6 │   │
 * ├──────┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴─┬─┴────────┤     ┌───┐     ├───┼───┼───┼───┤
 * │ Shift  │ Z │ X │ C │ V │ B │ N │ M │&lt; ,│&gt; .│? /│  Shift   │     │ &uarr; │     │ 1 │ 2 │ 3 │   │
 * ├─────┬──┴─┬─┴──┬┴───┴───┴───┴───┴───┴──┬┴───┼───┴┬────┬────┤ ┌───┼───┼───┐ ├───┴───┼───┤ E││
 * │ Ctrl│    │Alt │         Space         │ Alt│    │    │Ctrl│ │ &larr; │ &darr; │ &rarr; │ │   0   │ . │&larr;─┘│
 * └─────┴────┴────┴───────────────────────┴────┴────┴────┴────┘ └───┴───┴───┘ └───────┴───┴───┘
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *                    _ooOoo_
 *                   o8888888o
 *                   88" . "88
 *                   (| -_- |)
 *                    O\ = /O
 *                ____/`---'\____
 *              .   ' \\| |// `.
 *               / \\||| : |||// \
 *             / _||||| -:- |||||- \
 *               | | \\\ - /// | |
 *             | \_| ''\---/'' | |
 *              \ .-\__ `-` ___/-. /
 *           ___`. .' /--.--\ `. . __
 *        ."" '&lt; `.___\_&lt;|&gt;_/___.' &gt;'"".
 *       | | : `- \`.;`\ _ /`;.`/ - ` : | |
 *         \ \ `-. \_ __\ /__ _/ .-` / /
 * ======`-.____`-.___\_____/___.-`____.-'======
 *                    `=---='
 *
 * .............................................
 *          佛祖保佑             永无BUG
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *  佛曰:
 *          写字楼里写字间，写字间里程序员；
 *          程序人员写程序，又拿程序换酒钱。
 *          酒醒只在网上坐，酒醉还来网下眠；
 *          酒醉酒醒日复日，网上网下年复年。
 *          但愿老死电脑间，不愿鞠躬老板前；
 *          奔驰宝马贵者趣，公交自行程序员。
 *          别人笑我忒疯癫，我笑自己命太贱；
 *          不见满街漂亮妹，哪个归得程序员？
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * _ooOoo_
 * o8888888o
 * 88" . "88
 * (| -_- |)
 *  O\ = /O
 * ___/`---'\____
 * .   ' \\| |// `.
 * / \\||| : |||// \
 * / _||||| -:- |||||- \
 * | | \\\ - /// | |
 * | \_| ''\---/'' | |
 * \ .-\__ `-` ___/-. /
 * ___`. .' /--.--\ `. . __
 * ."" '&lt; `.___\_&lt;|&gt;_/___.' &gt;'"".
 * | | : `- \`.;`\ _ /`;.`/ - ` : | |
 * \ \ `-. \_ __\ /__ _/ .-` / /
 * ======`-.____`-.___\_____/___.-`____.-'======
 * `=---='
 *          .............................................
 *           佛曰：bug泛滥，我已瘫痪！
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *
 *   █████▒█    ██  ▄████▄   ██ ▄█▀       ██████╗ ██╗   ██╗ ██████╗
 * ▓██   ▒ ██  ▓██▒▒██▀ ▀█   ██▄█▒        ██╔══██╗██║   ██║██╔════╝
 * ▒████ ░▓██  ▒██░▒▓█    ▄ ▓███▄░        ██████╔╝██║   ██║██║  ███╗
 * ░▓█▒  ░▓▓█  ░██░▒▓▓▄ ▄██▒▓██ █▄        ██╔══██╗██║   ██║██║   ██║
 * ░▒█░   ▒▒█████▓ ▒ ▓███▀ ░▒██▒ █▄       ██████╔╝╚██████╔╝╚██████╔╝
 *  ▒ ░   ░▒▓▒ ▒ ▒ ░ ░▒ ▒  ░▒ ▒▒ ▓▒       ╚═════╝  ╚═════╝  ╚═════╝
 *  ░     ░░▒░ ░ ░   ░  ▒   ░ ░▒ ▒░
 *  ░ ░    ░░░ ░ ░ ░        ░ ░░ ░
 *           ░     ░ ░      ░  ░
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *                    .::::.
 *                  .::::::::.
 *                 :::::::::::  FUCK YOU
 *             ..:::::::::::'
 *           '::::::::::::'
 *             .::::::::::
 *        '::::::::::::::..
 *             ..::::::::::::.
 *           ``::::::::::::::::
 *            ::::``:::::::::'        .:::.
 *           ::::'   ':::::'       .::::::::.
 *         .::::'      ::::     .:::::::'::::.
 *        .:::'       :::::  .:::::::::' ':::::.
 *       .::'        :::::.:::::::::'      ':::::.
 *      .::'         ::::::::::::::'         ``::::.
 *  ...:::           ::::::::::::'              ``::.
 * ```` ':.          ':::::::::'                  ::::..
 *                    '.:::::'                    ':'````..
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *      ┌─┐       ┌─┐
 *   ┌──┘ ┴───────┘ ┴──┐
 *   │                 │
 *   │       ───       │
 *   │  ─┬┘       └┬─  │
 *   │                 │
 *   │       ─┴─       │
 *   │                 │
 *   └───┐         ┌───┘
 *       │         │
 *       │         │
 *       │         │
 *       │         └──────────────┐
 *       │                        │
 *       │                        ├─┐
 *       │                        ┌─┘
 *       │                        │
 *       └─┐  ┐  ┌───────┬──┐  ┌──┘
 *         │ ─┤ ─┤       │ ─┤ ─┤
 *         └──┴──┘       └──┴──┘
 *                神兽保佑
 *               代码无BUG!
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *      ┌─┐       ┌─┐
 *   ┌──┘ ┴───────┘ ┴──┐
 *   │                 │
 *   │       ───       │
 *   │   &gt;        &lt;    │
 *   │                 │
 *   │   ...  ⌒  ...   │
 *   │                 │
 *   └───┐         ┌───┘
 *       │         │
 *       │         │
 *       │         │
 *       │         └──────────────┐
 *       │                        │
 *       │                        ├─┐
 *       │                        ┌─┘
 *       │                        │
 *       └─┐  ┐  ┌───────┬──┐  ┌──┘
 *         │ ─┤ ─┤       │ ─┤ ─┤
 *         └──┴──┘       └──┴──┘
 *                神兽保佑
 *               代码无BUG!
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *      ┌─┐       ┌─┐ + +
 *   ┌──┘ ┴───────┘ ┴──┐++
 *   │                 │
 *   │       ───       │++ + + +
 *   ███████───███████ │+
 *   │                 │+
 *   │       ─┴─       │
 *   │                 │
 *   └───┐         ┌───┘
 *       │         │
 *       │         │   + +
 *       │         │
 *       │         └──────────────┐
 *       │                        │
 *       │                        ├─┐
 *       │                        ┌─┘
 *       │                        │
 *       └─┐  ┐  ┌───────┬──┐  ┌──┘  + + + +
 *         │ ─┤ ─┤       │ ─┤ ─┤
 *         └──┴──┘       └──┴──┘  + + + +
 *                神兽保佑
 *               代码无BUG!
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *                  ___====-_  _-====___
 *            _--^^^#####//      \\#####^^^--_
 *         _-^##########// (    ) \\##########^-_
 *        -############//  |\^^/|  \\############-
 *      _/############//   (@::@)   \\############\_
 *     /#############((     \\//     ))#############\
 *    -###############\\    (oo)    //###############-
 *   -#################\\  / VV \  //#################-
 *  -###################\\/      \//###################-
 * _#/|##########/\######(   /\   )######/\##########|\#_
 * |/ |#/\#/\#/\/  \#/\##\  |  |  /##/\#/  \/\#/\#/\#| \|
 * `  |/  V  V  `   V  \#\| |  | |/#/  V   '  V  V  \|  '
 *    `   `  `      `   / | |  | | \   '      '  '   '
 *                     (  | |  | |  )
 *                    __\ | |  | | /__
 *                   (vvv(VVV)(VVV)vvv)                
 *                        神兽保佑
 *                       代码无BUG!
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *
 *
 *                                                    __----~~~~~~~~~~~------___
 *                                   .  .   ~~//====......          __--~ ~~
 *                   -.            \_|//     |||\\  ~~~~~~::::... /~
 *                ___-==_       _-~o~  \/    |||  \\            _/~~-
 *        __---~~~.==~||\=_    -_--~/_-~|-   |\\   \\        _/~
 *    _-~~     .=~    |  \\-_    '-~7  /-   /  ||    \      /
 *  .~       .~       |   \\ -_    /  /-   /   ||      \   /
 * /  ____  /         |     \\ ~-_/  /|- _/   .||       \ /
 * |~~    ~~|--~~~~--_ \     ~==-/   | \~--===~~        .\
 *          '         ~-|      /|    |-~\~~       __--~~
 *                      |-~~-_/ |    |   ~\_   _-~            /\
 *                           /  \     \__   \/~                \__
 *                       _--~ _/ | .-~~____--~-/                  ~~==.
 *                      ((-&gt;/~   '.|||' -_|    ~~-/ ,              . _||
 *                                 -_     ~\      ~~---l__i__i__i--~~_/
 *                                 _-~-__   ~)  \--______________--~~
 *                               //.-~~~-~_--~- |-------~~~~~~~~
 *                                      //.-~~~--\
 *                               神兽保佑
 *                              代码无BUG!
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*                              _
 *  _._ _..._ .-',     _.._(`))
 * '-. `     '  /-._.-'    ',/
 *    )         \            '.
 *   / _    _    |             \
 *  |  a    a    /              |
 *  \   .-.                     ;
 *   '-('' ).-'       ,'       ;
 *      '-;           |      .'
 *         \           \    /
 *         | 7  .__  _.-\   \
 *         | |  |  ``/  /`  /
 *        /,_|  |   /,_/   /
 *           /,_/      '`-'
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 **************************************************************
 *                                                            *
 *   .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-.       *
 *    |                     ______                     |      *
 *    |                  .-"      "-.                  |      *
 *    |                 /            \                 |      *
 *    |     _          |              |          _     |      *
 *    |    ( \         |,  .-.  .-.  ,|         / )    |      *
 *    |     &gt; "=._     | )(__/  \__)( |     _.=" &lt;     |      *
 *    |    (_/"=._"=._ |/     /\     \| _.="_.="\_)    |      *
 *    |           "=._"(_     ^^     _)"_.="           |      *
 *    |               "=\__|IIIIII|__/="               |      *
 *    |              _.="| \IIIIII/ |"=._              |      *
 *    |    _     _.="_.="\          /"=._"=._     _    |      *
 *    |   ( \_.="_.="     `--------`     "=._"=._/ )   |      *
 *    |    &gt; _.="                            "=._ &lt;    |      *
 *    |   (_/                                    \_)   |      *
 *    |                                                |      *
 *    '-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-='      *
 *                                                            *
 *           LASCIATE OGNI SPERANZA, VOI CH'ENTRATE           *
 **************************************************************
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *                                         ,s555SB@@&amp;                          
 *                                      :9H####@@@@@Xi                        
 *                                     1@@@@@@@@@@@@@@8                       
 *                                   ,8@@@@@@@@@B@@@@@@8                      
 *                                  :B@@@@X3hi8Bs;B@@@@@Ah,                   
 *             ,8i                  r@@@B:     1S ,M@@@@@@#8;                 
 *            1AB35.i:               X@@8 .   SGhr ,A@@@@@@@@S                
 *            1@h31MX8                18Hhh3i .i3r ,A@@@@@@@@@5               
 *            ;@&amp;i,58r5                 rGSS:     :B@@@@@@@@@@A               
 *             1#i  . 9i                 hX.  .: .5@@@@@@@@@@@1               
 *              sG1,  ,G53s.              9#Xi;hS5 3B@@@@@@@B1                
 *               .h8h.,A@@@MXSs,           #@H1:    3ssSSX@1                  
 *               s ,@@@@@@@@@@@@Xhi,       r#@@X1s9M8    .GA981               
 *               ,. rS8H#@@@@@@@@@@#HG51;.  .h31i;9@r    .8@@@@BS;i;          
 *                .19AXXXAB@@@@@@@@@@@@@@#MHXG893hrX#XGGXM@@@@@@@@@@MS        
 *                s@@MM@@@hsX#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;,      
 *              :GB@#3G@@Brs ,1GM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B,     
 *            .hM@@@#@@#MX 51  r;iSGAM@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     
 *          :3B@@@@@@@@@@@&amp;9@h :Gs   .;sSXH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:    
 *      s&amp;HA#@@@@@@@@@@@@@@M89A;.8S.       ,r3@@@@@@@@@@@@@@@@@@@@@@@@@@@r    
 *   ,13B@@@@@@@@@@@@@@@@@@@5 5B3 ;.         ;@@@@@@@@@@@@@@@@@@@@@@@@@@@i    
 *  5#@@#&amp;@@@@@@@@@@@@@@@@@@9  .39:          ;@@@@@@@@@@@@@@@@@@@@@@@@@@@;    
 *  9@@@X:MM@@@@@@@@@@@@@@@#;    ;31.         H@@@@@@@@@@@@@@@@@@@@@@@@@@:    
 *   SH#@B9.rM@@@@@@@@@@@@@B       :.         3@@@@@@@@@@@@@@@@@@@@@@@@@@5    
 *     ,:.   9@@@@@@@@@@@#HB5                 .M@@@@@@@@@@@@@@@@@@@@@@@@@B    
 *           ,ssirhSM@&amp;1;i19911i,.             s@@@@@@@@@@@@@@@@@@@@@@@@@@S   
 *              ,,,rHAri1h1rh&amp;@#353Sh:          8@@@@@@@@@@@@@@@@@@@@@@@@@#:  
 *            .A3hH@#5S553&amp;@@#h   i:i9S          #@@@@@@@@@@@@@@@@@@@@@@@@@A.
 *
 *
 *    又看源码，看你妹妹呀！
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *_______________#########_______________________
 *______________############_____________________
 *______________#############____________________
 *_____________##__###########___________________
 *____________###__######_#####__________________
 *____________###_#######___####_________________
 *___________###__##########_####________________
 *__________####__###########_####_______________
 *________#####___###########__#####_____________
 *_______######___###_########___#####___________
 *_______#####___###___########___######_________
 *______######___###__###########___######_______
 *_____######___####_##############__######______
 *____#######__#####################_#######_____
 *____#######__##############################____
 *___#######__######_#################_#######___
 *___#######__######_######_#########___######___
 *___#######____##__######___######_____######___
 *___#######________######____#####_____#####____
 *____######________#####_____#####_____####_____
 *_____#####________####______#####_____###______
 *______#####______;###________###______#________
 *________##_______####________####______________
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *             ,%%%%%%%%,
 *           ,%%/\%%%%/\%%
 *          ,%%%\c "" J/%%%
 * %.       %%%%/ o  o \%%%
 * `%%.     %%%%    _  |%%%
 *  `%%     `%%%%(__Y__)%%'
 *  //       ;%%%%`\-/%%%'
 * ((       /  `%%%%%%%'
 *  \\    .'          |
 *   \\  /       \  | |
 *    \\/         ) | |
 *     \         /_ | |__
 *     (___________))))))) 攻城湿
 *
 *        _       _
 * __   _(_)_   _(_) __ _ _ __
 * \ \ / / \ \ / / |/ _` |'_ \
 *  \ V /| |\ V /| | (_| | | | |
 *   \_/ |_| \_/ |_|\__,_|_| |_|
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * </span><span style="color: #008000; text-decoration: underline;">https://gold.xitu.io/</span><span style="color: #008000;">
 *　　　　１１１　　　　　　　　　　　　　　　　　　　　　　　　　１　　　　　　　　　　　
 *　　　　１１１　１１１１１１１１１１１１　　　　　　　　　　　１１１　　　　　　　　　　
 *　　　　１１　　１１１１１１１１１１１１　　　　　　　　　　１１１１１　　　　　　　　　
 *　　　　１１　　１１１　　　　　　　１１　　　　　　　　　１１１１１１１　　　　　　　　
 *　　１１１１　１　１１１１１１１１１１１　　　　　　　　　１１１　１１１１　　　　　　　
 *　　１１１１１１　１１１１１１１１１１１　　　　　　　１１１１　　　１１１１１　　　　　
 *　　１１１１１１　１１　　　　　　　　　　　　　　　１１１１　　　　　１１１１１１　　　
 *　　　　１１　　　１１１１１１１１　１１　　　　１１１１１１１１１１１１１１１１１１　　
 *　　　　１１　　　１１１１１１１１１１１　　　１１１１１１１１１１１１１１１１１１１　　
 *　　　　１１１１１１１１１　１１　　１１　　　　１１　　　　　　１１　　　　　　　　　　
 *　　１１１１１１１１１１１１１１１１１１　　　　　　　　　　　　１１　　　　　　　　　　
 *　　１１１１　　１１１１１１１１１１１１　　　　　　１１１１１１１１１１１１１１　　　　
 *　　１１１１　　１１　　　　１１　　　　　　　　　　１１１１１１１１１１１１１１　　　　
 *　　　　１１　　１１　１１　１１　　１１１　　　　　　１１　　　１１　　１１１　　　　　
 *　　　　１１　　１１　１１　１１　　１１　　　　　　　１１１　　１１　　１１１　　　　　
 *　　　　１１　１１１　１１　１１　　１１　　　　　　　　１１１　１１　１１１　　　　　　
 *　　１１１１　１１１　１１１１１１１１１　　　　　１１　１１１　１１　１１１１１１１　　
 *　　　１１１１１１　　１１１１１１１１１１　　　　１１１１１１１１１１１１１１１１１　　
 *　　　１１　１１１　　　　　　　　　１１１　　　　１１１１１１１１１１１１１１１１１　　
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * </span><span style="color: #008000; text-decoration: underline;">https://www.zhihu.com/</span><span style="color: #008000;">
 *           _____                    _____                    _____                    _____          
 *          /\    \                  /\    \                  /\    \                  /\    \         
 *         /::\____\                /::\    \                /::\    \                /::\    \        
 *        /:::/    /                \:::\    \              /::::\    \              /::::\    \       
 *       /:::/    /                  \:::\    \            /::::::\    \            /::::::\    \      
 *      /:::/    /                    \:::\    \          /:::/\:::\    \          /:::/\:::\    \     
 *     /:::/____/                      \:::\    \        /:::/__\:::\    \        /:::/__\:::\    \    
 *    /::::\    \                      /::::\    \      /::::\   \:::\    \      /::::\   \:::\    \   
 *   /::::::\    \   _____    ____    /::::::\    \    /::::::\   \:::\    \    /::::::\   \:::\    \  
 *  /:::/\:::\    \ /\    \  /\   \  /:::/\:::\    \  /:::/\:::\   \:::\____\  /:::/\:::\   \:::\    \
 * /:::/  \:::\    /::\____\/::\   \/:::/  \:::\____\/:::/  \:::\   \:::|    |/:::/__\:::\   \:::\____\
 * \::/    \:::\  /:::/    /\:::\  /:::/    \::/    /\::/   |::::\  /:::|____|\:::\   \:::\   \::/    /
 *  \/____/ \:::\/:::/    /  \:::\/:::/    / \/____/  \/____|:::::\/:::/    /  \:::\   \:::\   \/____/
 *           \::::::/    /    \::::::/    /                 |:::::::::/    /    \:::\   \:::\    \     
 *            \::::/    /      \::::/____/                  |::|\::::/    /      \:::\   \:::\____\    
 *            /:::/    /        \:::\    \                  |::| \::/____/        \:::\   \::/    /    
 *           /:::/    /          \:::\    \                 |::|  ~|               \:::\   \/____/     
 *          /:::/    /            \:::\    \                |::|   |                \:::\    \         
 *         /:::/    /              \:::\____\               \::|   |                 \:::\____\        
 *         \::/    /                \::/    /                \:|   |                  \::/    /        
 *          \/____/                  \/____/                  \|___|                   \/____/         
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * </span><span style="color: #008000; text-decoration: underline;">http://www.freebuf.com/</span><span style="color: #008000;">
 *           _.._        ,------------.
 *        ,'      `.    ( We want you! )
 *       /  __) __` \    `-,----------'
 *      (  (`-`(-')  ) _.-'
 *      /)  \  = /  (
 *     /'    |--' .  \
 *    (  ,---|  `-.)__`
 *     )(  `-.,--'   _`-.
 *    '/,'          (  Uu",
 *     (_       ,    `/,-' )
 *     `.__,  : `-'/  /`--'
 *       |     `--'  |
 *       `   `-._   /
 *        \        (
 *        /\ .      \.  freebuf
 *       / |` \     ,-\
 *      /  \| .)   /   \
 *     ( ,'|\    ,'     :
 *     | \,`.`--"/      }
 *     `,'    \  |,'    /
 *    / "-._   `-/      |
 *    "-.   "-.,'|     ;
 *   /        _/["---'""]
 *  :        /  |"-     '
 *  '           |      /
 *              `      |
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * </span><span style="color: #008000; text-decoration: underline;">https://campus.alibaba.com/</span><span style="color: #008000;">
 *                                 `:::::::::::,
 *                             `::;:::::::;:::::::,  `
 *                          `::;;:::::::@@@@;:::::::`
 *                        ,:::::::::::::@    #@':::::`
 *                      :::::::::::::::'@@      @;::::
 *                    ::::::::::::'@@@@'```      .+:::`
 *                  ::::::::::;@@@#.              ,:::,
 *                .::::::::+@#@`                   ::::
 *               :::::::+@@'                       ::::
 *             `:::::'@@:                         `:::.
 *            ,::::@@:  `                         ::::
 *           ;::::::@                            .:::;
 *          :;:::::;@`        `                  :::;
 *         :::::::::@`        @                 ;::::
 *        :::::::::#`          @`              ,::::
 *       :::::::::@`         +@ @             .::::`
 *      .::::::'@@`       `@@'  @             ::::,
 *      :::::::++@@@@@@@@@@.                 ::::;
 *     ;:::::::+,   `..`                    :::::
 *    ,::::::::',                          :::::
 *    :::::::::+,                         :::::`
 *   :::::::::+@.                        ,::::.`                     `,
 *   ::::::;;@+                         .::;::                     `;
 *  :::::::@@                          `:::;:                   `::``
 *  ::::::#@                           ;::::                  .::`
 *  :::::;@                           :::::`               .;::`
 *  :::::@                           `:;:::            `::::;
 *  :::::#                           :::::.        `,;:::::
 *  ::::::                    `      ::::::,.,::::::::::.
 *  ,::::::`              .::        ::::::::::::::::;`
 *   ;::::::::,````.,:::::,          ::::::::::::::.
 *    :::::::::::::::::: `           `::::::::::`
 *     `::::::::::::,                  .:::.
 *         `..`
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * </span><span style="color: #008000; text-decoration: underline;">http://www.flvcd.com/</span><span style="color: #008000;">
 *  .--,       .--,
 * ( (  \.---./  ) )
 *  '.__/o   o\__.'
 *     {=  ^  =}
 *      &gt;  -  &lt;
 *     /       \
 *    //       \\
 *   //|   .   |\\
 *   "'\       /'"_.-~^`'-.
 *      \  _  /--'         `
 *    ___)( )(___
 *   (((__) (__)))    高山仰止,景行行止.虽不能至,心向往之。
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 頂頂頂頂頂頂頂頂頂　頂頂頂頂頂頂頂頂頂
 * 頂頂頂頂頂頂頂　　　　　頂頂　　　　　
 * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂
 * 　　　頂頂　　　頂頂頂頂頂頂頂頂頂頂頂
 * 　　　頂頂　　　頂頂　　　　　　　頂頂
 * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂
 * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂
 * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂
 * 　　　頂頂　　　頂頂　　頂頂頂　　頂頂
 * 　　　頂頂　　　　　　　頂頂頂　
 * 　　　頂頂　　　　　　頂頂　頂頂　頂頂
 * 　頂頂頂頂　　　頂頂頂頂頂　頂頂頂頂頂
 * 　頂頂頂頂　　　頂頂頂頂　　　頂頂頂頂
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * ░░░░░░░░░░░░░░░░░░░░░░░░▄░░
 * ░░░░░░░░░▐█░░░░░░░░░░░▄▀▒▌░
 * ░░░░░░░░▐▀▒█░░░░░░░░▄▀▒▒▒▐
 * ░░░░░░░▐▄▀▒▒▀▀▀▀▄▄▄▀▒▒▒▒▒▐
 * ░░░░░▄▄▀▒░▒▒▒▒▒▒▒▒▒█▒▒▄█▒▐
 * ░░░▄▀▒▒▒░░░▒▒▒░░░▒▒▒▀██▀▒▌
 * ░░▐▒▒▒▄▄▒▒▒▒░░░▒▒▒▒▒▒▒▀▄▒▒
 * ░░▌░░▌█▀▒▒▒▒▒▄▀█▄▒▒▒▒▒▒▒█▒▐
 * ░▐░░░▒▒▒▒▒▒▒▒▌██▀▒▒░░░▒▒▒▀▄
 * ░▌░▒▄██▄▒▒▒▒▒▒▒▒▒░░░░░░▒▒▒▒
 * ▀▒▀▐▄█▄█▌▄░▀▒▒░░░░░░░░░░▒▒▒
 * 单身狗就这样默默地看着你，一句话也不说。
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *                   /88888888888888888888888888\
 *                   |88888888888888888888888888/
 *                    |~~____~~~~~~~~~"""""""""|
 *                   / \_________/"""""""""""""\
 *                  /  |              \         \
 *                 /   |  88    88     \         \
 *                /    |  88    88      \         \
 *               /    /                  \        |
 *              /     |   ________        \       |
 *              \     |   \______/        /       |
 *   /"\         \     \____________     /        |
 *   | |__________\_        |  |        /        /
 * /""""\           \_------'  '-------/       --
 * \____/,___________\                 -------/
 * ------*            |                    \
 *   ||               |                     \
 *   ||               |                 ^    \
 *   ||               |                | \    \
 *   ||               |                |  \    \
 *   ||               |                |   \    \
 *   \|              /                /"""\/    /
 *      -------------                |    |    /
 *      |\--_                        \____/___/
 *      |   |\-_                       |
 *      |   |   \_                     |
 *      |   |     \                    |
 *      |   |      \_                  |
 *      |   |        ----___           |
 *      |   |               \----------|
 *      /   |                     |     ----------""\
 * /"\--"--_|                     |               |  \
 * |_______/                      \______________/    )
 *                                               \___/
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *                        d*##$.
 *  zP"""""$e.           $"    $o
 * 4$       '$          $"      $
 * '$        '$        J$       $F
 *  'b        $k       $&gt;       $
 *   $k        $r     J$       d$
 *   '$         $     $"       $~
 *    '$        "$   '$E       $
 *     $         $L   $"      $F ...
 *      $.       4B   $      $$$*"""*b
 *      '$        $.  $$     $$      $F
 *       "$       R$  $F     $"      $
 *        $k      ?$ u*     dF      .$
 *        ^$.      $$"     z$      u$$$$e
 *         #$b             $E.dW@e$"    ?$
 *          #$           .o$$# d$$$$c    ?F
 *           $      .d$$#" . zo$&gt;   #$r .uF
 *           $L .u$*"      $&amp;$$$k   .$$d$$F
 *            $$"            ""^"$$$P"$P9$
 *           JP              .o$$$$u:$P $$
 *           $          ..ue$"      ""  $"
 *          d$          $F              $
 *          $$     ....udE             4B
 *           #$    """"` $r            @$
 *            ^$L        '$            $F
 *              RN        4N           $
 *               *$b                  d$
 *                $$k                 $F
 *                 $$b                $F
 *                  $""               $F
 *                  '$                $
 *                   $L               $
 *                   '$               $
 *                    $               $
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *              ,----------------,              ,---------,
 *         ,-----------------------,          ,"        ,"|
 *       ,"                      ,"|        ,"        ,"  |
 *      +-----------------------+  |      ,"        ,"    |
 *      |  .-----------------.  |  |     +---------+      |
 *      |  |                 |  |  |     | -==----'|      |
 *      |  |  I LOVE DOS!    |  |  |     |         |      |
 *      |  |  Bad command or |  |  |/----|`---=    |      |
 *      |  |  C:\&gt;_          |  |  |   ,/|==== ooo |      ;
 *      |  |                 |  |  |  // |(((( [33]|    ,"
 *      |  `-----------------'  |," .;'| |((((     |  ,"
 *      +-----------------------+  ;;  | |         |,"
 *         /_)______________(_/  //'   | +---------+
 *    ___________________________/___  `,
 *   /  oooooooooooooooo  .o.  oooo /,   \,"-----------
 *  / ==ooooooooooooooo==.o.  ooo= //   ,`\--{)B     ,"
 * /_==__==========__==_ooo__ooo=_/'   /___________,"
 *
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*
 *                 .-~~~~~~~~~-._       _.-~~~~~~~~~-.
 *             __.'              ~.   .~              `.__
 *           .'//                  \./                  \\`.
 *         .'//                     |                     \\`.
 *       .'// .-~"""""""~~~~-._     |     _,-~~~~"""""""~-. \\`.
 *     .'//.-"                 `-.  |  .-'                 "-.\\`.
 *   .'//______.============-..   \ | /   ..-============.______\\`.
 * .'______________________________\|/______________________________`.
 *
 </span><span style="color: #008000;">*/</span>


<span style="color: #008000;">/*</span><span style="color: #008000;">*             无可奉告 一颗赛艇
 *  uJjYJYYLLv7r7vJJ5kqSFFFUUjJ7rrr7LLYLJLJ7
 *  JuJujuYLrvuEM@@@B@@@B@B@B@@@MG5Y7vLjYjJL
 *  JYjYJvr7XM@BB8GOOE8ZEEO8GqM8OBBBMu77LLJ7
 *  LJLY7ru@@@BOZ8O8NXFFuSkSu25X0OFZ8MZJ;vLv
 *  YvL7i5@BM8OGGqk22uvriiriii;r7LuSZXEMXrvr
 *  vv7iU@BMNkF1uY7v7rr;iiii:i:i:ii7JEPNBPir
 *  L7iL@BM8Xjuujvv77rr;ri;i;:iiiii:iLXFOBJ:
 *  7ri@B@MOFuUS2Y7L7777rii;:::::i:iirjPG@O:
 *  7:1B@BBOPjXXSJvrL7rr7iiii:i::::i;iv5MBB,
 *  r:0@BBM8SFPX2Y77rri::iirri:::::iii75O@G.
 *  7:SB@BBGqXPk0122UJL::i::r:::i:i;i:v2@Bk.
 *  ri:MB@BBEqEMGq2JLLL1u7.iX51u77LF27iSB@r,
 *  ri,v@B@MB8@qqNEqN1u:5B8BOFE0S7ii7qMB@F::
 *  ii,J80Eq1MZkqPPX5YkPE@B@iXPE52j7:vBjE7::
 *  ii:7MSqkS0PvLv7rrii0@L.Z1iLr::ir:rO,vi::
 *  ii::EZXPSkquLvii:iF@N:.,BUi7ri,::UY;r:::
 *  i::.2ONXqkPXS5FUUEOPP;..iSPXkjLYLLrr:::,
 *  :::,iMXNP0NPLriiLGZ@BB1P87;JuL7r:7ri:::,
 *  :::,.UGqNX0EZF2uUjUuULr:::,:7uuvv77::::.
 *  ::::..5OXqXNJ50NSY;i:.,,,:i77Yvr;v;,,::.
 *  :::,:.jOEPqPJiqBMMMO8NqP0SYLJriirv:.:,:.
 *  ,:,,,.,Zq0P0X7vPFqF1ujLv7r:irrr7j7.,,::.
 *  ,,,....0qk0080v75ujLLv7ri:i:rvj2J...,,,.
 *  ......8@UXqZEMNvJjr;ii::,:::7uuv...,.,,.
 *  .....B@BOvX88GMGk52vririiirJS1i.......,.
 *  .JEMB@B@BMvL0MOMMMO8PE8GPqSk2L:.........
 *  @B@@@B@M@B@L:7PGBOO8MOMOEP0Xri@B@Mk7,...
 *  B@B@BBMBB@B@0::rJP8MO0uvvu7..,B@B@B@B@Z7
 *  MMBM@BBB@B@B@Br:i,..:Lur:....7@OMMBM@B@@
 *  8OOMMMOMMMMBB@B:....,PZENNi..JBOZ8GMOOOO
 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
神注释
</span><span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 这个公司没有年终奖的,兄弟别指望了,也别来了,我准备辞职了
 * 另外这个项目有很多*Bug* 你坚持不了多久的,拜拜!
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 1只羊 == one sheep
 * 2只羊 == two sheeps
 * 3只羊 == three sheeps
 * 4只羊 == four sheeps
 * 5只羊 == five sheeps
 * 6只羊 == six sheeps
 * 7只羊 == seven sheeps
 * 8只羊 == eight sheeps
 * 9只羊 == nine sheeps
 * 10只羊 == ten sheeps
 * 11只羊 == eleven sheeps
 * 12只羊 == twelve sheeps
 * 13只羊 == thirteen sheeps
 * 14只羊 == fourteen sheeps 
 * 15只羊 == fifteen sheeps
 * 16只羊 == sixteen sheeps
 * 17只羊 == seventeen sheeps
 * 18只羊 == eighteen sheeps
 * 19只羊 == nineteen sheeps
 * 20只羊 == twenty sheeps
 * 21只羊 == twenty one sheeps
 * 22只羊 == twenty two sheeps
 * 23只羊 == twenty three sheeps
 * 24只羊 == twenty four sheeps
 * 25只羊 == twenty five sheeps
 * 26只羊 == twenty six sheeps
 * 27只羊 == twenty seven sheeps
 * 28只羊 == twenty eight sheeps
 * 29只羊 == twenty nine sheeps
 * 30只羊 == thirty sheeps
 * 现在瞌睡了吧，好了，不要再改下面的代码了，睡觉咯~~
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * You may think you know what the following code does.
 * But you dont. Trust me.
 * Fiddle with it, and youll spend many a sleepless
 * night cursing the moment you thought youd be clever
 * enough to "optimize" the code below.
 * Now close this file and go play with something else.
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 你可能会认为你读得懂以下的代码。但是你不会懂的，相信我吧。
 * 要是你尝试玩弄这段代码的话，你将会在无尽的通宵中不断地咒骂自己为什么会认为自己聪明到可以优化这段代码。
 * 现在请关闭这个文件去玩点别的吧。
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * somedev1 -  6/7/02 Adding temporary tracking of Login screen
 * somedev2 -  5/22/07 Temporary my ass
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 一些修改1 - 2002/6/7 增加临时的跟踪登录界面
 * 一些修改2 - 2007/5/22 我临时的犯傻
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 程序员1（于2010年6月7日）：在这个坑临时加入一些调料
 * 程序员2（于2011年5月22日）：临你个屁啊
 * 程序员3（于2012年7月23日）：楼上都是狗屎，鉴定完毕
 * 程序员4（于2013年8月2日）：fuck 楼上，三年了，这坑还在！！！
 * 程序员5（于2014年8月21日）：哈哈哈，这坑居然坑了这么多人，幸好我也不用填了，系统终止运行了，you're died
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * For the brave souls who get this far: You are the chosen ones,
 * the valiant knights of programming who toil away, without rest,
 * fixing our most awful code. To you, true saviors, kings of men,
 * I say this: never gonna give you up, never gonna let you down,
 * never gonna run around and desert you. Never gonna make you cry,
 * never gonna say goodbye. Never gonna tell a lie and hurt you.
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 致终于来到这里的勇敢的人：
 * 你是被上帝选中的人，是英勇的、不敌辛苦的、不眠不休的来修改我们这最棘手的代码的编程骑士。
 * 你，我们的救世主，人中之龙，我要对你说：永远不要放弃，永远不要对自己失望，永远不要逃走，辜负了自己，
 * 永远不要哭啼，永远不要说再见，永远不要说谎来伤害自己。
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * Dear maintainer:
 *
 * Once you are done trying to 'optimize' this routine,
 * and have realized what a terrible mistake that was,
 * please increment the following counter as a warning
 * to the next guy:
 *
 * total_hours_wasted_here = 42
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * 亲爱的维护者：
 *
 * 如果你尝试了对这段程序进行'优化'
 * 下面这个计数器的个数用来对后来人进行警告
 *
 * 浪费在这里的总时间 = 42h
 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
Exception up </span>= <span style="color: #0000ff;">new</span> Exception(<span style="color: #800000;">"</span><span style="color: #800000;">Something is really wrong.</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">throw</span> up;  <span style="color: #008000;">//</span><span style="color: #008000;">ha ha</span><span style="color: #008000;">
/*</span><span style="color: #008000;">*
 * When I wrote this, only God and I understood what I was doing
 * Now, God only knows
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
* 写这段代码的时候，只有上帝和我知道它是干嘛的
* 现在，只有上帝知道
</span><span style="color: #008000;">*/</span><span style="color: #000000;">
stop(); </span><span style="color: #008000;">//</span><span style="color: #008000;"> Hammertime!
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Autogenerated, do not edit. All changes will be undone.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> sometimes I believe compiler ignores all my comments
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 有时候我相信编译器忽略了我所有的注释</span><span style="color: #008000;">
/*</span><span style="color: #008000;">*
 * I dedicate all this code, all my work, to my wife, Darlene, who will
 * have to support me and our three children and the dog once it gets
 * released into the public.
 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">//</span><span style="color: #008000;"> drunk, fix later
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 有点晕了，以后再修改
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Magic. Do not touch.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 麻鸡。勿动。</span>
<span style="color: #0000ff;">#define</span> TRUE FALSE<span style="color: #008000;">//</span><span style="color: #008000;"> Happy debugging suckers</span>
<span style="color: #008000;">//</span><span style="color: #008000;"> I'm sorry.</span>
<span style="color: #0000ff;">return</span> <span style="color: #800080;">1</span>; # returns <span style="color: #800080;">1</span>
<span style="color: #008000;">/*</span><span style="color: #008000;">*
 * Always returns true.
 </span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">public</span><span style="color: #000000;"> boolean isAvailable() {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
}
</span>&lt;!-- Here be dragons --&gt;
&lt;!-- 前方高能 --&gt;
<span style="color: #0000ff;">double</span> penetration; <span style="color: #008000;">//</span><span style="color: #008000;"> ouch
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 自行了解，不方便解释</span>
<span style="color: #808080;">///////////////////////////////////////</span><span style="color: #008000;"> this is a well commented line</span>
<span style="color: #008000;">//</span><span style="color: #008000;"> To understand recursion, see the bottom of this file</span>
<span style="color: #000000;">At the bottom of the file:
</span><span style="color: #008000;">//</span><span style="color: #008000;"> To understand recursion, see the top of this file
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 想要明白递归须看文件末尾</span>
<span style="color: #000000;">到了文末
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 想要明白递归须看文件顶部</span><span style="color: #008000;">
/*</span><span style="color: #008000;"> Please work </span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> ago; <span style="color: #008000;">/*</span><span style="color: #008000;"> in a galaxy far far away </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">//</span><span style="color: #008000;"> 很久很久以前 在一个遥远的银河中（出自星球大战）
</span><span style="color: #008000;">//</span><span style="color: #008000;"> This code sucks, you know it and I know it.  
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Move on and call me an idiot later.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 你我都知道这代码很烂
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 先不要骂我2B了，请先继续往下看
</span><span style="color: #008000;">//</span><span style="color: #008000;"> I am not sure why this works but it fixes the problem.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 虽然我不知道为什么这样管用，但它却是修复了问题
</span><span style="color: #008000;">//</span><span style="color: #008000;"> If this comment is removed the program will blow up
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 如果删了此处注释程序就炸了
</span><span style="color: #008000;">//</span><span style="color: #008000;"> This function has been here since 1987. DON'T FXXKING TOUCH IT
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 这函数1987年就这在了，别他娘动它
</span><span style="color: #008000;">//</span><span style="color: #008000;"> if i ever see this again i'm going to start bringing guns to work
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 如果要是再让我看见这样的代码，也许我会带着一把枪来上班
</span><span style="color: #008000;">//</span><span style="color: #008000;"> no comments for you
</span><span style="color: #008000;">//</span><span style="color: #008000;"> it was hard to write
</span><span style="color: #008000;">//</span><span style="color: #008000;"> so it should be hard to read
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 难写的代码，肯定很难读。因此，我没有注释留给你。
</span><span style="color: #008000;">//</span><span style="color: #008000;"> I will give you two of my seventy-two virgins if you can fix this.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 要是你能修正这个问题的话，我会在我的七十二个处女中挑两个送你
</span><span style="color: #008000;">//</span><span style="color: #008000;"> I am not responsible of this code.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> They made me write it, against my will.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 下面的代码，我不负责。因为是他们逼我写的，违背了我的意愿。</span><span style="color: #008000;">
/*</span><span style="color: #008000;"> You are not expected to understand this </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">/*</span><span style="color: #008000;"> 你绝不会明白的 </span><span style="color: #008000;">*/</span>
<span style="color: #008000;">//</span><span style="color: #008000;"> I have to find a better job
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 看来我需要找份更好的工作了</span><span style="color: #008000;">
/*</span><span style="color: #008000;">*
 * 这个类是Object的子类
 </span><span style="color: #008000;">*/</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【安卓开发】项目的目录结构分析</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986000.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 14:04:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11986000.html</guid><description><![CDATA[<p>如图</p>
<p>先来看下我们的工程目录图：&nbsp;<img src="https://www.runoob.com/wp-content/uploads/2015/06/36216159.jpg" alt="工程目录结构" />&nbsp;</p>
<p>接下来我们需要知道的部分：</p>
<ul>
<ul>
<li><strong>src目录：</strong>包含App所需的全部程序代码文件，我们大多数时候都是在这里编写我们的Java代码的</li>
<li><strong>gen目录：</strong>只关注R.java文件，它是由ADT自动产生的，里面定义了一个R类，可以看作一个id(资源编号)的字典，包含了用户界面，图形，字符串等资源的id，而我们平时使用资源也是通过R文件来调用的，同时编译器也会看这个资源列表，没有用到的资源不会被编译进去，可以为App节省空间</li>
<li><strong>assets目录：</strong>存放资源，而且不会再R.java文件下生成资源id，需要使用AssetsManager类进行访问</li>
<li><strong>libs目录：</strong>存放一些jar包，比如v4,v7的兼容包，又或者是第三方的一些包</li>
<li><strong>res资源目录：</strong>存放资源的，drawable：存放图片资源；layout：存放界面的布局文件，都是XML文件； values：包含使用XML格式的参数的描述文件，如string.xml字符串，color.xml颜色，style.xml风格样式等</li>
<li><strong>AndroidManifest.xml配置文件：</strong>系统的控制文件，用于告诉Android系统App所包含的一些基本信息，比如组件，资源，以及需要的权限，以及兼容的最低版本的SDK等</li>
</ul>
</ul>]]></description></item><item><title>【安卓开发】Webview简单使用</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11985689.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 13:22:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11985689.html</guid><description><![CDATA[<h2>什么是WebView？</h2>
<blockquote>
<p>答：Android内置webkit内核的高性能浏览器,而WebView则是在这个基础上进行封装后的一个 控件,WebView直译网页视图,我们可以简单的看作一个可以嵌套到界面上的一个浏览器控件！</p>
</blockquote>
<p><span style="font-size: 14pt;"><strong>方法：</strong></span></p>
<p>1.先在activity_main.xml中添加一个webview网络视图，并把id改为&ldquo;webview&rdquo;</p>
<p>2.在MainActivity中加入以下代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">import</span><span style="color: #000000;"> android.os.Bundle;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> android.webkit.WebView;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> android.webkit.WebViewClient;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> android.widget.Toast;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> androidx.appcompat.app.AppCompatActivity;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> MainActivity <span style="color: #0000ff;">extends</span><span style="color: #000000;"> AppCompatActivity {

    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> WebView webView;
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">long</span> exitTime = 0<span style="color: #000000;">;

    @Override
    </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> onCreate(Bundle savedInstanceState) {
        </span><span style="color: #0000ff;">super</span><span style="color: #000000;">.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        webView </span>= <span style="color: #0000ff;">new</span> WebView(<span style="color: #0000ff;">this</span><span style="color: #000000;">);
        webView.setWebViewClient(</span><span style="color: #0000ff;">new</span><span style="color: #000000;"> WebViewClient() {
            </span><span style="color: #008000;">//</span><span style="color: #008000;">设置在webView点击打开的新网页在当前界面显示,而不跳转到新的浏览器中</span>
<span style="color: #000000;">            @Override
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> shouldOverrideUrlLoading(WebView view, String url) {
                view.loadUrl(url);
                </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            }
        });
        webView.getSettings().setJavaScriptEnabled(</span><span style="color: #0000ff;">true</span>);  <span style="color: #008000;">//</span><span style="color: #008000;">设置WebView属性,运行执行js脚本</span>
        webView.loadUrl("http://www.baidu.com/");          <span style="color: #008000;">//</span><span style="color: #008000;">调用loadUrl方法为WebView加入链接</span>
        setContentView(webView);                           <span style="color: #008000;">//</span><span style="color: #008000;">调用Activity提供的setContentView将webView显示出来</span>
<span style="color: #000000;">    }


    @Override
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> onBackPressed() {
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (webView.canGoBack()) {
            webView.goBack();
        } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            </span><span style="color: #0000ff;">if</span> ((System.currentTimeMillis() - exitTime) &gt; 2000<span style="color: #000000;">) {
                Toast.makeText(getApplicationContext(), </span>"再按一次退出程序"<span style="color: #000000;">,
                        Toast.LENGTH_SHORT).show();
                exitTime </span>=<span style="color: #000000;"> System.currentTimeMillis();
            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                </span><span style="color: #0000ff;">super</span><span style="color: #000000;">.onBackPressed();
            }

        }
    }</span></pre>
</div>
<p>3.不要忘了在AndroidManifest.xml中添加联网权限</p>
<div class="cnblogs_code">
<pre> &lt;uses-permission android:name="android.permission.INTERNET"/&gt;</pre>
</div>
<p>4.搞定，run it！</p>
<p><a href="https://sm.ms/image/YQsctCSdEZ4O3Ax" target="_blank"><img src="https://i.loli.net/2019/12/04/YQsctCSdEZ4O3Ax.jpg" alt="" /></a></p>]]></description></item><item><title>【C语言】输出半径1到10的圆的面积，当面积值超过100时，停止执行本程序</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11985128.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 11:57:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11985128.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">#define</span> PI 3.142
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> r;
    </span><span style="color: #0000ff;">float</span><span style="color: #000000;"> area;
    </span><span style="color: #0000ff;">for</span> (r = <span style="color: #800080;">1</span>; r &lt;= <span style="color: #800080;">10</span>; r++<span style="color: #000000;">)
    {
        area </span>= PI * r * r;<span style="color: #008000;">/*</span><span style="color: #008000;">计算圆的面积</span><span style="color: #008000;">*/</span>
        <span style="color: #0000ff;">if</span> (area &gt; <span style="color: #800080;">100</span>)<span style="color: #008000;">/*</span><span style="color: #008000;">判断圆的面积是否大于100</span><span style="color: #008000;">*/</span>
            <span style="color: #0000ff;">break</span>;<span style="color: #008000;">/*</span><span style="color: #008000;">提前结束循环</span><span style="color: #008000;">*/</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">r=%d,area=%.2f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, r, area);
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>程序员誓言</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11984163.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 09:17:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11984163.html</guid><description><![CDATA[<p>&nbsp;</p>
<p><img src="https://i.loli.net/2019/12/04/FKIchlqAYQenyVs.jpg" alt="" width="1080" height="1920" /></p>]]></description></item><item><title>【C语言】两个乒乓球队进行比赛，各出三人。甲队为a,b,c三人，乙队为x,y,z三人。已抽签决定比赛名单。有人向队员打听比赛的名单，a说他不和x比，c说他不和x,z比，编写程序找出三对赛手名单。</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11983823.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 08:39:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11983823.html</guid><description><![CDATA[<p>&nbsp;问题分析：假设a是A的对手，b是B的对手，c是C的对手，a，b，c分别是x,y,z之一，且a,b,c互不相等，同时还要满足条件a!=&nbsp;'x'&amp;&amp;c !=&nbsp;'x'&amp;&amp;c !=&nbsp;'z'。</p>
<p>代码：</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
</span><span style="color: #0000ff;">char</span><span style="color: #000000;"> a,b,c;
 </span><span style="color: #0000ff;">for</span>(a=<span style="color: #800000;">'</span><span style="color: #800000;">x</span><span style="color: #800000;">'</span>;a&lt;=<span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span>;a++<span style="color: #000000;">)
    </span><span style="color: #0000ff;">for</span>(b=<span style="color: #800000;">'</span><span style="color: #800000;">x</span><span style="color: #800000;">'</span>;b&lt;=<span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span>;b++<span style="color: #000000;">)
       {
          </span><span style="color: #0000ff;">if</span>(a!=<span style="color: #000000;">b)
             </span><span style="color: #0000ff;">for</span>(c=<span style="color: #800000;">'</span><span style="color: #800000;">x</span><span style="color: #800000;">'</span>;c&lt;=<span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span>;c++<span style="color: #000000;">)
                 </span><span style="color: #0000ff;">if</span>(a!=c &amp;&amp; b!=<span style="color: #000000;">c)
                   {
                     </span><span style="color: #0000ff;">if</span>(a!=<span style="color: #800000;">'</span><span style="color: #800000;">x</span><span style="color: #800000;">'</span> &amp;&amp; c!=<span style="color: #800000;">'</span><span style="color: #800000;">x</span><span style="color: #800000;">'</span> &amp;&amp; c!=<span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span><span style="color: #000000;">)
                       printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">a&rarr;%c \nb&rarr;%c\nc&rarr;%c</span><span style="color: #800000;">"</span><span style="color: #000000;">,a,b,c);
                   }
       }

}
    </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】猴子吃桃问题</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11983716.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 08:29:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11983716.html</guid><description><![CDATA[<p>题目：</p>
<p>猴子第一天吃了若干个桃子，当即吃了一半，还不解馋，又多吃了一个； 第二天，吃剩下的桃子的一半，还不过瘾，又多吃了一个；以后每天都吃前一天剩下的一半多一个，到第10天想再吃时，只剩下一个桃子了。问第一天共吃了多少个桃子？</p>
<p>思路：我们可以采用逆向思维，第十天剩一个，前一天则为 S9 = （S10 +1）*2，以此推算前一天。可以采用递归</p>
<p>Day10--------------------------1</p>
<p>Day9-------------------------- 4</p>
<p>Day8------------------------- 10</p>
<p>Day7-------------------------22</p>
<p>Day6-------------------------46</p>
<p>Day5-------------------------94</p>
<p>Day4-------------------------190</p>
<p>Day3-------------------------382</p>
<p>Day2-------------------------766</p>
<p>Day1-------------------------1534</p>
<p>代码：</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> day,x1,x2=<span style="color: #800080;">1</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">for</span>(day=<span style="color: #800080;">9</span>;day&gt;<span style="color: #800080;">0</span>;day--<span style="color: #000000;">)
{
x1</span>=(x2+<span style="color: #800080;">1</span>)*<span style="color: #800080;">2</span><span style="color: #000000;">;
x2</span>=<span style="color: #000000;">x1;
}
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">桃子总数：%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,x1);
}
 </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】求s(n)=a+aa+aaa+...+aa...a的值</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11983560.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Dec 2019 08:11:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11983560.html</guid><description><![CDATA[<p>原理：比如a=2，s（1）=2，s（2）=2+2*10+2，s（3）=2+2*10+2+（2*10+2）*10+2&nbsp; &nbsp;.....</p>
<p>规律：</p>
<p>item=item*10+a</p>
<p>sum=sum+item</p>
<p>代码：</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> i,n,a,sum=<span style="color: #800080;">0</span>,item=<span style="color: #800080;">0</span>;<span style="color: #008000;">//</span><span style="color: #008000;">定义变量</span>
 printf(<span style="color: #800000;">"</span><span style="color: #800000;">请分别输入n和a：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d %d</span><span style="color: #800000;">"</span>,&amp;n,&amp;a);<span style="color: #008000;">//</span><span style="color: #008000;">输入n和a</span>
    <span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">1</span>;i&lt;=n;i++)<span style="color: #008000;">/*</span><span style="color: #008000;">先计算第一项，再进行累加</span><span style="color: #008000;">*/</span><span style="color: #000000;">
    {
        item</span>=item*<span style="color: #800080;">10</span>+<span style="color: #000000;">a;
     sum</span>=sum+<span style="color: #000000;">item;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">和为：%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,sum);
}
 </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【科普】排序算法可视化演示（有声）</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11980618.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 03 Dec 2019 23:21:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11980618.html</guid><description><![CDATA[<p>fromB站</p>
<p>点击进入：<a href="https://b23.tv/av77975542" target="_blank">Go</a></p>
<p>&nbsp;</p>
<p><iframe src="https://b23.tv/av77975542" scrolling="yes" width="320" height="240"></iframe></p>]]></description></item><item><title>【C语言】【欢哥TV】冒泡法排序视频演示</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/04/11980617.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 03 Dec 2019 23:16:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/04/11980617.html</guid><description><![CDATA[<p>fromB站</p>
<p>&nbsp;点击进入：<a href="https://b23.tv/av77917974" target="_blank">Go</a></p>
<p><iframe src="https://b23.tv/av77917974" scrolling="yes" width="320" height="240"></iframe></p>]]></description></item><item><title>【C语言】输入一个字符串，统计其中的单词个数，将第一个单词的首字母改为大写，并输出改写后的字符串</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/03/11979897.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 03 Dec 2019 14:09:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/03/11979897.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span> a[<span style="color: #800080;">100</span><span style="color: #000000;">];
    </span><span style="color: #0000ff;">int</span> i, j=<span style="color: #800080;">1</span><span style="color: #000000;">;

    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一串字符：</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    gets_s(a);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; a[i] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; i++)<span style="color: #008000;">/*</span><span style="color: #008000;">找出单词个数</span><span style="color: #008000;">*/</span><span style="color: #000000;">
    {
        </span><span style="color: #0000ff;">if</span> (a[i] == <span style="color: #800000;">'</span> <span style="color: #800000;">'</span><span style="color: #000000;">)
            j </span>+= <span style="color: #800080;">1</span><span style="color: #000000;">;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">单词个数：%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, j);
    </span><span style="color: #0000ff;">if</span> (a[<span style="color: #800080;">0</span>] &gt;= <span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span> &amp;&amp; a[<span style="color: #800080;">0</span>] &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span>)<span style="color: #008000;">/*</span><span style="color: #008000;">判断首字母大小写并转换</span><span style="color: #008000;">*/</span><span style="color: #000000;">
        a[</span><span style="color: #800080;">0</span>] -= <span style="color: #800080;">32</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; a[i] != <span style="color: #800080;">0</span>; i++<span style="color: #000000;">)
    {
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c</span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i]);
    }
  
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>HGsoft-downloader</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/03/11974551.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 23:42:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/03/11974551.html</guid><description><![CDATA[<p>【NEW】HGsoft-downloader上线了!</p>
<p>给你提供一个简洁无广告的电脑软件下载平台，换个角度下载电脑软件。</p>
<p>网站地址：<a href="https://huangenet.gitee.io/hgsoft-downloader" target="_blank">Go</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】分别用下标法，地址法和指针法输出数组中的全部元素</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/02/11973259.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 12:57:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/02/11973259.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> arr[<span style="color: #800080;">5</span>] = { <span style="color: #800080;">11</span>,<span style="color: #800080;">12</span>,<span style="color: #800080;">13</span>,<span style="color: #800080;">14</span>,<span style="color: #800080;">15</span><span style="color: #000000;"> };
    </span><span style="color: #0000ff;">int</span> i, *<span style="color: #000000;"> p;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">下标法：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">arr[%d]=%d </span><span style="color: #800000;">"</span><span style="color: #000000;">, i,arr[i]);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">\n 地址法：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">arr[%d]=%d </span><span style="color: #800000;">"</span>, i, *(arr+<span style="color: #000000;">i));
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">\n 指针法：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (p=arr,i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">arr[%d]=%d </span><span style="color: #800000;">"</span>, i, *(p+<span style="color: #000000;">i));
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp; &nbsp;</p>]]></description></item><item><title>【C语言】用指针描述数组，实现选择法排序</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/02/11973012.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 12:14:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/02/11973012.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span><span style="color: #000000;">], t;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, max;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入10个数:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt;= <span style="color: #800080;">9</span>; i=i+<span style="color: #800080;">1</span><span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, a+<span style="color: #000000;">i);
    </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">9</span>; j &gt;=<span style="color: #800080;">0</span>; j = j-<span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        max </span>=<span style="color: #000000;"> j;
        </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt;=j; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">) 
        {
            </span><span style="color: #0000ff;">if</span> (a[max] &lt;= *(a+<span style="color: #000000;">i))
                max </span>=<span style="color: #000000;"> i;
            </span><span style="color: #0000ff;">if</span> (max !=<span style="color: #000000;"> j)
            {
                t </span>= a[max]; a[max] = *(a+j); *(a+j) =<span style="color: #000000;"> t;
            }
        }
    }
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt;= <span style="color: #800080;">9</span>; i=i+<span style="color: #800080;">1</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%-3d</span><span style="color: #800000;">"</span>,*(a+<span style="color: #000000;">i));
} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】用指针描述数组，实现起泡法排序</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/02/11972607.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 10:49:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/02/11972607.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span><span style="color: #000000;">], t;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j;<br />printf("请输入10个数:\n");
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, a +<span style="color: #000000;"> i);
        </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">1</span>; j &lt; <span style="color: #800080;">10</span>; j++<span style="color: #000000;">)
            </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span> - j; i++<span style="color: #000000;">)
                </span><span style="color: #0000ff;">if</span> (*(a + i) &gt;= *(a + i + <span style="color: #800080;">1</span><span style="color: #000000;">))
            {
            t </span>= *(a +<span style="color: #000000;"> i);
            </span>*(a + i) = *(a + i + <span style="color: #800080;">1</span><span style="color: #000000;">);
            </span>*(a + i + <span style="color: #800080;">1</span>) =<span style="color: #000000;"> t;
            }
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d\n</span><span style="color: #800000;">"</span>, *(a +<span style="color: #000000;"> i));
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】指针数组</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/02/11972025.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 09:29:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/02/11972025.html</guid><description><![CDATA[<p>1.数组元素的描述</p>
<div class="cnblogs_code">
<pre><span style="font-size: 16px;"><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span><span style="color: #000000;">];
</span>&amp;a[<span style="color: #800080;">0</span><span style="color: #000000;">]
</span>&amp;a[<span style="color: #800080;">0</span>]+<span style="color: #800080;">1</span>
&amp;a[<span style="color: #800080;">0</span>]+<span style="color: #800080;">2</span><span style="color: #000000;">
......<br />i&isin;[0,9]<br />*(&amp;a[0]+i)<br />⇅<br />*(a+i)</span></span></pre>
</div>
<p><strong>描述方式：</strong></p>
<p><strong>1.下标法：</strong></p>
<p><strong>数组[下标]</strong></p>
<p>比如：a[10]</p>
<p><strong>2.指针法（数组名就是首地址）</strong></p>
<p><strong>*（数组名+下标）</strong></p>
<p>比如：</p>
<pre><span style="font-size: 16px;">*(a+i)<br /><strong>例子：<br />1.不用指针</strong></span></pre>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">void</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span>] = { <span style="color: #800080;">2</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">1</span><span style="color: #000000;"> };
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%2d</span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i]);

}</span></pre>
</div>
<pre></pre>
<p><strong>2.使用指针</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">void</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span>] = { <span style="color: #800080;">2</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">1</span><span style="color: #000000;"> };
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%2d</span><span style="color: #800000;">"</span>, *(a+<span style="color: #000000;">i));

}</span></pre>
</div>
<p>&nbsp;</p>
<pre><span style="font-size: 16px;"><strong>&nbsp;</strong></span></pre>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】用函数实现两个数排序（指针作函数参数）</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/02/11971857.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 09:09:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/02/11971857.html</guid><description><![CDATA[<p>原理就不讲了，这里用来理解指针的使用方法</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">void</span> fun(<span style="color: #0000ff;">int</span>* a,<span style="color: #0000ff;">int</span>*<span style="color: #000000;"> b)
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> t;
</span><span style="color: #0000ff;">if</span>(*a&gt;=*<span style="color: #000000;">b)
    {
        t </span>= *<span style="color: #000000;">a;
        </span>*a = *<span style="color: #000000;">b;
        </span>*b=<span style="color: #000000;">t;
    }
}
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m, n;
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d</span><span style="color: #800000;">"</span>, &amp;m, &amp;<span style="color: #000000;">n);
    fun(</span>&amp;m, &amp;<span style="color: #000000;">n);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,m,n);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】（指针） 将两个数排序</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/02/11971689.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 08:51:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/02/11971689.html</guid><description><![CDATA[<p>原理就不讲了，这里用来理解指针的使用方法</p>
<p><strong>代码1：</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a, b;<span style="color: #008000;">/*</span><span style="color: #008000;"> 实际变量的声明 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span>* p, * q;<span style="color: #008000;">/*</span><span style="color: #008000;"> 指针变量的声明 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
    p </span>= &amp;a;<span style="color: #008000;">/*</span><span style="color: #008000;"> 在指针变量中存储实际变量的地址 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
    q </span>= &amp;<span style="color: #000000;">b;
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d</span><span style="color: #800000;">"</span><span style="color: #000000;">, p, q);
    </span><span style="color: #0000ff;">if</span>(*p&gt;=*<span style="color: #000000;">q)
    {
        </span><span style="color: #0000ff;">int</span> t = *<span style="color: #000000;">p;
        </span>*p = *<span style="color: #000000;">q;
        </span>*q=<span style="color: #000000;">t;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d %d\n</span><span style="color: #800000;">"</span>,*p,*<span style="color: #000000;">q);
}</span></pre>
</div>
<p><strong>&nbsp;代码2：</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a, b;<span style="color: #008000;">/*</span><span style="color: #008000;"> 实际变量的声明 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span>* p, * q;<span style="color: #008000;">/*</span><span style="color: #008000;"> 指针变量的声明 </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span>* t = <span style="color: #0000ff;">new</span> <span style="color: #0000ff;">int</span>;<span style="color: #008000;">/*</span><span style="color: #008000;">new int 随机产生一个整型空间，必须加这个否则会出错</span><span style="color: #008000;">*/</span><span style="color: #000000;">
    p </span>= &amp;a;<span style="color: #008000;">/*</span><span style="color: #008000;"> 在指针变量中存储实际变量的地址 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
    q </span>= &amp;<span style="color: #000000;">b;
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d</span><span style="color: #800000;">"</span><span style="color: #000000;">, p, q);
    </span><span style="color: #0000ff;">if</span>(*p&gt;=*<span style="color: #000000;">q)
    {
        </span>*t = *<span style="color: #000000;">p;
        </span>*p = *<span style="color: #000000;">q;
        </span>*q=*<span style="color: #000000;">t;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d %d\n</span><span style="color: #800000;">"</span>,*p,*<span style="color: #000000;">q);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】 指针</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/02/11971634.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Dec 2019 08:46:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/02/11971634.html</guid><description><![CDATA[<p>学习 C 语言的指针既简单又有趣。通过指针，可以简化一些 C 编程任务的执行，还有一些任务，如动态内存分配，没有指针是无法执行的。所以，想要成为一名优秀的 C 程序员，学习指针是很有必要的。</p>
<p>正如您所知道的，每一个变量都有一个内存位置，每一个内存位置都定义了可使用连字号（&amp;）运算符访问的地址，它表示了在内存中的一个地址。请看下面的实例，它将输出定义的变量地址：</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main ()
{
   </span><span style="color: #0000ff;">int</span><span style="color: #000000;">  var1;
   </span><span style="color: #0000ff;">char</span> var2[<span style="color: #800080;">10</span><span style="color: #000000;">];
 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">var1 变量的地址： %p\n</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">var1  );
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">var2 变量的地址： %p\n</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">var2  );
 
   </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<div class="cnblogs_code">
<pre>var1 变量的地址： <span style="color: #800080;">0x7fff5cc109d4</span><span style="color: #000000;">
var2 变量的地址： </span><span style="color: #800080;">0x7fff5cc109de</span></pre>
</div>
<h2 class="tutheader">什么是指针？</h2>
<p><strong>指针</strong>是一个变量，其值为另一个变量的地址，即，内存位置的直接地址。就像其他变量或常量一样，您必须在使用指针存储其他变量地址之前，对其进行声明。指针变量声明的一般形式为：</p>
<div class="cnblogs_code">
<pre><span style="font-size: 14pt;"><strong>类型名  *变量名<br />比如：<br /><span class="hl-types">int<span class="hl-code"> *<span class="hl-identifier">ip<span class="hl-code">; <span class="hl-mlcomment">/*<span class="hl-mlcomment"> 一个整型的指针 <span class="hl-mlcomment">*/<br /><span class="hl-code"><span class="hl-types">double<span class="hl-code"> *<span class="hl-identifier">dp<span class="hl-code">; <span class="hl-mlcomment">/*<span class="hl-mlcomment"> 一个 double 型的指针 <span class="hl-mlcomment">*/<br /><span class="hl-code"><span class="hl-types">float<span class="hl-code"> *<span class="hl-identifier">fp<span class="hl-code">; <span class="hl-mlcomment">/*<span class="hl-mlcomment"> 一个浮点型的指针 <span class="hl-mlcomment">*/<span class="hl-code"> <br /><span class="hl-types">char<span class="hl-code"> *<span class="hl-identifier">ch<span class="hl-code">; <span class="hl-mlcomment">/*<span class="hl-mlcomment"> 一个字符型的指针 <span class="hl-mlcomment">*/</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br /></strong></span></pre>
</div>
<p>所有实际数据类型，不管是整型、浮点型、字符型，还是其他的数据类型，对应指针的值的类型都是一样的，都是一个代表内存地址的长的十六进制数。</p>
<p>不同数据类型的指针之间唯一的不同是，<strong>指针所指向的变量或常量的数据类型不同</strong>。</p>
<h2 class="tutheader">如何使用指针？</h2>
<p>使用指针时会频繁进行以下几个操作：定义一个指针变量、把变量地址赋值给指针、访问指针变量中可用地址的值。这些是通过使用一元运算符&nbsp;<strong>*</strong>&nbsp;来返回位于操作数所指定地址的变量的值。下面的实例涉及到了这些操作：</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main ()
{
   </span><span style="color: #0000ff;">int</span>  <span style="color: #0000ff;">var</span> = <span style="color: #800080;">20</span>;   <span style="color: #008000;">/*</span><span style="color: #008000;"> 实际变量的声明 </span><span style="color: #008000;">*/</span>
   <span style="color: #0000ff;">int</span>  *ip;        <span style="color: #008000;">/*</span><span style="color: #008000;"> 指针变量的声明 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
 
   ip </span>= &amp;<span style="color: #0000ff;">var</span>;  <span style="color: #008000;">/*</span><span style="color: #008000;"> 在指针变量中存储 var 的地址 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Address of var variable: %p\n</span><span style="color: #800000;">"</span>, &amp;<span style="color: #0000ff;">var</span><span style="color: #000000;">  );
 
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 在指针变量中存储的地址 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Address stored in ip variable: %p\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, ip );
 
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 使用指针访问值 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Value of *ip variable: %d\n</span><span style="color: #800000;">"</span>, *<span style="color: #000000;">ip );
 
   </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<div class="cnblogs_code">
<pre>Address of <span style="color: #0000ff;">var</span><span style="color: #000000;"> variable: bffd8b3c
Address stored </span><span style="color: #0000ff;">in</span><span style="color: #000000;"> ip variable: bffd8b3c
Value of </span>*ip variable: <span style="color: #800080;">20</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】 删除一个字符串中重复的字符</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/01/11966034.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sun, 01 Dec 2019 06:47:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/01/11966034.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #008000;">/*</span><span style="color: #008000;">使用n=strlen(s)时加这个#include&lt;string.h&gt;</span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">int</span> main(<span style="color: #0000ff;">void</span><span style="color: #000000;">)
{
    </span><span style="color: #0000ff;">char</span> s[<span style="color: #800080;">100</span>];<span style="color: #008000;">/*</span><span style="color: #008000;">定义变量</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, n, k;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一串有重复字符的字符串:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    gets_s(s);</span><span style="color: #008000;">/*</span><span style="color: #008000;">输入字符串</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">for</span> (n = <span style="color: #800080;">0</span>; s[n] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; n++)<br />;<br /><br /><span style="color: #008000;">/*</span><span style="color: #008000;">用于得到字符串长度，也可以使用n=strlen(s);</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; n ; i++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">for</span> (j = k = i + <span style="color: #800080;">1</span>; j &lt; n ; j++<span style="color: #000000;">)
            </span><span style="color: #0000ff;">if</span> (s[j] !=<span style="color: #000000;"> s[i])
                s[k</span>++] =<span style="color: #000000;"> s[j];
        s[k] </span>= <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">去掉重复字符后结果为：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    puts(s);
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">也可以这样写，printf("去掉重复字符后结果为：%s\n", s);</span><span style="color: #008000;">*/</span><span style="color: #000000;">
}  </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】将两个字符串连接起来</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/01/11965886.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sun, 01 Dec 2019 06:10:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/01/11965886.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span> s1[<span style="color: #800080;">100</span>] = <span style="color: #800000;">"</span><span style="color: #800000;">I </span><span style="color: #800000;">"</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">char</span> s2[<span style="color: #800080;">100</span>] = <span style="color: #800000;">"</span><span style="color: #800000;">am a student</span><span style="color: #800000;">"</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, n;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; s1[i] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; i++<span style="color: #000000;">)
        ;
    n </span>=<span style="color: #000000;"> i;
    </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">0</span>; s2[j] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; j++<span style="color: #000000;">)
    {
        s1[n] </span>=<span style="color: #000000;"> s2[j];
        n </span>= n + <span style="color: #800080;">1</span><span style="color: #000000;">;
    }
    s1[n] </span>= <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%s</span><span style="color: #800000;">"</span><span style="color: #000000;">, s1);


} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】在有序数组中插入一个数，保证它依然有序</title><link>http://www.cnblogs.com/HGNET/archive/2019/12/01/11965847.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sun, 01 Dec 2019 06:02:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/12/01/11965847.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">100</span>] = { <span style="color: #800080;">1</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">10</span>,<span style="color: #800080;">15</span>,<span style="color: #800080;">20</span><span style="color: #000000;"> };
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> key, i, j;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一个数\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">key);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">7</span>; i++<span style="color: #000000;">)
        </span><span style="color: #0000ff;">if</span> (a[i] &gt;<span style="color: #000000;"> key)
            </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    j </span>=<span style="color: #000000;"> i;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">6</span>; i &gt;= j; i--<span style="color: #000000;">)
        a[i </span>+ <span style="color: #800080;">1</span>] =<span style="color: #000000;"> a[i];
    a[j] </span>=<span style="color: #000000;"> key;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">8</span>; i++<span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i]);

} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C语言运算符详解</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/29/11957649.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 29 Nov 2019 06:38:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/29/11957649.html</guid><description><![CDATA[<div class="tutintro">
<p>运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。C 语言内置了丰富的运算符，并提供了以下类型的运算符：</p>
<ul class="list">
<li>算术运算符</li>
<li>关系运算符</li>
<li>逻辑运算符</li>
<li>位运算符</li>
<li>赋值运算符</li>
<li>杂项运算符</li>
</ul>
<p>本章将逐一介绍算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符和其他运算符。</p>
</div>
<h2 class="tutheader">算术运算符</h2>
<p>下表显示了 C 语言支持的所有算术运算符。假设变量&nbsp;<strong>A</strong>&nbsp;的值为 10，变量&nbsp;<strong>B</strong>&nbsp;的值为 20，则：</p>
<table class="reference notranslate">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>+</td>
<td>把两个操作数相加</td>
<td>A + B 将得到 30</td>
</tr>
<tr>
<td>-</td>
<td>从第一个操作数中减去第二个操作数</td>
<td>A - B 将得到 -10</td>
</tr>
<tr>
<td>*</td>
<td>把两个操作数相乘</td>
<td>A * B 将得到 200</td>
</tr>
<tr>
<td>/</td>
<td>分子除以分母</td>
<td>B / A 将得到 2</td>
</tr>
<tr>
<td>%</td>
<td>取模运算符，整除后的余数</td>
<td>B % A 将得到 0</td>
</tr>
<tr>
<td>++</td>
<td>自增运算符，整数值增加 1</td>
<td>A++ 将得到 11</td>
</tr>
<tr>
<td>--</td>
<td>自减运算符，整数值减少 1</td>
<td>A-- 将得到 9</td>
</tr>
</tbody>
</table>
<h3>实例</h3>
<p>请看下面的实例，了解 C 语言中所有可用的算术运算符：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
   </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">21</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span> b = <span style="color: #800080;">10</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> c ;
 
   c </span>= a +<span style="color: #000000;"> b;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   c </span>= a -<span style="color: #000000;"> b;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   c </span>= a *<span style="color: #000000;"> b;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   c </span>= a /<span style="color: #000000;"> b;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 4 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   c </span>= a %<span style="color: #000000;"> b;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 5 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   c </span>= a++;  <span style="color: #008000;">//</span><span style="color: #008000;"> 赋值后再加 1 ，c 为 21，a 为 22</span>
   printf(<span style="color: #800000;">"</span><span style="color: #800000;">Line 6 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   c </span>= a--;  <span style="color: #008000;">//</span><span style="color: #008000;"> 赋值后再减 1 ，c 为 22 ，a 为 21</span>
   printf(<span style="color: #800000;">"</span><span style="color: #800000;">Line 7 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<pre class="prettyprint prettyprinted"><span class="typ">Line<span class="pln"> <span class="lit">1<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">31<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">2<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">11<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">3<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">210<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">4<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">2<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">5<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">1<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">6<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">21<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">7<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">22</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<p>以下实例演示了 a++ 与 ++a 的区别：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
   </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> c;
   </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">10</span><span style="color: #000000;">;
   c </span>= a++<span style="color: #000000;">; 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">先赋值后运算：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - a 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a );
   a </span>= <span style="color: #800080;">10</span><span style="color: #000000;">;
   c </span>= a--<span style="color: #000000;">; 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 4 - a 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a );
 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">先运算后赋值：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
   a </span>= <span style="color: #800080;">10</span><span style="color: #000000;">;
   c </span>= ++<span style="color: #000000;">a; 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 5 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 6 - a 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a );
   a </span>= <span style="color: #800080;">10</span><span style="color: #000000;">;
   c </span>= --<span style="color: #000000;">a; 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 7 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 8 - a 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a );
 
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>以上程序执行输出结果为：</p>
<pre class="prettyprint prettyprinted"><span class="pun">先赋值后运算：<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">1<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">10<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">2<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">的值是<span class="pln"> <span class="lit">11<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">3<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">10<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">4<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">的值是<span class="pln"> <span class="lit">9<span class="pln">
<span class="pun">先运算后赋值：<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">5<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">11<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">6<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">的值是<span class="pln"> <span class="lit">11<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">7<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">9<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">8<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">的值是<span class="pln"> <span class="lit">9</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<h2 class="tutheader">关系运算符</h2>
<p>下表显示了 C 语言支持的所有关系运算符。假设变量&nbsp;<strong>A</strong>&nbsp;的值为 10，变量&nbsp;<strong>B</strong>&nbsp;的值为 20，则：</p>
<table class="reference notranslate">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>==</td>
<td>检查两个操作数的值是否相等，如果相等则条件为真。</td>
<td>(A == B) 为假。</td>
</tr>
<tr>
<td>!=</td>
<td>检查两个操作数的值是否相等，如果不相等则条件为真。</td>
<td>(A != B) 为真。</td>
</tr>
<tr>
<td>&gt;</td>
<td>检查左操作数的值是否大于右操作数的值，如果是则条件为真。</td>
<td>(A &gt; B) 为假。</td>
</tr>
<tr>
<td>&lt;</td>
<td>检查左操作数的值是否小于右操作数的值，如果是则条件为真。</td>
<td>(A &lt; B) 为真。</td>
</tr>
<tr>
<td>&gt;=</td>
<td>检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。</td>
<td>(A &gt;= B) 为假。</td>
</tr>
<tr>
<td>&lt;=</td>
<td>检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。</td>
<td>(A &lt;= B) 为真。</td>
</tr>
</tbody>
</table>
<h3>实例</h3>
<p>请看下面的实例，了解 C 语言中所有可用的关系运算符：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
   </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">21</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span> b = <span style="color: #800080;">10</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> c ;
 
   </span><span style="color: #0000ff;">if</span>( a ==<span style="color: #000000;"> b )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - a 等于 b\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - a 不等于 b\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">if</span> ( a &lt;<span style="color: #000000;"> b )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - a 小于 b\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - a 不小于 b\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">if</span> ( a &gt;<span style="color: #000000;"> b )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - a 大于 b\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - a 不大于 b\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 改变 a 和 b 的值 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   a </span>= <span style="color: #800080;">5</span><span style="color: #000000;">;
   b </span>= <span style="color: #800080;">20</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">if</span> ( a &lt;=<span style="color: #000000;"> b )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 4 - a 小于或等于 b\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">if</span> ( b &gt;=<span style="color: #000000;"> a )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 5 - b 大于或等于 a\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<pre class="prettyprint prettyprinted"><span class="typ">Line<span class="pln"> <span class="lit">1<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">不等于<span class="pln"> b
<span class="typ">Line<span class="pln"> <span class="lit">2<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">不小于<span class="pln"> b
<span class="typ">Line<span class="pln"> <span class="lit">3<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">大于<span class="pln"> b
<span class="typ">Line<span class="pln"> <span class="lit">4<span class="pln"> <span class="pun">-<span class="pln"> a <span class="pun">小于或等于<span class="pln"> b
<span class="typ">Line<span class="pln"> <span class="lit">5<span class="pln"> <span class="pun">-<span class="pln"> b <span class="pun">大于或等于<span class="pln"> a</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<h2 class="tutheader">逻辑运算符</h2>
<p>下表显示了 C 语言支持的所有关系逻辑运算符。假设变量&nbsp;<strong>A</strong>&nbsp;的值为 1，变量&nbsp;<strong>B</strong>&nbsp;的值为 0，则：</p>
<table class="reference notranslate">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>&amp;&amp;</td>
<td>称为逻辑与运算符。如果两个操作数都非零，则条件为真。</td>
<td>(A &amp;&amp; B) 为假。</td>
</tr>
<tr>
<td>||</td>
<td>称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。</td>
<td>(A || B) 为真。</td>
</tr>
<tr>
<td>!</td>
<td>称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td>
<td>!(A &amp;&amp; B) 为真。</td>
</tr>
</tbody>
</table>
<h3>实例</h3>
<p>请看下面的实例，了解 C 语言中所有可用的逻辑运算符：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
   </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">5</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span> b = <span style="color: #800080;">20</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> c ;
 
   </span><span style="color: #0000ff;">if</span> ( a &amp;&amp;<span style="color: #000000;"> b )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - 条件为真\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">if</span> ( a ||<span style="color: #000000;"> b )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - 条件为真\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 改变 a 和 b 的值 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   a </span>= <span style="color: #800080;">0</span><span style="color: #000000;">;
   b </span>= <span style="color: #800080;">10</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">if</span> ( a &amp;&amp;<span style="color: #000000;"> b )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - 条件为真\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - 条件为假\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
   </span><span style="color: #0000ff;">if</span> ( !(a &amp;&amp;<span style="color: #000000;"> b) )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 4 - 条件为真\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> );
   }
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<pre class="prettyprint prettyprinted"><span class="typ">Line<span class="pln"> <span class="lit">1<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">条件为真<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">2<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">条件为真<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">3<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">条件为假<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">4<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">条件为真</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<h2 class="tutheader">位运算符</h2>
<p>位运算符作用于位，并逐位执行操作。&amp;、 | 和 ^ 的真值表如下所示：</p>
<table class="reference notranslate">
<tbody>
<tr><th>p</th><th>q</th><th>p &amp; q</th><th>p | q</th><th>p ^ q</th></tr>
<tr>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>假设如果 A = 60，且 B = 13，现在以二进制格式表示，它们如下所示：</p>
<p>A = 0011 1100</p>
<p>B = 0000 1101</p>
<p>-----------------</p>
<p>A&amp;B = 0000 1100</p>
<p>A|B = 0011 1101</p>
<p>A^B = 0011 0001</p>
<p>~A&nbsp; = 1100 0011</p>
<p>下表显示了 C 语言支持的位运算符。假设变量&nbsp;<strong>A</strong>&nbsp;的值为 60，变量&nbsp;<strong>B</strong>&nbsp;的值为 13，则：</p>
<table class="reference notranslate">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>&amp;</td>
<td>
<p>按位与操作，按二进制位进行"与"运算。运算规则：</p>
<pre class="prettyprint prettyprinted"><span class="lit">0<span class="pun">&amp;<span class="lit">0<span class="pun">=<span class="lit">0<span class="pun">;<span class="pln">   
<span class="lit">0<span class="pun">&amp;<span class="lit">1<span class="pun">=<span class="lit">0<span class="pun">;<span class="pln">    
<span class="lit">1<span class="pun">&amp;<span class="lit">0<span class="pun">=<span class="lit">0<span class="pun">;<span class="pln">     
<span class="lit">1<span class="pun">&amp;<span class="lit">1<span class="pun">=<span class="lit">1<span class="pun">;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</td>
<td>(A &amp; B) 将得到 12，即为 0000 1100</td>
</tr>
<tr>
<td>|</td>
<td>
<p>按位或运算符，按二进制位进行"或"运算。运算规则：</p>
<pre class="prettyprint prettyprinted"><span class="lit">0<span class="pun">|<span class="lit">0<span class="pun">=<span class="lit">0<span class="pun">;<span class="pln">   
<span class="lit">0<span class="pun">|<span class="lit">1<span class="pun">=<span class="lit">1<span class="pun">;<span class="pln">   
<span class="lit">1<span class="pun">|<span class="lit">0<span class="pun">=<span class="lit">1<span class="pun">;<span class="pln">    
<span class="lit">1<span class="pun">|<span class="lit">1<span class="pun">=<span class="lit">1<span class="pun">;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</td>
<td>(A | B) 将得到 61，即为 0011 1101</td>
</tr>
<tr>
<td>^</td>
<td>
<p>异或运算符，按二进制位进行"异或"运算。运算规则：</p>
<pre class="prettyprint prettyprinted"><span class="lit">0<span class="pun">^<span class="lit">0<span class="pun">=<span class="lit">0<span class="pun">;<span class="pln">   
<span class="lit">0<span class="pun">^<span class="lit">1<span class="pun">=<span class="lit">1<span class="pun">;<span class="pln">   
<span class="lit">1<span class="pun">^<span class="lit">0<span class="pun">=<span class="lit">1<span class="pun">;<span class="pln">  
<span class="lit">1<span class="pun">^<span class="lit">1<span class="pun">=<span class="lit">0<span class="pun">;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
</td>
<td>(A ^ B) 将得到 49，即为 0011 0001</td>
</tr>
<tr>
<td>~</td>
<td>
<p>取反运算符，按二进制位进行"取反"运算。运算规则：</p>
<pre class="prettyprint prettyprinted"><span class="pun">~<span class="lit">1<span class="pun">=<span class="lit">0<span class="pun">;<span class="pln">   
<span class="pun">~<span class="lit">0<span class="pun">=<span class="lit">1<span class="pun">;</span></span></span></span></span></span></span></span></span></span></span></pre>
</td>
<td>(~A ) 将得到 -61，即为 1100 0011，一个有符号二进制数的补码形式。</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td>二进制左移运算符。将一个运算对象的各二进制位全部左移若干位（左边的二进制位丢弃，右边补0）。</td>
<td>A &lt;&lt; 2 将得到 240，即为 1111 0000</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>二进制右移运算符。将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。</td>
<td>A &gt;&gt; 2 将得到 15，即为 0000 1111</td>
</tr>
</tbody>
</table>
<h3>实例</h3>
<p>请看下面的实例，了解 C 语言中所有可用的位运算符：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
 
   unsigned </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">60</span>;    <span style="color: #008000;">/*</span><span style="color: #008000;"> 60 = 0011 1100 </span><span style="color: #008000;">*/</span><span style="color: #000000;">  
   unsigned </span><span style="color: #0000ff;">int</span> b = <span style="color: #800080;">13</span>;    <span style="color: #008000;">/*</span><span style="color: #008000;"> 13 = 0000 1101 </span><span style="color: #008000;">*/</span>
   <span style="color: #0000ff;">int</span> c = <span style="color: #800080;">0</span><span style="color: #000000;">;           
 
   c </span>= a &amp; b;       <span style="color: #008000;">/*</span><span style="color: #008000;"> 12 = 0000 1100 </span><span style="color: #008000;">*/</span><span style="color: #000000;"> 
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>= a | b;       <span style="color: #008000;">/*</span><span style="color: #008000;"> 61 = 0011 1101 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>= a ^ b;       <span style="color: #008000;">/*</span><span style="color: #008000;"> 49 = 0011 0001 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>= ~a;          <span style="color: #008000;">/*</span><span style="color: #008000;">-61 = 1100 0011 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 4 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>= a &lt;&lt; <span style="color: #800080;">2</span>;     <span style="color: #008000;">/*</span><span style="color: #008000;"> 240 = 1111 0000 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 5 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>= a &gt;&gt; <span style="color: #800080;">2</span>;     <span style="color: #008000;">/*</span><span style="color: #008000;"> 15 = 0000 1111 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 6 - c 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<pre class="prettyprint prettyprinted"><span class="typ">Line<span class="pln"> <span class="lit">1<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">12<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">2<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">61<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">3<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">49<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">4<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="pun">-<span class="lit">61<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">5<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">240<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">6<span class="pln"> <span class="pun">-<span class="pln"> c <span class="pun">的值是<span class="pln"> <span class="lit">15</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<h2 class="tutheader">赋值运算符</h2>
<p>下表列出了 C 语言支持的赋值运算符：</p>
<table class="reference notranslate">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>=</td>
<td>简单的赋值运算符，把右边操作数的值赋给左边操作数</td>
<td>C = A + B 将把 A + B 的值赋给 C</td>
</tr>
<tr>
<td>+=</td>
<td>加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数</td>
<td>C += A 相当于 C = C + A</td>
</tr>
<tr>
<td>-=</td>
<td>减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数</td>
<td>C -= A 相当于 C = C - A</td>
</tr>
<tr>
<td>*=</td>
<td>乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数</td>
<td>C *= A 相当于 C = C * A</td>
</tr>
<tr>
<td>/=</td>
<td>除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数</td>
<td>C /= A 相当于 C = C / A</td>
</tr>
<tr>
<td>%=</td>
<td>求模且赋值运算符，求两个操作数的模赋值给左边操作数</td>
<td>C %= A 相当于 C = C % A</td>
</tr>
<tr>
<td>&lt;&lt;=</td>
<td>左移且赋值运算符</td>
<td>C &lt;&lt;= 2 等同于 C = C &lt;&lt; 2</td>
</tr>
<tr>
<td>&gt;&gt;=</td>
<td>右移且赋值运算符</td>
<td>C &gt;&gt;= 2 等同于 C = C &gt;&gt; 2</td>
</tr>
<tr>
<td>&amp;=</td>
<td>按位与且赋值运算符</td>
<td>C &amp;= 2 等同于 C = C &amp; 2</td>
</tr>
<tr>
<td>^=</td>
<td>按位异或且赋值运算符</td>
<td>C ^= 2 等同于 C = C ^ 2</td>
</tr>
<tr>
<td>|=</td>
<td>按位或且赋值运算符</td>
<td>C |= 2 等同于 C = C | 2</td>
</tr>
</tbody>
</table>
<h3>实例</h3>
<p>请看下面的实例，了解 C 语言中所有可用的赋值运算符：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;<span style="color: #000000;">
 
main()
{
   </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">21</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> c ;
 
   c </span>=<span style="color: #000000;">  a;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - =  运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>+=<span style="color: #000000;">  a;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - += 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>-=<span style="color: #000000;">  a;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - -= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>*=<span style="color: #000000;">  a;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 4 - *= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>/=<span style="color: #000000;">  a;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 5 - /= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c  </span>= <span style="color: #800080;">200</span><span style="color: #000000;">;
   c </span>%=<span style="color: #000000;">  a;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 6 - %= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>&lt;&lt;=  <span style="color: #800080;">2</span><span style="color: #000000;">;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 7 - &lt;&lt;= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>&gt;&gt;=  <span style="color: #800080;">2</span><span style="color: #000000;">;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 8 - &gt;&gt;= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>&amp;=  <span style="color: #800080;">2</span><span style="color: #000000;">;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 9 - &amp;= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>^=  <span style="color: #800080;">2</span><span style="color: #000000;">;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 10 - ^= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
   c </span>|=  <span style="color: #800080;">2</span><span style="color: #000000;">;
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 11 - |= 运算符实例，c 的值 = %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c );
 
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<pre class="prettyprint prettyprinted"><span class="typ">Line<span class="pln"> <span class="lit">1<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">=<span class="pln">  <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">21<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">2<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">+=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">42<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">3<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">-=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">21<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">4<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">*=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">441<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">5<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">/=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">21<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">6<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">%=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">11<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">7<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">&lt;&lt;=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">44<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">8<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">&gt;&gt;=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">11<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">9<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">&amp;=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">2<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">10<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">^=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">0<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">11<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">|=<span class="pln"> <span class="pun">运算符实例，<span class="pln">c <span class="pun">的值<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<h2 class="tutheader">杂项运算符 ↦ sizeof &amp; 三元</h2>
<p>下表列出了 C 语言支持的其他一些重要的运算符，包括&nbsp;<strong>sizeof</strong>&nbsp;和&nbsp;<strong>? :</strong>。</p>
<table class="reference">
<tbody>
<tr><th>运算符</th><th>描述</th><th>实例</th></tr>
<tr>
<td>sizeof()</td>
<td>返回变量的大小。</td>
<td>sizeof(a) 将返回 4，其中 a 是整数。</td>
</tr>
<tr>
<td>&amp;</td>
<td>返回变量的地址。</td>
<td>&amp;a; 将给出变量的实际地址。</td>
</tr>
<tr>
<td>*</td>
<td>指向一个变量。</td>
<td>*a; 将指向一个变量。</td>
</tr>
<tr>
<td>? :</td>
<td>条件表达式</td>
<td>如果条件为真 ? 则值为 X : 否则值为 Y</td>
</tr>
</tbody>
</table>
<h3>实例</h3>
<p>请看下面的实例，了解 C 语言中所有可用的杂项运算符：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
   </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">4</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">short</span><span style="color: #000000;"> b;
   </span><span style="color: #0000ff;">double</span><span style="color: #000000;"> c;
   </span><span style="color: #0000ff;">int</span>*<span style="color: #000000;"> ptr;
 
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> sizeof 运算符实例 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 1 - 变量 a 的大小 = %lu\n</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">sizeof</span><span style="color: #000000;">(a) );
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 2 - 变量 b 的大小 = %lu\n</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">sizeof</span><span style="color: #000000;">(b) );
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Line 3 - 变量 c 的大小 = %lu\n</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">sizeof</span><span style="color: #000000;">(c) );
 
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> &amp; 和 * 运算符实例 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   ptr </span>= &amp;a;    <span style="color: #008000;">/*</span><span style="color: #008000;"> 'ptr' 现在包含 'a' 的地址 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">a 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a);
   printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">*ptr 是 %d\n</span><span style="color: #800000;">"</span>, *<span style="color: #000000;">ptr);
 
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 三元运算符实例 </span><span style="color: #008000;">*/</span><span style="color: #000000;">
   a </span>= <span style="color: #800080;">10</span><span style="color: #000000;">;
   b </span>= (a == <span style="color: #800080;">1</span>) ? <span style="color: #800080;">20</span>: <span style="color: #800080;">30</span><span style="color: #000000;">;
   printf( </span><span style="color: #800000;">"</span><span style="color: #800000;">b 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, b );
 
   b </span>= (a == <span style="color: #800080;">10</span>) ? <span style="color: #800080;">20</span>: <span style="color: #800080;">30</span><span style="color: #000000;">;
   printf( </span><span style="color: #800000;">"</span><span style="color: #800000;">b 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, b );
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<pre class="prettyprint prettyprinted"><span class="typ">Line<span class="pln"> <span class="lit">1<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">变量<span class="pln"> a <span class="pun">的大小<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">4<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">2<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">变量<span class="pln"> b <span class="pun">的大小<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">2<span class="pln">
<span class="typ">Line<span class="pln"> <span class="lit">3<span class="pln"> <span class="pun">-<span class="pln"> <span class="pun">变量<span class="pln"> c <span class="pun">的大小<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">8<span class="pln">
a <span class="pun">的值是<span class="pln"> <span class="lit">4<span class="pln">
<span class="pun">*<span class="pln">ptr <span class="pun">是<span class="pln"> <span class="lit">4<span class="pln">
b <span class="pun">的值是<span class="pln"> <span class="lit">30<span class="pln">
b <span class="pun">的值是<span class="pln"> <span class="lit">20</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>
<h2 class="tutheader">C 中的运算符优先级</h2>
<p>运算符的优先级确定表达式中项的组合。这会影响到一个表达式如何计算。某些运算符比其他运算符有更高的优先级，例如，乘除运算符具有比加减运算符更高的优先级。</p>
<p>例如 x = 7 + 3 * 2，在这里，x 被赋值为 13，而不是 20，因为运算符 * 具有比 + 更高的优先级，所以首先计算乘法 3*2，然后再加上 7。</p>
<p>下表将按运算符优先级从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。在表达式中，较高优先级的运算符会优先被计算。</p>
<table class="reference notranslate">
<tbody>
<tr><th>类别&nbsp;</th><th>运算符&nbsp;</th><th>结合性&nbsp;</th></tr>
<tr>
<td>后缀&nbsp;</td>
<td>() [] -&gt; . ++ - - &nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>一元&nbsp;</td>
<td>+ - ! ~ ++ - - (type)* &amp; sizeof&nbsp;</td>
<td>从右到左&nbsp;</td>
</tr>
<tr>
<td>乘除&nbsp;</td>
<td>* / %&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>加减&nbsp;</td>
<td>+ -&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>移位&nbsp;</td>
<td>&lt;&lt; &gt;&gt;&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>关系&nbsp;</td>
<td>&lt; &lt;= &gt; &gt;=&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>相等&nbsp;</td>
<td>== !=&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>位与 AND&nbsp;</td>
<td>&amp;&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>位异或 XOR&nbsp;</td>
<td>^&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>位或 OR&nbsp;</td>
<td>|&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>逻辑与 AND&nbsp;</td>
<td>&amp;&amp;&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>逻辑或 OR&nbsp;</td>
<td>||&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
<tr>
<td>条件&nbsp;</td>
<td>?:&nbsp;</td>
<td>从右到左&nbsp;</td>
</tr>
<tr>
<td>赋值&nbsp;</td>
<td>= += -= *= /= %=&gt;&gt;= &lt;&lt;= &amp;= ^= |=&nbsp;</td>
<td>从右到左&nbsp;</td>
</tr>
<tr>
<td>逗号&nbsp;</td>
<td>,&nbsp;</td>
<td>从左到右&nbsp;</td>
</tr>
</tbody>
</table>
<h3>实例</h3>
<p>请看下面的实例，了解 C 语言中运算符的优先级：</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;<span style="color: #000000;">
 
main()
{
   </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">20</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span> b = <span style="color: #800080;">10</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span> c = <span style="color: #800080;">15</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span> d = <span style="color: #800080;">5</span><span style="color: #000000;">;
   </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> e;
 
   e </span>= (a + b) * c / d;      <span style="color: #008000;">//</span><span style="color: #008000;"> ( 30 * 15 ) / 5</span>
   printf(<span style="color: #800000;">"</span><span style="color: #800000;">(a + b) * c / d 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,  e );
 
   e </span>= ((a + b) * c) / d;    <span style="color: #008000;">//</span><span style="color: #008000;"> (30 * 15 ) / 5</span>
   printf(<span style="color: #800000;">"</span><span style="color: #800000;">((a + b) * c) / d 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> ,  e );
 
   e </span>= (a + b) * (c / d);   <span style="color: #008000;">//</span><span style="color: #008000;"> (30) * (15/5)</span>
   printf(<span style="color: #800000;">"</span><span style="color: #800000;">(a + b) * (c / d) 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,  e );
 
   e </span>= a + (b * c) / d;     <span style="color: #008000;">//</span><span style="color: #008000;">  20 + (150/5)</span>
   printf(<span style="color: #800000;">"</span><span style="color: #800000;">a + (b * c) / d 的值是 %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;"> ,  e );
  
   </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>当上面的代码被编译和执行时，它会产生下列结果：</p>
<pre class="prettyprint prettyprinted"><span class="pun">(<span class="pln">a <span class="pun">+<span class="pln"> b<span class="pun">)<span class="pln"> <span class="pun">*<span class="pln"> c <span class="pun">/<span class="pln"> d <span class="pun">的值是<span class="pln"> <span class="lit">90<span class="pln">
<span class="pun">((<span class="pln">a <span class="pun">+<span class="pln"> b<span class="pun">)<span class="pln"> <span class="pun">*<span class="pln"> c<span class="pun">)<span class="pln"> <span class="pun">/<span class="pln"> d <span class="pun">的值是<span class="pln"> <span class="lit">90<span class="pln">
<span class="pun">(<span class="pln">a <span class="pun">+<span class="pln"> b<span class="pun">)<span class="pln"> <span class="pun">*<span class="pln"> <span class="pun">(<span class="pln">c <span class="pun">/<span class="pln"> d<span class="pun">)<span class="pln"> <span class="pun">的值是<span class="pln"> <span class="lit">90<span class="pln">
a <span class="pun">+<span class="pln"> <span class="pun">(<span class="pln">b <span class="pun">*<span class="pln"> c<span class="pun">)<span class="pln"> <span class="pun">/<span class="pln"> d <span class="pun">的值是<span class="pln"> <span class="lit">50</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>]]></description></item><item><title>【C语言】创建一个函数，利用该函数将两个字符串连接起来</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/29/11957584.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 29 Nov 2019 06:31:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/29/11957584.html</guid><description><![CDATA[<p><strong>代码：</strong></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;

<span style="color: #0000ff;">int</span> fun(<span style="color: #0000ff;">char</span> c[<span style="color: #800080;">100</span>], <span style="color: #0000ff;">char</span> d[<span style="color: #800080;">100</span><span style="color: #000000;">])

{

    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; c[i] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; i++<span style="color: #000000;">);

    </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">0</span>; d[j] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; j++<span style="color: #000000;">)

    {

        c[i</span>++] =<span style="color: #000000;"> d[j];

    }

    c[i] </span>= <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    puts(c);
    </span><span style="color: #0000ff;">return</span> c[<span style="color: #800080;">100</span><span style="color: #000000;">];

}

</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()

{

    </span><span style="color: #0000ff;">char</span> a[<span style="color: #800080;">100</span><span style="color: #000000;">];

    </span><span style="color: #0000ff;">char</span> b[<span style="color: #800080;">100</span><span style="color: #000000;">];

    gets_s(a);

    gets_s(b);

    fun(a, b);

    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;

}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】实参求值的顺序</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/29/11956450.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 29 Nov 2019 03:02:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/29/11956450.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">void</span> fun(<span style="color: #0000ff;">int</span> x,<span style="color: #0000ff;">int</span><span style="color: #000000;"> y)
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">x=%d,y=%d</span><span style="color: #800000;">"</span><span style="color: #000000;">,x,y);
}

</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入i：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">i);
    fun(i</span>++<span style="color: #000000;">,i);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】无参函数调用实例</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/29/11956296.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 29 Nov 2019 02:46:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/29/11956296.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">void</span><span style="color: #000000;"> hello()
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">年轻人，加油！</span><span style="color: #800000;">"</span><span style="color: #000000;">);
}

</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    hello();
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】函数调用的简单例子</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/29/11956246.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 29 Nov 2019 02:41:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/29/11956246.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">void</span><span style="color: #000000;"> p1()
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">******************\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
}
</span><span style="color: #0000ff;">void</span><span style="color: #000000;"> p2()
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">一起学习C语言函数呀！\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
}
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    p1();
    p2();
    p1();
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>例题中p1和p2都是用户定义的函数名，pl的功能是输出一行星号，p2的功能是输出一行文字。在定义这两个函数时指定函数的类型为void&nbsp;类型，意为函数无类型，即没有函数返回值，也就是说，执行这两个函数后不会把任何值带回到main函数,p1和p2函数的功能只有在主函数中调用时才会发挥作用。<br />采用模块化思想有如下的优点:<br />(1)可重用性。其使程序变得更简洁清晰，提供服务的模块可以在其他程序中复用。<br />(2)可维护性。将程序模块化后，程序中的错误通常只影响一-&nbsp;个模块实现，因而更容易找到并修改错误。<br />(3)可以提高程序开发的效率。模块化后，一个团队的多个程序员开发-一&nbsp;个程序更加容易,团队成员在很大程度上可以相互独立地工作。我们知道模块会做什么，但是不需要知道这些功能的实现细节，可以不必为了修改部分程序而了解整个程序是如何工作的。</p>]]></description></item><item><title>【C语言】创建一个函数，利用该函数将字符串中的小写字母转换为大写字母</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/29/11955521.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Thu, 28 Nov 2019 23:47:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/29/11955521.html</guid><description><![CDATA[<p><strong>原理：</strong></p>
<p>这类题目主要通过ASCII（美国信息交换标准代码）码差值实现，A对应ASCII码十进制数字是65，a对应ASCII码十进制数字是97，即大小写字母之间ASCII码差值为32，想要将大写字母转换为小写字母可以将该字符ASCII码值+32，同理小写字母转换成大写字母只需将该字符ASCII码值-32</p>
<p><strong>代码1：</strong></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;<span style="color: #000000;">
#include</span>&lt;assert.h&gt;

<span style="color: #0000ff;">char</span> * my_strlwr(<span style="color: #0000ff;">char</span> * str)   <span style="color: #008000;">//</span><span style="color: #008000;">定义一个my_strlwr函数</span>
<span style="color: #000000;">{
    assert(str);         </span><span style="color: #008000;">//</span><span style="color: #008000;">str的非空性</span>
    <span style="color: #0000ff;">char</span> *ret = str;       <span style="color: #008000;">//</span><span style="color: #008000;">定义一个ret保存最初的str</span>
    <span style="color: #0000ff;">while</span>(*str != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>)      <span style="color: #008000;">//</span><span style="color: #008000;">判断字符串是否结束</span>
<span style="color: #000000;">    {  
        </span><span style="color: #0000ff;">if</span>((*str &gt;= <span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span>)&amp;&amp;(*str &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span>))<span style="color: #008000;">//</span><span style="color: #008000;">判断当前的字符是否是小写字母</span>
<span style="color: #000000;">        {
            </span>*str = *str -<span style="color: #800080;">32</span>;     <span style="color: #008000;">//</span><span style="color: #008000;">将其转化为大写字母</span>
            str++<span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
            str</span>++<span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">return</span> ret;       <span style="color: #008000;">//</span><span style="color: #008000;">返回该字符串数组的首地址</span>
<span style="color: #000000;">}
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span> str1[<span style="color: #800080;">666</span><span style="color: #000000;">];
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一段字母:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%s</span><span style="color: #800000;">"</span>,&amp;str1);<span style="color: #008000;">//</span><span style="color: #008000;">输入字母字符串</span>
<span style="color: #000000;">
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%s\n</span><span style="color: #800000;">"</span>,my_strlwr(str1));  <span style="color: #008000;">//</span><span style="color: #008000;">调用该函数，并且输出新的字符串</span>

    <span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
} </span></pre>
</div>
<p>&nbsp;<strong>代码2：</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">char</span>* fun(<span style="color: #0000ff;">char</span> a[<span style="color: #800080;">100</span><span style="color: #000000;">])
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
</span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; a[i] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; i++<span style="color: #000000;">)
        </span><span style="color: #0000ff;">if</span> (a[i] &gt;= <span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span> &amp;&amp; a[i] &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span><span style="color: #000000;">)
            a[i] </span>-= <span style="color: #800080;">32</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> a;
}
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span> a[<span style="color: #800080;">100</span><span style="color: #000000;">];
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一段字母：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    gets_s(a);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">结果为：%s</span><span style="color: #800000;">"</span><span style="color: #000000;">,fun(a));
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】输入5个整数并按输入顺序逆序输出</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/28/11946725.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 23:40:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/28/11946725.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
</span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">5</span><span style="color: #000000;">],i;
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入5个整数:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">0</span>;i&lt;<span style="color: #800080;">5</span>;i++<span style="color: #000000;">)
  scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>,&amp;<span style="color: #000000;">a[i]);
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">逆序为:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">4</span>;i&gt;=<span style="color: #800080;">0</span>;i--<span style="color: #000000;">)
  printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,a[i]);
</span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】（数组）C语言字符串中的小写字母转换为大写字母</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/27/11945340.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 12:48:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/27/11945340.html</guid><description><![CDATA[<p>先判断后转化</p>
<p><strong>原理：</strong></p>
<p>这类题目主要通过ASCII（美国信息交换标准代码）码差值实现，A对应ASCII码十进制数字是65，a对应ASCII码十进制数字是97，即大小写字母之间ASCII码差值为32，想要将大写字母转换为小写字母可以将该字符ASCII码值+32，同理小写字母转换成大写字母只需将该字符ASCII码值-32</p>
<p><strong>代码：</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span> a[<span style="color: #800080;">100</span><span style="color: #000000;">];
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    gets_s(a);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; a[i] != <span style="color: #800000;">'</span><span style="color: #800000;">\0</span><span style="color: #800000;">'</span>; i++<span style="color: #000000;">)
        </span><span style="color: #0000ff;">if</span> (a[i] &gt;= <span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span> &amp;&amp; a[i] &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span><span style="color: #000000;">)
            a[i] </span>-= <span style="color: #800080;">32</span><span style="color: #000000;">;

    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%s</span><span style="color: #800000;">"</span><span style="color: #000000;">, a);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】创建一个函数，判断某一正整数是否为完数，并调用这个函数找出1000以内所有完数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/27/11944589.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 10:54:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/27/11944589.html</guid><description><![CDATA[<p><strong>什么是完数？</strong></p>
<p>如果一个数等于它的因子之和，则称该数为&ldquo;完数&rdquo;（或&ldquo;完全数&rdquo;)。</p>
<p>例如，6的因子为1、2、3，而 6=1+2+3，因此6是&ldquo;完数&rdquo;。</p>
<p>&nbsp;</p>
<p><strong>&nbsp;问题分析</strong></p>
<p>根据完数的定义，解决本题的关键是计算出所选取的整数m（m的取值范围不固定）的因子（因子就是所有可以整除这个数的数），将各因子累加到变量sum (记录所有因子之和），若sum等于m，则可确认m为完数，反之则不是完数。</p>
<p><strong>代码：</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span> fun(<span style="color: #0000ff;">int</span> n)<span style="color: #008000;">//</span><span style="color: #008000;">判断n是否为完数，如果是，则返回1，否则返回0.</span>
<span style="color: #000000;">{
    </span><span style="color: #0000ff;">int</span> i, sum = <span style="color: #800080;">0</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">1</span>; i &lt; n; i++)<span style="color: #008000;">//</span><span style="color: #008000;">遍历小于n的整数。</span>
        <span style="color: #0000ff;">if</span> (n % i == <span style="color: #800080;">0</span>)<span style="color: #008000;">//</span><span style="color: #008000;">可以整除，为真因子。</span>
            sum += i;<span style="color: #008000;">//</span><span style="color: #008000;">累加每个真因子到sum上。 </span>
    <span style="color: #0000ff;">if</span> (sum ==<span style="color: #000000;"> n)
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">1</span>; <span style="color: #008000;">//</span><span style="color: #008000;">符合完数条件，返回1。</span>
    <span style="color: #0000ff;">else</span>
        <span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span>;<span style="color: #008000;">//</span><span style="color: #008000;">不是完数，返回0。</span>
<span style="color: #000000;">}
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m;
    </span><span style="color: #0000ff;">for</span> (m = <span style="color: #800080;">1</span>; m &lt; <span style="color: #800080;">1000</span>; m++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">if</span> (fun(m)==<span style="color: #800080;">1</span><span style="color: #000000;">)
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】创建一个函数，将输入的2个数排序</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943734.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 09:10:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943734.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">void</span> fun(<span style="color: #0000ff;">int</span> *x,<span style="color: #0000ff;">int</span>*<span style="color: #000000;">y)
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> t;
</span><span style="color: #0000ff;">if</span>(*x&gt;=*<span style="color: #000000;">y)
{
t</span>=*x;*x=*y;*y=<span style="color: #000000;">t;
}
}
main()
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m,n;
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入2个数字\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d</span><span style="color: #800000;">"</span>,&amp;m,&amp;<span style="color: #000000;">n);
fun(</span>&amp;m,&amp;<span style="color: #000000;">n);
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d,%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,m,n);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】创建一个函数，判断某一正整数是否为素数，并调用这个函数找出1000以内所有素数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943656.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 09:02:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943656.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span> fun(<span style="color: #0000ff;">int</span><span style="color: #000000;"> x)
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> n;
</span><span style="color: #0000ff;">for</span>(n=<span style="color: #800080;">2</span>;n&lt;=x-<span style="color: #800080;">1</span>;n++<span style="color: #000000;">)
</span><span style="color: #0000ff;">if</span>(x/n==<span style="color: #800080;">0</span><span style="color: #000000;">)
</span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span>(n&gt;=<span style="color: #000000;">x)
</span><span style="color: #0000ff;">return</span> <span style="color: #800080;">1</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">else</span>
<span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}
main()
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m;
</span><span style="color: #0000ff;">for</span>(m=<span style="color: #800080;">2</span>;m&lt;<span style="color: #800080;">1000</span>;m++<span style="color: #000000;">)
{
</span><span style="color: #0000ff;">if</span>(fun(m)==<span style="color: #800080;">1</span><span style="color: #000000;">)
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%-5d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,m);
}

}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】创建一个函数，判断某一正整数是否为水仙花数，并调用这个函数找出1000以内所有水仙花数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943593.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 08:55:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943593.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span> fun(<span style="color: #0000ff;">int</span><span style="color: #000000;"> x)
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> a,b,c;
a</span>=x/<span style="color: #800080;">100</span><span style="color: #000000;">;
b</span>=x%<span style="color: #800080;">100</span>/<span style="color: #800080;">10</span><span style="color: #000000;">;
c</span>=x%<span style="color: #800080;">10</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span>(x=a*a*a+b*b*b+c*c*<span style="color: #000000;">c)
</span><span style="color: #0000ff;">return</span> <span style="color: #800080;">1</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">else</span>
<span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}
main()
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m;
</span><span style="color: #0000ff;">for</span>(m=<span style="color: #800080;">100</span>;m&lt;<span style="color: #800080;">1000</span>;m++<span style="color: #000000;">)
{
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,m);
}

} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】创建一个函数，并调用比较三个数的大小</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943019.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 08:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/27/11943019.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span> max(<span style="color: #0000ff;">int</span> x,<span style="color: #0000ff;">int</span> y,<span style="color: #0000ff;">int</span><span style="color: #000000;"> z)
{
</span><span style="color: #0000ff;">if</span>(x&gt;=<span style="color: #000000;">y)
</span><span style="color: #0000ff;">if</span>(x&gt;=<span style="color: #000000;">z)
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> x;
</span><span style="color: #0000ff;">else</span>
<span style="color: #0000ff;">return</span><span style="color: #000000;"> z;
</span><span style="color: #0000ff;">else</span>
<span style="color: #0000ff;">if</span>(y&gt;=<span style="color: #000000;">z)
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> y;
</span><span style="color: #0000ff;">else</span>
<span style="color: #0000ff;">return</span><span style="color: #000000;"> z;
}
main()
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> a,b,c; 
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入3个数字:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d%d</span><span style="color: #800000;">"</span>,&amp;a,&amp;b,&amp;<span style="color: #000000;">c);
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">最大值为:%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,max(a,b,c));
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】创建一个函数，并调用比较两个数的大小</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/27/11942947.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 27 Nov 2019 07:59:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/27/11942947.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span> max(<span style="color: #0000ff;">int</span> x,<span style="color: #0000ff;">int</span><span style="color: #000000;"> y)
{
</span><span style="color: #0000ff;">if</span>(x&gt;=<span style="color: #000000;">y)
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> x;
</span><span style="color: #0000ff;">else</span>
<span style="color: #0000ff;">return</span><span style="color: #000000;"> y;
}
main() 
{
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> a,b;
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入2个数字:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d</span><span style="color: #800000;">"</span>,&amp;a,&amp;<span style="color: #000000;">b);
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">最大值为:%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,max(a,b));
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>人脸识别技术原理与工程实践</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/26/11938904.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 26 Nov 2019 14:26:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/26/11938904.html</guid><description><![CDATA[<p><strong>1人脸识别应用场景（验证）</strong></p>
<p><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215515679-1894360207.png" alt="" /></p>
<p align="left">我们先来看看人脸识别的几个应用。第一个是苹果的FACE ID，自从苹果推出FaceID后，业界对人脸识别的应用好像信心大增，各种人脸识别的应用从此开始&ldquo;野蛮生长&rdquo;。</p>
<p align="left">事实上，<strong>人脸识别技术在很多场景的应用确实可以提升认证效率，同时提升用户体验。</strong>前两年，很多机场安检都开始用上了人脸验证；今年4月，很多一、二线城市的火车站也开通了&ldquo;刷脸进站&rdquo;的功能；北京的一些酒店开始使用人脸识别技术来做身份验证。</p>
<p align="left">&nbsp;</p>
<p><strong>2 人脸识别应用场景（识别）</strong></p>
<p align="left">我们再来看看几个场景。</p>
<p align="left">&nbsp;<img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215548383-337436586.png" alt="" /></p>
<p align="left">第一个是刷脸的自动售货机。当我第一次看到这个机器的时候就有个疑问：&rdquo;现在人脸识别算法已经做到万无一失了吗，认错人，扣错钱怎么办？&rdquo;，后来才发现，其实关键不在于算法，产品设计才是最重要的。用过这个售货机的人可能知道，第一次使用的时候，要求输入手机号的后四位，这个看似简单的产品设计，可以让自动售货机的误识别率降低到亿分之一，这样底概率的条件下，误识别带来的损失完全可以忽略。同时这款自动售货机还会提醒你，你的消费行为会绑定&ldquo;芝麻信用&rdquo;，想想有几个人会为了一瓶&ldquo;可乐&rdquo;去影响自己的征信记录呢？</p>
<p align="left">第二个是刷脸买咖啡，进入咖啡店后，在你选好喝什么咖啡前，系统已经识别出站在点单台前的用户是谁，并做好点单准备；</p>
<p align="left">第三个是在人脸门禁系统。小伙伴们再已不用担心忘记带工卡了。人脸门禁对识别速度和准确度的要求是相对较高的，设备挂在门的侧面墙也会影响体验，增加产品设计和开发的难度。</p>
<p align="left">&nbsp;</p>
<p><strong>3 &ldquo;人脸验证&rdquo;还是&ldquo;人脸识别&rdquo;？</strong></p>
<p align="left">其实，前面两页的场景是有些区别的，不知道大家看出来了没有。</p>
<p align="left"><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215614450-1202486677.png" alt="" /></p>
<p align="left">第一个的场景，用户实际提供了两个信息，一是用户的证件信息，比如身份证号码，或APP账号；另一个信息是用户的现场照片；这类场景的目标实际上是：<strong>让人脸识别系统验证现场照片是否是证件所宣称的那个人</strong>。我们把这类场景<strong>叫着&ldquo;人脸验证&rdquo;</strong>。</p>
<p align="left">第二个的场景，用户实际只提供的现场照片，<strong>需要人脸识别系统判断照片上的人是谁</strong>。我们把这类场景<strong>叫着&ldquo;人脸识别&rdquo;</strong>。</p>
<p align="left"><strong>&ldquo;人脸验证&rdquo;拿现场人脸跟用户所宣称的人脸做1比1的比较，而&ldquo;人脸识别&rdquo;是拿现场人脸跟后台注册人脸库中的所有人脸比较，是1比N的搜索</strong>。可以看出，两种场景的技术原理一致，但是难度不同,第二页场景的难度普遍比第一页高得多。</p>
<p>&nbsp;</p>
<p><strong>4 人脸识别原理</strong></p>
<p align="left">计算机是怎么识别人脸的呢？如果我们大家是人脸识别系统的设计者，我们应用怎样来设计这个系统？</p>
<p align="left">&ldquo;把人脸区域从图片中抠出来，然后拿抠出来的人脸跟事先注册的人脸进行比较&rdquo;，没错，就是这样，说起来简单，做又是另外一回事了，这里又有两个新的问题：</p>
<p align="left">一是，&ldquo;怎样判断图片中是有没有人脸？&rdquo;，&ldquo;怎样知道人脸在图片中的具体位置呢&rdquo;，这是人脸检测要解决的问题，人脸检测告诉我们图像中是否有人脸以及人脸的具体位置坐标。</p>
<p align="left">二是，&ldquo;我们怎样比较两个人脸是不是同一个人呢？&rdquo;，一个像素一个像素比较吗？光照，表情不一致，人脸偏转都将导致该方法不可行。&rdquo;人是怎样判断两种照片中的人脸是不是同一个人的呢？&rdquo;，我们是不是通过比较两种照片上的人，是不是高鼻梁、大眼睛、瓜子脸这样的面部特征来做判断的呢？&nbsp;</p>
<p align="left"><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215632928-1477029383.png" alt="" /></p>
<p align="left">我们来看一下计算机人脸识别的流程，首先是获取输入图像，然后检测图像中是否有人脸，人脸的具体位置，然后判断图像的质量，比如图像是否模糊，光照度是否足够，然后检测人脸偏转的角度，旋转人脸到一个正脸位置，再然后提取人脸特征，比对人脸特征，最后输出识别结果。其中图像质量检测和人脸对齐这两步是可选的步骤，根据具体应用场景来决定。</p>
<p>&nbsp;</p>
<p><strong>5 人脸检测-经典方法</strong></p>
<p align="left">我们来看看经典的人脸检测方法。</p>
<p align="left"><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215654480-1465411731.png" alt="" /></p>
<p align="left">OpenCV和Dlib是两个常用的算法库。</p>
<p align="left">OpenCV 中使用Haar Cascade来做人脸检测，其实Haar Cascade可以检测任何对象，比如人脸和脸上眼睛的位置。</p>
<p align="left">DLIB中是使用方向梯度直方图（Histogram of Oriented Gradient, HOG），即通过计算图像局部区域的梯度方向直方图来提取特征，这种方法的本质在于梯度的统计信息，而梯度主要存在于边缘的地方。</p>
<p align="left">OpenCV和DLIB各自也有他们自己的基于深度学习的人脸检测方法，使用起来非常简单。从这几种方法都可以做到CPU实时或GPU实时；<strong>经典的检测方法对正脸的检测效果比较好，深度学习的方法适应性更强，可以检测各种角度的人脸</strong>。</p>
<p><strong>&nbsp;</strong></p>
<p><strong>6 MTCNN人脸检测</strong></p>
<p align="left">2016年提出来的MTCNN算法是目前公认比较好的人脸检测算法是（Multi-task Cascaded Convolutional Networks），可以同时实现face detection和alignment，也就是人脸检测和对齐。</p>
<p align="left">这里的对齐指的是检测人脸眼睛、鼻子、嘴巴轮廓关键点LandMark。</p>
<p align="left"><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215710294-1390034397.png" alt="" /></p>
<p align="left">MTCNN算法主要包含三个子网络：<strong>P-Net （Proposal Network）、 R-Net(Refine Network)、O-Net(Output Network)，这3个网络按照由粗到细的方式处理输入照片，每个网络有3条支路用来分别做人脸分类、人脸框的回归和人脸关键点定位</strong>。</p>
<p align="left">左上角，<strong>最开始对在多个尺度上对图像做了resize，构成了图像金字塔，然后这些不同尺度的图像作为P、P、O网络的输入进行训练，目的是为了可以检测不同尺度的人脸</strong>。</p>
<p align="left"><strong>P-Net主要用来生成候选人脸框。 R-Net主要用来去除大量的非人脸框。O-Net和R-Net有点像，在R-NET基础上增加了landmark位置的回归，最终输出包含一个或多个人脸框的位置信息和关键点信息</strong>。</p>
<p>&nbsp;</p>
<p><strong>7 人脸特征提取-经典方法</strong></p>
<p>接下来，我们来看一下人脸特征提取。经典的人脸特征提取方法有EigenFace和FisherFace两种。</p>
<p><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215735415-658215758.png" alt="" /></p>
<p align="left">EigenFace的思想是把人脸从像素空间变换到另一个空间，在另一个空间中做相似性的计算。EigenFace的空间变换方法是主成分分析PCA。这个方法90年代开始应用于人脸识别，因为主成分有人脸的形状，所以也称为&ldquo;特征脸&rdquo;。</p>
<p align="left">FisherFace是一种基于线性判别分析LDA(全称Linear &nbsp;Discriminant Analysis,)的人脸特征提取算法， LDA和PCA都是利用特征值排序找到主元的过程。LDA强调的是不同人脸的差异而不是照明条件、人脸表情和方向的变化。所以，Fisherface对人脸光照、人脸姿态变化的影响更不敏感。</p>
<p align="left">&nbsp;</p>
<p><strong>8 人脸特征提取-深度学习法</strong></p>
<p align="left">我们再来看看深度学习法。</p>
<p align="left"><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215752647-378408804.png" alt="" /></p>
<p align="left"><strong>利用神经网络学习高度抽象的人脸特征，然后将特征表示为特征向量，通过比较特征向量之间的欧式距离来判定两张照片是否是同一个人</strong>。</p>
<p align="left">&nbsp;</p>
<p><strong>9人脸特征提取-深度学习法</strong></p>
<p><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215808448-1267277718.png" alt="" /></p>
<p align="left">总体思路是把人脸识别人物当分类任务来训练，<strong>通过在损失函数上施加约束，让相同的人的照片提取的特征距离尽可能近，不是同一个人的照片的提取的特征距离尽可能的远</strong>。</p>
<p align="left">第一个Logit的地方输出的是人脸的特征向量，一般是128维或者512维，浮点向量。这个Logit前面是CNN分类网络，这个Logit后面的部分是通过在损失函数上施加约束来训练模型，让模型区分相同的人和不同的人，后面的部分只需要在训练阶段计算，推理阶段是不需要的。</p>
<p>&nbsp;</p>
<p><strong>10 人脸特征提取-Metric Learning</strong></p>
<p>基于深度学习的人脸特征提取方法主要有两类，一类Metric Learning，另一个是Additive Margin，这两类方法的底层原理都是一样的，就是&ldquo;<strong>通过训练网络，让相同人的特征距离尽可能近，不同人的特征距离尽可能的远</strong>&rdquo;。</p>
<p><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215824404-1242980278.png" alt="" /></p>
<p align="left">孪生网络和Triplet都属于 Metric Learning这类方法。左边孪生网络顾名思义，就是有两个网络，一个网络训练让相同的人之间的距离尽可能的近，另一个网络让不同人之间的距离尽可能远。</p>
<p align="left">右边Triplet网络是对孪生网络的改进，将样本组织为锚点、正样本、负样本的元组，通过训练网络让锚点与正样本之间的距离尽可能的近，锚点与负样本之间的距离尽可能的远，并且至少远于一个阀值阿尔法。</p>
<p>&nbsp;</p>
<p><strong>11 人脸特征提取-Additive Margin</strong></p>
<p align="left">Additive Margin这类方法主要是在分类模型的基础，通过控制损失函数来达到&ldquo;让相同人的特征距离尽可能近，让不同人的特征距离尽可能远&rdquo;的目标。</p>
<p align="left">前面介绍的<strong>Metric Learning的方法最大的问题在于：需要重新组织样本，模型最终能否收敛很大程度上取决于采样是不是合理</strong>。基于Additive Margin的方法则不需要这一步，完全将人脸特征提取当做分类任务来训练，参数的设置也不需要太多trick，Additive Margin的方法大都是在损失函数上做文章。</p>
<p align="left"><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215841704-314649006.png" alt="" /></p>
<p align="left">最近几年，这个类方法研究的比较多，上面这个图中的softmax，Sphereface，Cosface，ArcFace都是Additive Margin方法，<strong>可以看出它都是通过改进损失函数，来实现&ldquo;让相同人的特征距离尽可能近，让不同人的特征距离尽可能远&rdquo;这个目标</strong>。</p>
<p align="left">上面这个图中，颜色相同的点表示一个人，不同的点表示不同的人，这个图的展示比较形象，可以看出<strong>最后一个超球体的效果非常不错</strong>。</p>
<p align="left">Additive Margin正在成为主流， InsightFace也属于这一类，损失函数正是这个ArcFace。</p>
<p align="left">大家可用思考一下，为什么分类方法不能直接用于人脸识别？这里不做详细讨论了。</p>
<p>&nbsp;</p>
<p><strong>12 人脸特征提取-效果评估</strong></p>
<p align="left">我们再来看一下怎样评估人脸特征提取算法的效果。</p>
<p align="left"><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215857983-298838064.png" alt="" /></p>
<p align="left">主要是通过召回率和虚警率两个指标来衡量。应用场景不同，这个两个指标的设置也不同，一般情况下，<strong>在实践中我们都要求在虚警率小于某个值（比如万分之一）的条件下，召回率达到某个值（比如99%）</strong>。很多产品宣称的识别准确率达到多少多少，很大可能是在公开数据集比如LFW上的测试结果。</p>
<p>公开的训练数据集比较推荐的有：<strong>MS1MV2，这个数据集微软前段事件已经宣布撤回不再提供下载，这个数据集大概有85000个不同的人的380万张照片</strong>。另一个数据集是GLINT_ASIA，有9万多人的280万张照片。</p>
<p>&nbsp;</p>
<p><strong>13 工程实践的挑战及经验分享</strong></p>
<p align="left">很多人都认为人脸识别应用，算法包打天下，事实并非如此，即使是最好的识别算法也扛不住像图像质量差。图像质量差、姿势变化、面部形状/纹理随着时间推移的变化、遮挡这些问题，是我们在工程实践中面临的挑战。</p>
<p align="left">当然，大多数问题工程上我们有应对方法。比如图像模糊，光照不足，我们可以先检测图像是否模糊，关照是否不足，质量不过关，就不把图像送给识别算法。</p>
<p align="left">再比如，用他人照片或视频来欺骗人脸识别系统，目前已经有多种活体检测方法来检测并防止这种情况。</p>
<p><img src="https://img2018.cnblogs.com/blog/78343/201911/78343-20191123215914804-1602659887.png" alt="" /></p>
<p align="left">经过一段时间在人脸识别领域的摸爬滚打，个人认为<strong>影响用户体验的关键因素是识别快、识别准，识别快主要靠产品设计，识别准主要靠算法</strong>。</p>
<p align="left">拿人脸门禁来举个例子，产品设计上可以在前端采集照片的时候过滤掉模糊、无人脸的照片，避免无效识别，同时前端在采集照片的时候，可以同时采集多张并发传给后台，做并发识别，这些方法都可以大大提升识别通过的速度，提升用户体验。</p>
<p align="left">&nbsp;</p>
<p align="left">来自<a href="https://www.cnblogs.com/dskit/p/11920405.html">https://www.cnblogs.com/dskit/p/11920405.html</a></p>]]></description></item><item><title>【C语言】找出1000以内所有的素数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/26/11938599.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 26 Nov 2019 13:29:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/26/11938599.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre> #include&lt;stdio.h&gt;<span style="color: #000000;">
int main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, t;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">2</span>; i &lt;= <span style="color: #800080;">1000</span>; i++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">int</span> t = <span style="color: #800080;">1</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">2</span>; j &lt; i; j++<span style="color: #000000;">)
        {
            </span><span style="color: #0000ff;">if</span> (i%j == <span style="color: #800080;">0</span><span style="color: #000000;">)
            {
                t </span>= <span style="color: #800080;">0</span><span style="color: #000000;">;
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
            }
        }
        </span><span style="color: #0000ff;">if</span> (t == <span style="color: #800080;">1</span><span style="color: #000000;">)
        {
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, i);
        }
    }
} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】字符数组，碎碎念</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/25/11930676.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 25 Nov 2019 13:28:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/25/11930676.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #800000;">&nbsp;</span></pre>
</div>
<p><strong>存储方法：</strong></p>
<p><strong>（1）字符数组赋值</strong></p>
<p><strong>①初始化</strong></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">char</span> s[<span style="color: #800080;">100</span>]={<span style="color: #800000;">"</span><span style="color: #800000;">China'}</span>
<span style="color: #000000;">或
</span><span style="color: #0000ff;">char</span> s[<span style="color: #800080;">100</span>]=<span style="color: #800000;">"</span><span style="color: #800000;">China'</span></pre>
</div>
<p>注意：字符串可以不加{},单字符必须加</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span>]={<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">3</span>}</pre>
</div>
<p>②键盘输入</p>
<div class="cnblogs_code">
<pre>（<span style="color: #800080;">1</span><span style="color: #000000;">）
</span><span style="color: #0000ff;">char</span><span style="color: #000000;"> a;
scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c</span><span style="color: #800000;">"</span>,&amp;<span style="color: #000000;">a);
scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%s</span><span style="color: #800000;">"</span>,s)<br />这里s为数组名，不加&amp;<br />（2）<br />get s (s);<br />put s(s);</pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】将输入的10个数排序</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/25/11930333.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 25 Nov 2019 12:39:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/25/11930333.html</guid><description><![CDATA[<p>代码：</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span><span style="color: #000000;">], t;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j, max;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入10个数:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt;= <span style="color: #800080;">9</span>; i=i+<span style="color: #800080;">1</span><span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;a[i]);<span style="color: #008000;">/*</span><span style="color: #008000;">循环输入10个数字</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">9</span>; j &gt;=<span style="color: #800080;">0</span>; j = j-<span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        max </span>=<span style="color: #000000;"> j;
        </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt;=j; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">) 
        {
            </span><span style="color: #0000ff;">if</span> (a[max] &lt;=<span style="color: #000000;"> a[i])
                max </span>=<span style="color: #000000;"> i;
            </span><span style="color: #0000ff;">if</span> (max !=<span style="color: #000000;"> j)
            {
                t </span>= a[max]; a[max] = a[j]; a[j] =<span style="color: #000000;"> t;
            }
        }
    }
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt;= <span style="color: #800080;">9</span>; i=i+<span style="color: #800080;">1</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%-3d</span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i]);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C语言 排序算法</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/25/11929580.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 25 Nov 2019 10:50:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/25/11929580.html</guid><description><![CDATA[<h3>冒泡排序</h3>
<p>冒泡排序（英语：Bubble Sort）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序（如从大到小、首字母从A到Z）错误就把他们交换过来。</p>
<p>过程演示：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Bubble_sort_animation.gif" alt="" /></p>
<div class="example">
<h2 class="example">&nbsp;</h2>
<div class="example_code">
<div class="hl-main"><span class="hl-prepro"><span style="font-size: 1.17em;">选择排序</span></span></div>
</div>
</div>
<p>选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p>
<p>过程演示：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Selection_sort_animation.gif" alt="" /></p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Selection-Sort-Animation.gif" alt="" /></p>
<div class="example">
<h2 class="example">&nbsp;</h2>
</div>
<h3>插入排序</h3>
<p>插入排序（英语：Insertion Sort）是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到 {\displaystyle O(1)} {\displaystyle O(1)}的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后</p>
<p>挪位，为最新元素提供插入空间。</p>
<p>&nbsp;</p>
<p>过程演示：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Insertion_sort_animation.gif" alt="" /></p>
<div class="example">
<h2 class="example">&nbsp;</h2>
</div>
<h3>希尔排序</h3>
<p>希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。希尔排序是非稳定排序算法。</p>
<p>希尔排序是基于插入排序的以下两点性质而提出改进方法的：</p>
<ul>
<li>插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率</li>
<li>但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位</li>
</ul>
<p>过程演示：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Sorting_shellsort_anim.gif" alt="" /></p>
<div class="example">
<h2 class="example">&nbsp;</h2>
</div>
<h3>归并排序</h3>
<p>把数据分为两段，从两段中逐个选最小的元素移入新数据段的末尾。</p>
<p>可从上到下或从下到上进行。</p>
<p>过程演示：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Merge_sort_animation2.gif" alt="" /></p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Merge-sort-example-300px.gif" alt="" /></p>
<div class="example">
<h2 class="example">&nbsp;</h2>
</div>
<h3>快速排序</h3>
<p>在区间中随机挑选一个元素作基准，将小于基准的元素放在基准之前，大于基准的元素放在基准之后，再分别对小数区与大数区进行排序。</p>
<p>过程演示：</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2018/09/Sorting_quicksort_anim.gif" alt="" /></p>
<div class="example">
<h2 class="example">&nbsp;</h2>
</div>]]></description></item><item><title>【C语言】将输入的10个整数逆序输出</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/23/11919689.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 23 Nov 2019 13:04:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/23/11919689.html</guid><description><![CDATA[<p>&nbsp;<strong>代码1：</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span>], b[<span style="color: #800080;">10</span><span style="color: #000000;">];
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i,j;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入10个整数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">a[i]);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>,j=<span style="color: #800080;">9</span>; i &lt; <span style="color: #800080;">10</span>; i = i + <span style="color: #800080;">1</span>,j=j-<span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        b[j] </span>=<span style="color: #000000;"> a[i];
    }
    </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">0</span>; j &lt; <span style="color: #800080;">10</span>; j = j + <span style="color: #800080;">1</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%-3d</span><span style="color: #800000;">"</span><span style="color: #000000;">, b[j]);
}</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>&nbsp;代码2：</strong></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">10</span><span style="color: #000000;">], t;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入10个整数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">a[i]);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        t </span>= a[i]; a[i] = a[<span style="color: #800080;">9</span> - i]; a[<span style="color: #800080;">9</span> - i] =<span style="color: #000000;"> t;
    }
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">10</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%-3d</span><span style="color: #800000;">"</span><span style="color: #000000;">, a[i]);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】（数组方式）输出一组成绩中的最高分与最低分</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/23/11919597.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 23 Nov 2019 12:51:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/23/11919597.html</guid><description><![CDATA[<p><span style="font-size: 14pt;"><strong>两种不同方式获取最大值与最小值</strong></span></p>
<p><span style="font-size: 14pt;"><strong>代码1：</strong></span></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">float</span> score[<span style="color: #800080;">5</span>], sum = <span style="color: #800080;">0</span><span style="color: #000000;">, max, min;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入5名童鞋的成绩：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">score[i]);
    max </span>= min = score[<span style="color: #800080;">0</span><span style="color: #000000;">];
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
    {    
        </span><span style="color: #0000ff;">if</span> (max &lt;=<span style="color: #000000;"> score[i])
            max </span>=<span style="color: #000000;"> score[i];
    </span><span style="color: #0000ff;">if</span> (min &gt;=<span style="color: #000000;"> score[i])
        min </span>=<span style="color: #000000;"> score[i];
}
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">最高分为：%.1f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,max);
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">最低分为：%.1f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, min);
}</span></pre>
</div>
<p><span style="font-size: 14pt;"><strong>代码2：</strong></span></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">float</span> score[<span style="color: #800080;">5]</span><span style="color: #000000;"> ;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i,max, min;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入5名童鞋的成绩：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">score[i]);
    max </span>= min = <span style="color: #800080;">0</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
    {    
        </span><span style="color: #0000ff;">if</span> (score[max] &lt;=<span style="color: #000000;"> score[i])
            max </span>=<span style="color: #000000;"> i;
    </span><span style="color: #0000ff;">if</span> (score[min] &gt;=<span style="color: #000000;"> score[i])
        min </span>=<span style="color: #000000;"> i;
}
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">下标为：%d的成绩为最高分：%.1f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,max,score[max]);
printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">下标为：%d的成绩为最低分：%.1f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, min,score[min]);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】（数组方式）求n名同学的平均成绩</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/23/11919525.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 23 Nov 2019 12:28:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/23/11919525.html</guid><description><![CDATA[<p>原理就不说了</p>
<p><span style="font-size: 16px;"><strong>代码：</strong></span></p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">float</span> score[<span style="color: #800080;">5</span>], sum = <span style="color: #800080;">0</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入5名童鞋的成绩：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">score[i]);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #800080;">5</span>; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
        sum </span>= sum +<span style="color: #000000;"> score[i];

    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">平均成绩为：%.1f\n</span><span style="color: #800000;">"</span>, sum / <span style="color: #800080;">5</span><span style="color: #000000;">);
    
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】编写程序，输出以下图形</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/22/11911341.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 22 Nov 2019 06:26:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/22/11911341.html</guid><description><![CDATA[<p><strong><span style="font-size: 15px;">编写程序输出以下图形：</span></strong></p>
<p><span style="font-size: 18pt;">*</span></p>
<p><span style="font-size: 18pt;">**</span></p>
<p><span style="font-size: 18pt;">***</span></p>
<p><span style="font-size: 18pt;">****</span></p>
<p><span style="font-size: 18pt;">*****</span></p>
<p><strong><span style="font-size: 16px;">代码：</span></strong></p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> i, j;
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">1</span>; i &lt;= <span style="color: #800080;">5</span>; i++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">for</span> (j = <span style="color: #800080;">1</span>; j &lt;= i; j++)<span style="color: #008000;">/*</span><span style="color: #008000;">内层循环控制每行输出*字符的个数</span><span style="color: #008000;">*/</span><span style="color: #000000;">
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">*</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">\n</span><span style="color: #800000;">"</span>);<span style="color: #008000;">/*</span><span style="color: #008000;">输出一行后换行</span><span style="color: #008000;">*/</span><span style="color: #000000;">
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】输入一个年份和月份，输出该月的天数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/22/11910163.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 22 Nov 2019 02:40:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/22/11910163.html</guid><description><![CDATA[<p><span style="font-size: 16px;"><strong>分析：</strong></span></p>
<p>三种类型，</p>
<p>A.2月比较特殊，平年的2月只有28天，而闰年的2月有 29 天；</p>
<p>B.4、6、9、11月；</p>
<p>C.其他1、3、5、7、8、10、12月。</p>
<p><span style="font-size: 18px;"><strong>代码：</strong></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">/*</span><span style="color: #008000;">输入一个年份和月份，输出该月的天数</span><span style="color: #008000;">*/</span><span style="color: #000000;">
#include</span>&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> year, month;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入年和月（用空格分隔）：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d %d</span><span style="color: #800000;">"</span>, &amp;year, &amp;<span style="color: #000000;">month);
    </span><span style="color: #0000ff;">switch</span><span style="color: #000000;"> (month)
    {
    case 2:</span><span style="color: #0000ff;">if</span> (year % <span style="color: #800080;">400</span> == <span style="color: #800080;">0</span> || (year % <span style="color: #800080;">4</span> == <span style="color: #800080;">0</span> &amp;&amp; year % <span style="color: #800080;">100</span> != <span style="color: #800080;">0</span><span style="color: #000000;">))
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">29天！\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">28天！\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">4</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">6</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">9</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">11</span>:printf(<span style="color: #800000;">"</span><span style="color: #800000;">30天！\n</span><span style="color: #800000;">"</span>); <span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">default</span>:printf(<span style="color: #800000;">"</span><span style="color: #800000;">31天！\n</span><span style="color: #800000;">"</span>); <span style="color: #0000ff;">break</span><span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span style="font-size: 16px;"><strong>&nbsp;</strong></span></p>]]></description></item><item><title>【C语言】输入圆的半径，求解圆的周长和面积</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/20/11900505.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 20 Nov 2019 12:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/20/11900505.html</guid><description><![CDATA[<p><span style="font-size: 16px;"><strong>公式：</strong></span></p>
<p>C=2&pi;r</p>
<p>S=&pi;r&sup2;</p>
<p><span style="font-size: 16px;"><strong>代码：</strong></span></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">float</span><span style="color: #000000;"> r,PI;
    PI </span>= <span style="color: #800080;">3.14159</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入圆的半径：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">r);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">圆的周长为%.7f\n圆的面积为%.7f\n</span><span style="color: #800000;">"</span>, <span style="color: #800080;">2</span> * PI*r, PI*r*<span style="color: #000000;">r);


}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>Draw.io--自认为最好用的流程图绘制软件</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/19/11893280.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 19 Nov 2019 14:59:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/19/11893280.html</guid><description><![CDATA[<p>draw.io 是一个强大简洁的在线的绘图网站，支持流程图，UML图，架构图，原型图等图标。支持Github，Google Drive, One drive等网盘同步，并且永久免费。如果觉得使用Web版不方便，draw.io 也提供了多平台的离线桌面版可供下载。</p>
<p>在线版：<a href="http://www.draw.io" target="_blank">https://www.draw.io/</a></p>
<p>PC电脑版：<a href="http://t.cn/Aid48ecf" target="_blank">http://t.cn/Aid48ecf</a></p>
<p><span style="color: #ff0000;"><strong>第一次使用，可以点击&ldquo;language&rdquo;切换为简体中文哦！</strong></span></p>
<p>本文的主要内容如下:</p>
<ul>
<li>draw.io 的核心设计元素</li>
<li>draw.io 的基本操作</li>
<li>使用 draw.io 绘制简单流程图</li>
</ul>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2376" data-height="1756"><img src="//upload-images.jianshu.io/upload_images/1762071-b98d8ff42a0e454d.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-b98d8ff42a0e454d.png" data-original-width="2376" data-original-height="1756" data-original-format="image/png" data-original-filesize="1881451" data-image-index="0" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<h2>核心设计</h2>
<p>在学习基本操作之前我们先来了解一下draw.io的基本设计，对网页的元素有一个直观的认识。有了基本的框架，学习起来就有迹可循了。大部分的绘图应用都离不开三个基本的元素，<strong>图形</strong>，<strong>链接</strong>，<strong>文本</strong>。每个元素都有基本的操作和样式，元素与元素之间又可以进行组合，&ldquo;三生万物&rdquo;，生成各种各样的图表。</p>
<p>首先打开draw.io的网站，加载之后会出现以下的画面。这里是选择图表保存的方式，你可以选择常用的网盘，也可以选择decide later 在之后绘图结束保存的时候在进行选择。</p>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-7fe2ac34b6faa98f.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-7fe2ac34b6faa98f.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="439780" data-image-index="1" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-85c61f38c0a7c971.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-85c61f38c0a7c971.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="974057" data-image-index="2" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<h3>绘图区</h3>
<p>进入应用后，界面非常直观简洁。顶部菜单栏提供各项基本操作，左侧是图形区，中间部分是画布，右侧部分是检查器，根据当前的元素显示不同的操作。</p>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-6111eb50d0ecb46f.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-6111eb50d0ecb46f.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1164176" data-image-index="3" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<h3>快速开始</h3>
<p>整个界面的操作非常直观，如果有相关绘图软件的使用经验，相信已经可以上手绘图了。</p>
<ul>
<li>添加图形
<ul>
<li>通过简单的拖拽，即可在画布上面添加图形。</li>
</ul>
</li>
<li>添加文本
<ul>
<li>在画布上任何位置双击都可以添加文本框，在其中输入文字</li>
</ul>
</li>
<li>添加链接
<ul>
<li>在图形上鼠标悬浮，在图形上会浮现基本的链接点。这里分为外边界蓝色的大箭头和边上的x型焦点。这两种链接方式稍有不同，在后面我会详细说明。</li>
</ul>
</li>
</ul>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-c99bdf9894aeac7f.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-c99bdf9894aeac7f.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1116266" data-image-index="4" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<h2>基本操作</h2>
<h3>移动、多选、复制与删除</h3>
<p>图形、链接、文本这三个元素都可以被选中。可以使用cmd(windows下为ctrl，下同) + A 选择全部元素，也可以使用cmd + click(鼠标左键点击)来进行特定元素的多选。选择元素后可以进行以下操作</p>
<ul>
<li>移动：拖拽</li>
<li>复制： cmd + C</li>
<li>复制并粘贴： cmd + D</li>
<li>删除：delete键</li>
</ul>
<h3>创建链接</h3>
<p>上面提到过在图形上面悬浮鼠标会出现图形的链接点。</p>
<ul>
<li>使用蓝色箭头进行快速链接
<ul>
<li>点击蓝色箭头，会在指定方向创建链接，并在链接末端生成一个完全一致的元素</li>
<li>如果需要控制链接位置，可以按住ctrl键，拖拽蓝色箭头到指定位置</li>
</ul>
</li>
</ul>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-6783772f8eb8358f.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-6783772f8eb8358f.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1185273" data-image-index="5" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-84118515bdccca63.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-84118515bdccca63.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1133218" data-image-index="6" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<ul>
<li>链接图形
<ul>
<li>在悬浮图形后选择x型焦点（会高亮为绿色）可以创建链接，拖拽链接线到目标图形上的x型焦点，完成<strong>固定链接</strong></li>
<li>在悬浮图形后选择x型焦点（会高亮为绿色）可以创建链接，拖拽链接线到目标图形的边上，直到图形外边变成蓝色，松开鼠标，完成<strong>浮动链接</strong></li>
</ul>
</li>
</ul>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-32b35a78656faef2.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-32b35a78656faef2.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1170176" data-image-index="7" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-3a7e79e2db7579e9.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-3a7e79e2db7579e9.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1190515" data-image-index="8" /></div>
</div>
<div class="image-caption">image.png</div>
</div>
<p><strong>固定链接是指链接始终固定在图形的链接点上，不会随着图形移动而变化，浮动链接则会根据图形的移动在图形的边上进行移动自适应。如下图，固定链接始终固定在右边，而浮动链接则从上边移动到了下边</strong><br />
</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-2d7726ac861d598d.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-2d7726ac861d598d.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1171476" data-image-index="9" /></div>







</div>
<div class="image-caption">image.png</div>







</div>
<p>&nbsp;</p>
<h3>图形替换与旋转</h3>
<p>通过快速创建链接的方式可以快速的创建图形并进行链接，但是如果需要不同的图形呢？</p>
<ul>
<li>
<p>替换：从左侧图形库选择需要的图形，拖拽到要替换的图形中央，直到出现了一个替换的褐色标志，松开即可实现替换</p>







<br />
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="2926" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-ea1e3087d156b435.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-ea1e3087d156b435.png" data-original-width="2926" data-original-height="2054" data-original-format="image/png" data-original-filesize="1183701" data-image-index="10" /></div>







</div>
<div class="image-caption">image.png</div>







</div>







</li>
<li>
<p>旋转：选中图形，拖拽上方的旋转箭头即可<br />
[图片上传失败...(image-9629c4-1523589315413)]</p>






</li>







</ul>
<h2>制作流程图</h2>
<h3>基本绘图</h3>
<p>掌握了图形，文本和链接的基本操作，就可以实操来画一个流程图了，检验一下学习效果，如果哪一个部分不够熟练可以温习一下上面的教程</p>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="3200" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-7c71a4319aeb15a8.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-7c71a4319aeb15a8.png" data-original-width="3200" data-original-height="2054" data-original-format="image/png" data-original-filesize="1026888" data-image-index="11" /></div>







</div>
<div class="image-caption">image.png</div>







</div>
<h3>编辑样式</h3>
<p>选中元素在右侧的检查器可以修改元素的颜色，大小，布局等等。请读者自行操作。</p>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="3200" data-height="2054"><img src="//upload-images.jianshu.io/upload_images/1762071-58661b0ae227b284.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/1762071-58661b0ae227b284.png" data-original-width="3200" data-original-height="2054" data-original-format="image/png" data-original-filesize="1114803" data-image-index="12" /></div>







</div>
<div class="image-caption">image.png</div>







</div>
<h3>保存和导出</h3>
<p>在File菜单可以执行保存，并将图片导出成图片或其他格式的文件。</p>
<h2>总结</h2>
<ul>
<li>介绍draw.io的基本组成元素：图形、链接、文本</li>
<li>介绍元素的基本操作</li>
<li>介绍链接的创建方式</li>
<li>介绍元素的替换方法</li>







</ul>
<p>实际上借助draw.io的模板库还可以绘制更多种类的图，包括UML图，结构图等等。限于篇幅本文就不进行介绍了，但是总体还是离不开本文介绍的基本操作。希望大家阅读完本文能够有所收获，绘制简洁大方的图表，提升自己的软实力！</p>
<div>&nbsp;</div>
<div class="_1kCBjS">
<div class="_18vaTa">
<div class="_3BUZPB">
<div class="_2Bo4Th">&nbsp;</div>






<span class="_1LOh_5"><br /></span></div>





</div>





</div>]]></description></item><item><title>【C语言】极坐标转换为直角坐标</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/18/11885456.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 18 Nov 2019 13:24:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/18/11885456.html</guid><description><![CDATA[<div class="hljs-ln-code">
<div class="hljs-ln-line">
<div class="hljs-ln-code">
<div class="hljs-ln-line"><span class="hljs-comment">写一个程序把极坐标(r,&theta;) (&theta;之单位为度)转换为直角坐标( X,Y)。</span></div>
<div class="hljs-ln-line"><span class="hljs-comment">转换公式是<span class="hljs-comment">x=r.cos&theta;&nbsp;<span class="hljs-comment">y=r.sin&theta;</span></span></span></div>
</div>
<p class="hljs-ln-line"><span class="hljs-comment">程序输出；输出转换后的坐标。</span></p>
<p class="hljs-ln-line">&nbsp;</p>
<p class="hljs-ln-line"><span class="hljs-comment">弧度和角度的换算关系如下：</span></p>
<p class="hljs-ln-line"><span class="hljs-comment">1弧度=180/&pi;度</span></p>
<p class="hljs-ln-line"><span class="hljs-comment">1度=&pi;/180弧度</span></p>
<p class="hljs-ln-line"><span class="hljs-comment">也就是说，180度=&pi; 弧度</span></p>
<p class="hljs-ln-line">&nbsp;</p>
<p class="hljs-ln-line"><span class="hljs-comment">角度转弧度的计算，角度angle乘圆周率PI除以180.0得弧度。</span></p>
<p class="hljs-ln-line">代码：</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
#define PI 3.1415926

int main()
{
    float r, angle, x, y;
    printf("请输入极坐标(r,&theta;)的r与&theta;\n");
    scanf_s("%f %f", &amp;r, &amp;angle);
    x = r * cos(angle * PI / 180);
    y = r * sin(angle * PI / 180);
    printf("直角坐标为（%f , %f)\n", x, y);
    return 0;
}</pre>
</div>
<p>&nbsp;</p>
</div>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】计算N名同学的某门功课的平均成绩</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/18/11885279.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 18 Nov 2019 13:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/18/11885279.html</guid><description><![CDATA[<p><span style="font-size: 18px;"><strong>分析：</strong></span></p>
<p><span style="font-size: 16px;">循环输入number只童鞋的成绩，累加为sum，最后输出sum/number即可！</span></p>
<p><span style="font-size: 18px;"><strong>代码：</strong></span></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">float</span> sum = <span style="color: #800080;">0</span>, score;<span style="color: #008000;">//</span><span style="color: #008000;">score表示某个童鞋的成绩，sum要为0哦！</span>
    <span style="color: #0000ff;">int</span> n,number;<span style="color: #008000;">//</span><span style="color: #008000;">n表示童鞋的次序</span>
    printf(<span style="color: #800000;">"</span><span style="color: #800000;">请输入有几只童鞋：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span> ,&amp; number);<span style="color: #008000;">//</span><span style="color: #008000;">输入只数</span>
    printf(<span style="color: #800000;">"</span><span style="color: #800000;">请输入%d只童鞋的成绩：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,number);
    </span><span style="color: #0000ff;">for</span> (n = <span style="color: #800080;">1</span>; n &lt;=number; n = n + <span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        
        scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;score);<span style="color: #008000;">//</span><span style="color: #008000;">这里输入童鞋们的成绩哟！</span>
        sum = sum +<span style="color: #000000;"> score;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">这些童鞋平均成绩为%.1f\n</span><span style="color: #800000;">"</span>, sum /<span style="color: #000000;"> number);
    
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】（for循环嵌套）找出1000以内的水仙花数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/18/11884887.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 18 Nov 2019 12:36:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/18/11884887.html</guid><description><![CDATA[<p><strong>什么是水仙花数?</strong></p>
<p>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。</p>
<p>分析：</p>
<p>根据定义可知：</p>
<p>a*a*a+b*b*b+c*c*c=a*100+b*10+c</p>
<p>a&isin;[1,9]&nbsp; &nbsp; &nbsp;b&isin;[0,9]&nbsp; &nbsp; c&isin;[0,9]&nbsp; &nbsp;(这里可以联想一下数字仪表盘，笨办法╭（╯_╰）╭)</p>
<p><span style="font-size: 18px;"><strong>代码：</strong></span></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m, a, b, c;
    </span><span style="color: #0000ff;">for</span>(a=<span style="color: #800080;">1</span>;a&lt;=<span style="color: #800080;">9</span>;a=a+<span style="color: #800080;">1</span>)<span style="color: #008000;">//</span><span style="color: #008000;">循环1，百位</span>
        <span style="color: #0000ff;">for</span>(b=<span style="color: #800080;">0</span>;b&lt;=<span style="color: #800080;">9</span>;b=b+<span style="color: #800080;">1</span>)<span style="color: #008000;">//</span><span style="color: #008000;">循环2，十位</span>
            <span style="color: #0000ff;">for</span>(c=<span style="color: #800080;">0</span>;c&lt;=<span style="color: #800080;">9</span>;c=c+<span style="color: #800080;">1</span>)<span style="color: #008000;">//</span><span style="color: #008000;">循环3，个位</span>
<span style="color: #000000;">            {
                m </span>= a*<span style="color: #800080;">100</span>+b*<span style="color: #800080;">10</span>+<span style="color: #000000;">c;
                </span><span style="color: #0000ff;">if</span> (m == a * a * a + b * b * b + c * c *<span style="color: #000000;"> c)
                    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
            }
    
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】判断某一正整数是否为完数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/18/11884657.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 18 Nov 2019 11:59:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/18/11884657.html</guid><description><![CDATA[<p><span style="font-size: 18px;"><strong>什么是完数？</strong></span></p>
<p>如果一个数等于它的因子之和，则称该数为&ldquo;完数&rdquo;（或&ldquo;完全数&rdquo;)。</p>
<p>例如，6的因子为1、2、3，而 6=1+2+3，因此6是&ldquo;完数&rdquo;。</p>
<p>程序框图：m</p>
<p><span style="font-size: 18px;"><strong>&nbsp;问题分析</strong></span></p>
<p>根据完数的定义，解决本题的关键是计算出所选取的整数m（m的取值范围不固定）的因子（因子就是所有可以整除这个数的数），将各因子累加到变量sum (记录所有因子之和），若sum等于m，则可确认m为完数，反之则不是完数。</p>
<p><span style="font-size: 18px;"><strong>代码：</strong></span></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> m, n, sum = <span style="color: #800080;">0</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一个正整数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">m);
    </span><span style="color: #0000ff;">for</span> (n = <span style="color: #800080;">1</span>; n &lt; m - <span style="color: #800080;">1</span>; n = n + <span style="color: #800080;">1</span><span style="color: #000000;">)
        </span><span style="color: #0000ff;">if</span> (m % n == <span style="color: #800080;">0</span><span style="color: #000000;">)
            sum </span>= sum +<span style="color: #000000;"> n;
    </span><span style="color: #0000ff;">if</span> (m ==<span style="color: #000000;"> sum)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">该数是完数\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">该数不是完数\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>
<p><a href="https://sm.ms/image/Xyb56CK7zfUnE2p" target="_blank"><img src="https://i.loli.net/2019/11/18/Xyb56CK7zfUnE2p.jpg" alt="" /></a></p>]]></description></item><item><title>C 语言实例 -求分数数列1/2+2/3+3/5+5/8+...的前n项和</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/16/11873861.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 16 Nov 2019 12:47:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/16/11873861.html</guid><description><![CDATA[<p>程序分析：抓住分子与分母的变化规律：<br />分子a：1,2,3,5,8,13,21,34,55,89,144...<br />分母b：2,3,5,8,13,21,34,55,89,144,233...<br />分母b把数赋给了分子a，同时自己与分母的和(a+b)变成新分子赋给分母b。</p>
<p><span style="font-size: 16px;"><strong>代码：</strong></span></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">1</span>, b = <span style="color: #800080;">2</span><span style="color: #000000;">, i, j, n;
    </span><span style="color: #0000ff;">float</span> s = <span style="color: #800080;">0.0</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入项数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">n);
    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">1</span>; i &lt;= n; i = i + <span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        s </span>= s + 1.0 * a /<span style="color: #000000;"> b;
        j </span>=<span style="color: #000000;"> a; 
        a </span>=<span style="color: #000000;"> b;
        b </span>= b +<span style="color: #000000;"> j;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span><span style="color: #000000;">, s);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C 语言实例 - 斐波那契数列</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/16/11873031.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 16 Nov 2019 11:17:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/16/11873031.html</guid><description><![CDATA[<p>斐波那契数列指的是这样一个数列 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233，377，610，987，1597，2584，4181，6765，10946，17711，28657，46368........</p>
<p>这个数列从第3项开始，每一项都等于前两项之和。</p>
<p><span style="font-size: 16px;"><strong>来历</strong></span></p>
<div class="para">斐波那契数列又因数学家列昂纳多&middot;斐波那契以兔子繁殖为例子而引入，故又称为&ldquo;兔子数列&rdquo;。</div>
<div class="para">一般而言，兔子在出生两个月后，就有繁殖能力，一对兔子每个月能生出一对小兔子来。如果所有兔子都不死，那么一年以后可以繁殖多少对兔子？</div>
<div class="para">我们不妨拿新出生的一对小兔子分析一下：</div>
<div class="para">第一个月小兔子没有繁殖能力，所以还是一对</div>
<div class="para">两个月后，生下一对小兔对数共有两对</div>
<div class="para">三个月以后，老兔子又生下一对，因为小兔子还没有繁殖能力，所以一共是三对</div>
<div class="para">－－－－－－</div>
<div class="para">依次类推可以列出下表：</div>
<table class="table-view log-set-param">
<tbody>
<tr>
<td>
<div class="para">经过月数</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">2</div>
</td>
<td>
<div class="para">3</div>
</td>
<td>
<div class="para">4</div>
</td>
<td>
<div class="para">5</div>
</td>
<td>
<div class="para">6</div>
</td>
<td>
<div class="para">7</div>
</td>
<td>
<div class="para">8</div>
</td>
<td>
<div class="para">9</div>
</td>
<td>
<div class="para">10</div>
</td>
<td>
<div class="para">11</div>
</td>
<td>
<div class="para">12</div>
</td>
<td>&hellip;</td>
</tr>
<tr>
<td>
<div class="para">幼仔对数</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">0</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">2</div>
</td>
<td>
<div class="para">3</div>
</td>
<td>
<div class="para">5</div>
</td>
<td>
<div class="para">8</div>
</td>
<td>
<div class="para">13</div>
</td>
<td>
<div class="para">21</div>
</td>
<td>
<div class="para">34</div>
</td>
<td>
<div class="para">55</div>
</td>
<td>&hellip;</td>
</tr>
<tr>
<td>
<div class="para">成兔对数</div>
</td>
<td>
<div class="para">0</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">2</div>
</td>
<td>
<div class="para">3</div>
</td>
<td>
<div class="para">5</div>
</td>
<td>
<div class="para">8</div>
</td>
<td>
<div class="para">13</div>
</td>
<td>
<div class="para">21</div>
</td>
<td>
<div class="para">34</div>
</td>
<td>
<div class="para">55</div>
</td>
<td>
<div class="para">89</div>
</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>
<div class="para">总体对数</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">1</div>
</td>
<td>
<div class="para">2</div>
</td>
<td>
<div class="para">3</div>
</td>
<td>
<div class="para">5</div>
</td>
<td>
<div class="para">8</div>
</td>
<td>
<div class="para">13</div>
</td>
<td>
<div class="para">21</div>
</td>
<td>
<div class="para">34</div>
</td>
<td>
<div class="para">55</div>
</td>
<td>
<div class="para">89</div>
</td>
<td>
<div class="para">144</div>
</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<div class="para">幼仔对数=前月成兔对数</div>
<div class="para">成兔对数=前月成兔对数+前月幼仔对数</div>
<div class="para">总体对数=本月成兔对数+本月幼仔对数</div>
<div class="para">可以看出幼仔对数、成兔对数、总体对数都构成了一个数列。这个数列有关十分明显的特点，那是：前面相邻两项之和，构成了后一项。</div>
<div class="para">
<div class="para-title level-3">
<h3 class="title-text">递推公式</h3>
</div>
<div class="para">斐波那契数列：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...</div>
<div class="para">如果设F(n）为该数列的第n项（n&isin;N*），那么这句话可以写成如下形式：:F(n)=F(n-1)+F(n-2)</div>
<div class="para">显然这是一个线性递推数列。</div>
<div class="para"><span style="font-size: 18px;"><strong>流程图：</strong></span></div>
<div class="para">&nbsp;</div>
</div>
<p><a href="https://sm.ms/image/lNjHyIbEu9PLo3e" target="_blank"><img src="https://i.loli.net/2019/11/16/lNjHyIbEu9PLo3e.jpg" alt="" /></a></p>
<h2 class="example">实例 - 输出指定数量的斐波那契数列</h2>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;

<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> i, n, f1 = 1, f2 = <span style="color: #800080;">1</span>, f;<span style="color: #008000;">//</span><span style="color: #008000;">定义变量</span>
<span style="color: #000000;">
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输出几项: </span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;n);<span style="color: #008000;">//</span><span style="color: #008000;">输入你想输出的项数</span>
<span style="color: #000000;">
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">斐波那契数列: </span><span style="color: #800000;">"</span><span style="color: #000000;">);

    </span><span style="color: #0000ff;">for</span> (i = <span style="color: #800080;">1</span>; i &lt;= n; i=i+<span style="color: #800080;">1</span>)<span style="color: #008000;">//</span><span style="color: #008000;">for循环</span>
<span style="color: #000000;">    {
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d, </span><span style="color: #800000;">"</span><span style="color: #000000;">, f1);
        f </span>= f1 +<span style="color: #000000;"> f2;
        f1 </span>=<span style="color: #000000;"> f2;
        f2 </span>=<span style="color: #000000;"> f;
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>查看星号明文密码</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/15/11867066.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 15 Nov 2019 07:37:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/15/11867066.html</guid><description><![CDATA[<p>（部分浏览器不支持，推荐使用chome、火狐、搜狗、360安全浏览器，IE什么的趁早扔掉）</p>
<p>打开含有密码的页面，如下图：</p>
<p><a class="has-img-a" href="http://www.coaadmin.cn/wp-content/uploads/2017/12/2017121107333266.png"><img class="aligncenter wp-image-2448 size-full" title="查看星号明文密码-逸香阁" src="http://www.coaadmin.cn/wp-content/uploads/2017/12/2017121107333266.png" alt="查看星号明文密码-逸香阁" /></a></p>
<p>在含有密码的输入框处单机鼠标右键，选择&ldquo;审查元素&rdquo;</p>
<p><a class="has-img-a" href="http://www.coaadmin.cn/wp-content/uploads/2017/12/2017121107495860.png"><img class="aligncenter wp-image-2449 size-full" title="查看星号明文密码-逸香阁" src="http://www.coaadmin.cn/wp-content/uploads/2017/12/2017121107495860.png" alt="查看星号明文密码-逸香阁" /></a></p>
<p>在弹出的窗口中找到 type=&rdquo;password&rdquo;</p>
<p><a class="has-img-a" href="http://www.coaadmin.cn/wp-content/uploads/2017/12/2018110202392967.png"><img class="aligncenter size-medium wp-image-2597" title="查看星号明文密码-逸香阁" src="http://www.coaadmin.cn/wp-content/uploads/2017/12/2018110202392967.png" alt="查看星号明文密码-逸香阁" /></a></p>
<p>&nbsp;</p>
<p>将双引号中的password改为text即可看到明文密码</p>
<p><a class="has-img-a" href="http://www.coaadmin.cn/wp-content/uploads/2017/12/2018110202404159.png"><img class="aligncenter size-medium wp-image-2598" title="查看星号明文密码-逸香阁" src="http://www.coaadmin.cn/wp-content/uploads/2017/12/2018110202404159.png" alt="查看星号明文密码-逸香阁" /></a></p>
<p>&nbsp;</p>]]></description></item><item><title>【HTML】输入密码访问</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/15/11866963.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 15 Nov 2019 07:27:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/15/11866963.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span><span style="background-color: #f5f5f5; color: #000000;">
(</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;">(){
    </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;">(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">{{ page.password }}</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">){
        </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (prompt(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">请输入文章密码</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">) </span><span style="background-color: #f5f5f5; color: #000000;">!==</span> <span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">{{ page.password }}</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">){
            alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">密码错误！</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);
            history.back();
        }
    }
})();
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">代码一：
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text/javascript"</span><span style="color: #0000ff;">&gt;</span>   
<span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> password() {   
</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> testV </span><span style="background-color: #f5f5f5; color: #000000;">=</span> <span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">;   
</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> pass1 </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> prompt(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">请输入密码</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">''</span><span style="background-color: #f5f5f5; color: #000000;">);   
</span><span style="background-color: #f5f5f5; color: #0000ff;">while</span><span style="background-color: #f5f5f5; color: #000000;"> (testV </span><span style="background-color: #f5f5f5; color: #000000;">&lt;</span> <span style="background-color: #f5f5f5; color: #000000;">3</span><span style="background-color: #f5f5f5; color: #000000;">) {   
</span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (</span><span style="background-color: #f5f5f5; color: #000000;">!</span><span style="background-color: #f5f5f5; color: #000000;">pass1)   
history.go(</span><span style="background-color: #f5f5f5; color: #000000;">-</span><span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">);   
</span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (pass1 </span><span style="background-color: #f5f5f5; color: #000000;">==</span> <span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">123</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">) {</span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;">初始密码123   </span>
<span style="background-color: #f5f5f5; color: #000000;">alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">密码正确!</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);   
</span><span style="background-color: #f5f5f5; color: #0000ff;">break</span><span style="background-color: #f5f5f5; color: #000000;">;   
}   
testV</span><span style="background-color: #f5f5f5; color: #000000;">+=</span><span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">;   
</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> pass1 </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;">   
prompt(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">密码错误!请重新输入:</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);   
}   
</span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (pass1</span><span style="background-color: #f5f5f5; color: #000000;">!=</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">password</span><span style="background-color: #f5f5f5; color: #000000;">"</span> <span style="background-color: #f5f5f5; color: #000000;">&amp;</span><span style="background-color: #f5f5f5; color: #000000;"> testV </span><span style="background-color: #f5f5f5; color: #000000;">==</span><span style="background-color: #f5f5f5; color: #000000;">3</span><span style="background-color: #f5f5f5; color: #000000;">)   
history.go(</span><span style="background-color: #f5f5f5; color: #000000;">-</span><span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">);   
</span><span style="background-color: #f5f5f5; color: #0000ff;">return</span> <span style="background-color: #f5f5f5; color: #000000;">"</span> <span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">;   
}   
document.write(password());   
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">  
 
 
代码二：
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text/javascript"</span><span style="color: #0000ff;">&gt;</span>   
<span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> password() {   
</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> testV </span><span style="background-color: #f5f5f5; color: #000000;">=</span> <span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">;   
</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> pass1 </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> prompt(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">Sorry,该页只限熟人浏览,请输入密码:</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">''</span><span style="background-color: #f5f5f5; color: #000000;">);   
</span><span style="background-color: #f5f5f5; color: #0000ff;">while</span><span style="background-color: #f5f5f5; color: #000000;"> (testV </span><span style="background-color: #f5f5f5; color: #000000;">&lt;</span> <span style="background-color: #f5f5f5; color: #000000;">3</span><span style="background-color: #f5f5f5; color: #000000;">) {   
</span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (</span><span style="background-color: #f5f5f5; color: #000000;">!</span><span style="background-color: #f5f5f5; color: #000000;">pass1)    
history.go(</span><span style="background-color: #f5f5f5; color: #000000;">-</span><span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">);   
</span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (pass1 </span><span style="background-color: #f5f5f5; color: #000000;">==</span> <span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">123</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">) {</span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;">初始密码123   </span>
<span style="background-color: #f5f5f5; color: #000000;">alert(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">一看你就是自己人，口令正确!</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">);   
window.location.href</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">http://www.aeink.com</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;">修改需要密码认证的网页   </span>
<span style="background-color: #f5f5f5; color: #0000ff;">break</span><span style="background-color: #f5f5f5; color: #000000;">;   
}    
testV</span><span style="background-color: #f5f5f5; color: #000000;">+=</span><span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">;   
</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> pass1 </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;">    
prompt(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">朋友，密码不对！:(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #000000;">''</span><span style="background-color: #f5f5f5; color: #000000;">);   
}   
</span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (pass1</span><span style="background-color: #f5f5f5; color: #000000;">!=</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">password</span><span style="background-color: #f5f5f5; color: #000000;">"</span> <span style="background-color: #f5f5f5; color: #000000;">&amp;</span><span style="background-color: #f5f5f5; color: #000000;"> testV </span><span style="background-color: #f5f5f5; color: #000000;">==</span><span style="background-color: #f5f5f5; color: #000000;">3</span><span style="background-color: #f5f5f5; color: #000000;">)    
history.go(</span><span style="background-color: #f5f5f5; color: #000000;">-</span><span style="background-color: #f5f5f5; color: #000000;">1</span><span style="background-color: #f5f5f5; color: #000000;">);   
</span><span style="background-color: #f5f5f5; color: #0000ff;">return</span> <span style="background-color: #f5f5f5; color: #000000;">"</span> <span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">;   
}    
document.write(password());   
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">  
 
 
 
代码三：
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text/javascript"</span><span style="color: #0000ff;">&gt;</span><span style="background-color: #f5f5f5; color: #000000;">   
loopy()   
</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> loopy() {   
</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> sWord </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;">""</span>  
<span style="background-color: #f5f5f5; color: #0000ff;">while</span><span style="background-color: #f5f5f5; color: #000000;"> (sWord </span><span style="background-color: #f5f5f5; color: #000000;">!=</span> <span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">123</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">) {</span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;">初始密码123   </span>
<span style="background-color: #f5f5f5; color: #000000;">sWord </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> prompt(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">输入正确密码才能登陆!</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">)   
}   
alert(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">AH&hellip;欢迎光临！</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">)   
}   
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">  
 
 
把上述代码加到网页头部模版 /head 标签前即可.</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】赋值运算中的类型转换</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/15/11866616.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 15 Nov 2019 06:53:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/15/11866616.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> a, b;
    </span><span style="color: #0000ff;">double</span> x = <span style="color: #800080;">1.54</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">char</span><span style="color: #000000;"> ch;
    a </span>=<span style="color: #000000;"> x;
    x </span>= <span style="color: #800080;">12</span><span style="color: #000000;">;
    b </span>= <span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    ch </span>= <span style="color: #800080;">356</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">a=%d\nx=%f\nb=%d\nch=\'%c\'\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,a,x,b,ch);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】逗号运算符的使用举例</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/15/11865137.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 15 Nov 2019 03:10:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/15/11865137.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span> main(<span style="color: #0000ff;">void</span><span style="color: #000000;">)
{
    </span><span style="color: #0000ff;">int</span> a = <span style="color: #800080;">1</span>, b = <span style="color: #800080;">2</span>, c = <span style="color: #800080;">4</span><span style="color: #000000;">, y, z;
    y </span>= a + b, a + c;<span style="color: #008000;">/*</span><span style="color: #008000;">由y=a+b和a+c组成的逗号表达式</span><span style="color: #008000;">*/</span><span style="color: #000000;">
    z </span>= (a + b, a + c);<span style="color: #008000;">/*</span><span style="color: #008000;">将逗号表达式a+b，a+c的值赋值给变量z</span><span style="color: #008000;">*/</span><span style="color: #000000;">
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">y=%d,z=%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, y, z);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;

}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】输入一个正整数，判断其是否为素数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/13/11853895.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 13 Nov 2019 14:46:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/13/11853895.html</guid><description><![CDATA[<pre><code><span style="font-family: 黑体;"><strong><span style="font-size: 18px;">素数的定义：</span></strong></span>
素数（prime number）又称质数，有无限个。
素数定义为在大于1的自然数中，除了1和它本身以外不再有其他因数，这样的数称为素数。<br /><span style="font-size: 16px;"><strong><br />代码1：</strong></span></code></pre>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m, n;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一个正整数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">m);
    
    </span><span style="color: #0000ff;">for</span> (n=<span style="color: #800080;">2</span>; n &lt; m - <span style="color: #800080;">1</span>; n = n + <span style="color: #800080;">1</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">if</span> (m % n == <span style="color: #800080;">0</span><span style="color: #000000;">)
        </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (n &lt;<span style="color: #000000;"> m)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d不是素数\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,m);
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d是素数\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,m);
}</span></pre>
</div>
<p>&nbsp;代码2：</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m, n;
    n</span>=<span style="color: #800080;">2</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一个正整数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">m);
    </span><span style="color: #0000ff;">while</span> (n &lt; m - <span style="color: #800080;">1</span><span style="color: #000000;">)
    
    </span><span style="color: #0000ff;">if</span> (m % n == <span style="color: #800080;">0</span><span style="color: #000000;">)
        </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    n </span>= n + <span style="color: #800080;">1</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (n &lt;<span style="color: #000000;"> m)
        
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d不是素数\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d是素数\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,m);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】找出1000以内的水仙花数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/13/11853683.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 13 Nov 2019 14:15:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/13/11853683.html</guid><description><![CDATA[<p><strong>什么是水仙花数?</strong></p>
<p>水仙花数是指一个 3 位数，它的每个位上的数字的 3次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。</p>
<p>代码1：</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m,a, b, c;
    m </span>= <span style="color: #800080;">100</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">1000以内水仙花数为：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">while</span> (m &lt; <span style="color: #800080;">1000</span><span style="color: #000000;">)
    {
        a </span>= m / <span style="color: #800080;">100</span><span style="color: #000000;">;
        b </span>= m / <span style="color: #800080;">10</span> % <span style="color: #800080;">10</span><span style="color: #000000;">;
        c </span>= m % <span style="color: #800080;">10</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">if</span> (m = a * a * a + b * b * b + c * c *<span style="color: #000000;"> c)
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
        m </span>= m + <span style="color: #800080;">1</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p>代码2：</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m,a, b, c;
    
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">1000以内水仙花数为：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span>(m = <span style="color: #800080;">100</span>;m &lt; <span style="color: #800080;">1000</span>;m = m + <span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        a </span>= m / <span style="color: #800080;">100</span><span style="color: #000000;">;
        b </span>= m / <span style="color: #800080;">10</span> % <span style="color: #800080;">10</span><span style="color: #000000;">;
        c </span>= m % <span style="color: #800080;">10</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">if</span> (m = a * a * a + b * b * b + c * c *<span style="color: #000000;"> c)
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
        
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】求1到100的和</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/13/11847689.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 13 Nov 2019 03:28:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/13/11847689.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span> sum = <span style="color: #800080;">0</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">int</span> number = <span style="color: #800080;">1</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">int</span> i = <span style="color: #800080;">1</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">while</span> (i &lt;= <span style="color: #800080;">100</span><span style="color: #000000;">)
    {
        sum </span>= sum +<span style="color: #000000;"> number;
        number </span>= number + <span style="color: #800080;">1</span><span style="color: #000000;">;
        i </span>= i + <span style="color: #800080;">1</span><span style="color: #000000;">;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">sum=%d</span><span style="color: #800000;">"</span><span style="color: #000000;">,sum);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
} </span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C do...while 循环</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834237.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 11 Nov 2019 05:11:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834237.html</guid><description><![CDATA[<p>不像&nbsp;<strong>for</strong>&nbsp;和&nbsp;<strong>while</strong>&nbsp;循环，它们是在循环头部测试循环条件。在 C 语言中，<strong>do...while</strong>&nbsp;循环是在循环的尾部检查它的条件。</p>
<p><strong>do...while</strong>&nbsp;循环与 while 循环类似，但是 do...while 循环会确保至少执行一次循环。</p>
<h2 class="tutheader">语法</h2>
<p>C 语言中&nbsp;<strong>do...while</strong>&nbsp;循环的语法：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">do</span><span style="color: #000000;">
{
   statement(s);

}<br /><br /></span><span style="color: #0000ff;">while</span>( condition );</pre>
</div>
<p>请注意，条件表达式出现在循环的尾部，所以循环中的 statement(s) 会在条件被测试之前至少执行一次。</p>
<p>如果条件为真，控制流会跳转回上面的 do，然后重新执行循环中的 statement(s)。这个过程会不断重复，直到给定条件变为假为止。</p>
<h2 class="tutheader">流程图</h2>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/09/B2FE1EC7-6477-439B-8F50-82D537673799.jpg" alt="C 中的 do...while 循环" /></p>
<h2 class="tutheader">实例</h2>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main ()
{
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 局部变量定义 </span><span style="color: #008000;">*/</span>
   <span style="color: #0000ff;">int</span> a = <span style="color: #800080;">10</span><span style="color: #000000;">;

   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> do 循环执行 </span><span style="color: #008000;">*/</span>
   <span style="color: #0000ff;">do</span><span style="color: #000000;">
   {
       printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">a 的值： %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a);
       a </span>= a + <span style="color: #800080;">1</span><span style="color: #000000;">;
   }</span><span style="color: #0000ff;">while</span>( a &lt; <span style="color: #800080;">20</span><span style="color: #000000;"> );
 
   </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C for 循环</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834233.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 11 Nov 2019 05:09:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834233.html</guid><description><![CDATA[<p><strong>for</strong>&nbsp;循环允许您编写一个执行指定次数的循环控制结构。</p>
<h2 class="tutheader">语法</h2>
<p>C 语言中&nbsp;<strong>for</strong>&nbsp;循环的语法：</p>
<div class="example">
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">for</span><span style="color: #000000;"> ( init; condition; increment )
{
 statement(s); 
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>
<p>下面是 for 循环的控制流：</p>
<ol class="list">
<li><strong>init</strong>&nbsp;会首先被执行，且只会执行一次。这一步允许您声明并初始化任何循环控制变量。您也可以不在这里写任何语句，只要有一个分号出现即可。</li>
<li>接下来，会判断&nbsp;<strong>condition</strong>。如果为真，则执行循环主体。如果为假，则不执行循环主体，且控制流会跳转到紧接着 for 循环的下一条语句。</li>
<li>在执行完 for 循环主体后，控制流会跳回上面的&nbsp;<strong>increment</strong>&nbsp;语句。该语句允许您更新循环控制变量。该语句可以留空，只要在条件后有一个分号出现即可。</li>
<li>条件再次被判断。如果为真，则执行循环，这个过程会不断重复（循环主体，然后增加步值，再然后重新判断条件）。在条件变为假时，for 循环终止。</li>
</ol>
<h2 class="tutheader">流程图</h2>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/09/69978E61-0BA5-4D66-A115-D3AD15B16F47.jpg" alt="C 中的 for 循环" /></p>
<h2 class="tutheader">实例</h2>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span><span style="color: #000000;"> main ()
 {
 </span><span style="color: #008000;">/*</span><span style="color: #008000;"> for 循环执行 </span><span style="color: #008000;">*/</span> 
<span style="color: #0000ff;">for</span>( <span style="color: #0000ff;">int</span> a = <span style="color: #800080;">10</span>; a &lt; <span style="color: #800080;">20</span>; a = a + <span style="color: #800080;">1</span><span style="color: #000000;"> )
 {
 printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">a 的值： %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a); 
}
 </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
 }</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
</div>]]></description></item><item><title>C while 循环</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834228.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 11 Nov 2019 05:07:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834228.html</guid><description><![CDATA[<p>只要给定的条件为真，C 语言中的&nbsp;<strong>while</strong>&nbsp;循环语句会重复执行一个目标语句。</p>
<h2 class="tutheader">语法</h2>
<p>C 语言中&nbsp;<strong>while</strong>&nbsp;循环的语法：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">while</span><span style="color: #000000;">(condition)
{
   statement(s);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>在这里，<strong>statement(s)</strong>&nbsp;可以是一个单独的语句，也可以是几个语句组成的代码块。</p>
<p><strong>condition</strong>&nbsp;可以是任意的表达式，当为任意非零值时都为 true。当条件为 true 时执行循环。 当条件为 false 时，退出循环，程序流将继续执行紧接着循环的下一条语句。</p>
<h2 class="tutheader">流程图</h2>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/09/BFE13459-897C-41A5-AE94-D71B0CA50FB6.jpg" alt="C 中的 while 循环" /></p>
<p>在这里，<em>while</em>&nbsp;循环的关键点是循环可能一次都不会执行。当条件为 false 时，会跳过循环主体，直接执行紧接着 while 循环的下一条语句。</p>
<h2 class="tutheader">实例</h2>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main ()
{
   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 局部变量定义 </span><span style="color: #008000;">*/</span>
   <span style="color: #0000ff;">int</span> a = <span style="color: #800080;">10</span><span style="color: #000000;">;

   </span><span style="color: #008000;">/*</span><span style="color: #008000;"> while 循环执行 </span><span style="color: #008000;">*/</span>
   <span style="color: #0000ff;">while</span>( a &lt; <span style="color: #800080;">20</span><span style="color: #000000;"> )
   {
      printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">a 的值： %d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, a);
      a</span>++<span style="color: #000000;">;
   }
 
   </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C 循环</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834220.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 11 Nov 2019 05:05:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834220.html</guid><description><![CDATA[<div class="tutintro">
<p>有的时候，我们可能需要多次执行同一块代码。一般情况下，语句是按顺序执行的：函数中的第一个语句先执行，接着是第二个语句，依此类推。</p>
<p>编程语言提供了更为复杂执行路径的多种控制结构。</p>
<p>循环语句允许我们多次执行一个语句或语句组，下面是大多数编程语言中循环语句的流程图：</p>
<img src="https://www.runoob.com/wp-content/uploads/2015/12/loop.png" alt="循环结构" /></div>
<h2 class="tutheader">循环类型</h2>
<p>C 语言提供了以下几种循环类型。点击链接查看每个类型的细节。</p>
<table class="reference notranslate">
<tbody>
<tr><th>循环类型</th><th>描述</th></tr>
<tr>
<td><a title="C 中的 while 循环" href="https://www.runoob.com/cprogramming/c-while-loop.html">while 循环</a></td>
<td>当给定条件为真时，重复语句或语句组。它会在执行循环主体之前测试条件。</td>
</tr>
<tr>
<td><a title="C 中的 for 循环" href="https://www.runoob.com/cprogramming/c-for-loop.html">for 循环</a></td>
<td>多次执行一个语句序列，简化管理循环变量的代码。</td>
</tr>
<tr>
<td><a title="C 中的 do...while 循环" href="https://www.runoob.com/cprogramming/c-do-while-loop.html">do...while 循环</a></td>
<td>除了它是在循环主体结尾测试条件外，其他与 while 语句类似。</td>
</tr>
<tr>
<td><a title="C 中的嵌套循环" href="https://www.runoob.com/cprogramming/c-nested-loops.html">嵌套循环</a></td>
<td>您可以在 while、for 或 do..while 循环内使用一个或多个循环。</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 class="tutheader">循环控制语句</h2>
<p>循环控制语句改变你代码的执行顺序。通过它你可以实现代码的跳转。</p>
<p>C 提供了下列的循环控制语句。点击链接查看每个语句的细节。</p>
<table class="reference notranslate">
<tbody>
<tr><th>控制语句</th><th>描述</th></tr>
<tr>
<td><a title="C 中的 break 语句" href="https://www.runoob.com/cprogramming/c-break-statement.html">break 语句</a></td>
<td>终止<strong>循环</strong>或&nbsp;<strong>switch</strong>&nbsp;语句，程序流将继续执行紧接着循环或 switch 的下一条语句。</td>

</tr>
<tr>
<td><a title="C 中的 continue 语句" href="https://www.runoob.com/cprogramming/c-continue-statement.html">continue 语句</a></td>
<td>告诉一个循环体立刻停止本次循环迭代，重新开始下次循环迭代。</td>

</tr>
<tr>
<td><a title="C 中的 goto 语句" href="https://www.runoob.com/cprogramming/c-goto-statement.html">goto 语句</a></td>
<td>将控制转移到被标记的语句。但是不建议在程序中使用 goto 语句。</td>

</tr>

</tbody>

</table>
<p>&nbsp;</p>
<h2 class="tutheader">无限循环</h2>
<p>如果条件永远不为假，则循环将变成无限循环。<strong>for</strong>&nbsp;循环在传统意义上可用于实现无限循环。由于构成循环的三个表达式中任何一个都不是必需的，您可以将某些条件表达式留空来构成一个无限循环。</p>
<div class="example">
<h2 class="example">实例</h2>
<div class="example_code">
<div class="hl-main">
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main () 
{
 </span><span style="color: #0000ff;">for</span><span style="color: #000000;">( ; ; )
 {
 printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">该循环会永远执行下去！\n</span><span style="color: #800000;">"</span><span style="color: #000000;">); 
}
 </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
 }</span></pre>
</div>
<p>&nbsp;</p>
</div>

</div>

</div>
<p>当条件表达式不存在时，它被假设为真。您也可以设置一个初始值和增量表达式，但是一般情况下，C 程序员偏向于使用 for(;;) 结构来表示一个无限循环。</p>
<p><strong>注意：</strong>您可以按&nbsp;<span class="marked">Ctrl + C&nbsp;键终止一个无限循环。</span></p>]]></description></item><item><title>【C语言】找出1000以内可以被3整除的数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834199.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 11 Nov 2019 05:02:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834199.html</guid><description><![CDATA[<p>分别用while,do-while,for语句实现</p>
<p>方法一：while</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
     </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m;
     m </span>= <span style="color: #800080;">1</span><span style="color: #000000;">;
     </span><span style="color: #0000ff;">while</span> (m&lt;=<span style="color: #800080;">1000</span><span style="color: #000000;">)
     {
         </span><span style="color: #0000ff;">if</span> (m % <span style="color: #800080;">3</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
             printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
         m </span>= m + <span style="color: #800080;">1</span><span style="color: #000000;">;
     }
    

}</span></pre>
</div>
<p>方法二：do-whlie</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
     </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m;
     m </span>= <span style="color: #800080;">1</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">do</span><span style="color: #000000;">
     {
         </span><span style="color: #0000ff;">if</span> (m % <span style="color: #800080;">3</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
             printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
         m </span>= m + <span style="color: #800080;">1</span><span style="color: #000000;">;
    } 
    </span><span style="color: #0000ff;">while</span> (m &lt;= <span style="color: #800080;">1000</span><span style="color: #000000;">);

}</span></pre>
</div>
<p>方法三：for</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
     </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> m;
     </span><span style="color: #0000ff;">for</span> (m = <span style="color: #800080;">1</span>; m &lt;= <span style="color: #800080;">1000</span>; m = m + <span style="color: #800080;">1</span><span style="color: #000000;">)
         </span><span style="color: #0000ff;">if</span> (m % <span style="color: #800080;">3</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
             printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5d</span><span style="color: #800000;">"</span><span style="color: #000000;">, m);
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】判断学生成绩等级</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834109.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 11 Nov 2019 04:32:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/11/11834109.html</guid><description><![CDATA[<p>方法一：if-else</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入成绩：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">float</span><span style="color: #000000;"> score;
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">score);
    </span><span style="color: #0000ff;">if</span> (score &gt;= <span style="color: #800080;">90</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：A\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">else</span>
        <span style="color: #0000ff;">if</span> (score &gt;= <span style="color: #800080;">80</span><span style="color: #000000;">)
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：B\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">else</span>
            <span style="color: #0000ff;">if</span> (score &gt;= <span style="color: #800080;">70</span><span style="color: #000000;">)
                printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：C\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
            </span><span style="color: #0000ff;">else</span>
                <span style="color: #0000ff;">if</span> (score &gt;= <span style="color: #800080;">60</span><span style="color: #000000;">)
                    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：D\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
                    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：E\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>方法2：switch语句</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
 <span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入成绩：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">float</span><span style="color: #000000;"> score;
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">score);
    </span><span style="color: #0000ff;">switch</span> ((<span style="color: #0000ff;">int</span>)score/<span style="color: #800080;">10</span><span style="color: #000000;">)
    {    
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">10</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">9</span>:printf(<span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：A\n</span><span style="color: #800000;">"</span>); <span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">8</span>:printf(<span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：B\n</span><span style="color: #800000;">"</span>); <span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">7</span>:printf(<span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：C\n</span><span style="color: #800000;">"</span>); <span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">case</span> <span style="color: #800080;">6</span>:printf(<span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：D\n</span><span style="color: #800000;">"</span>); <span style="color: #0000ff;">break</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">default</span>:printf(<span style="color: #800000;">"</span><span style="color: #800000;">成绩等级为：E\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>如何强制卸载软件，强制卸载的工具。</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/10/11831303.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sun, 10 Nov 2019 10:55:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/10/11831303.html</guid><description><![CDATA[<div class="exp-content-block">
<div class="exp-content-body exp-brief-step">
<div class="exp-content-listblock">
<div class="content-listblock-text">
<p>日常使用电脑过程中经常会遇到一些流氓捆绑软件，今天我们教大家如何轻松的强制卸载流氓软件。非常小巧而且强大的一款强制卸载工具，干净清爽。</p>
</div>
</div>
</div>
</div>
<div class="exp-content-block">
<h2 class="exp-content-head"><a name="section-2"></a>工具/原料</h2>
<div class="audio-wp audio-wp-2" data-text="" data-for="" data-index="1">&nbsp;</div>
<div class="exp-content-body">
<ul class="exp-content-unorderlist ">
<li class="exp-content-list list-item-1">
<div class="content-list-text">Geek Uninstaller</div>
</li>
</ul>
</div>
</div>
<div class="exp-content-block">
<h2 class="exp-content-head"><a name="section-3"></a>方法/步骤</h2>
<div class="audio-wp audio-wp-2" data-text="" data-for="" data-index="2">&nbsp;</div>
<div class="exp-content-body"><ol class="exp-conent-orderlist">
<li class="exp-content-list list-item-1">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">
<p>首先我们下载工具，百度输入geek点击搜索，如下图是工具的网站。</p>
</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/11c17a2cf21aeff446e39d14.html?picindex=1" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=66a006bdb0096b6381195e503c328733/96dda144ad345982de51240002f431adcaef844d.jpg" alt="如何强制卸载软件，强制卸载的工具。" /></a></div>
</div>
</li>
<li class="exp-content-list list-item-2">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">
<p>打开主页后，点击download按钮。</p>
</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/11c17a2cf21aeff446e39d14.html?picindex=2" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=437cb28107f79052ef1f473e3cf2d738/5243fbf2b2119313d3a63e226b380cd790238dbf.jpg" alt="如何强制卸载软件，强制卸载的工具。" /></a></div>
</div>
</li>
<li class="exp-content-list list-item-3">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">
<p>左侧FREE字样就是免费版，这里我们点击ZIP或者7z下载即可，都是压缩包，免安装的点开就可以使用。</p>
</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/11c17a2cf21aeff446e39d14.html?picindex=3" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=6871ce71db39b6004dce0fb7d9513526/55e736d12f2eb938e6efb760db628535e4dd6fa6.jpg" alt="如何强制卸载软件，强制卸载的工具。" /></a></div>
</div>
</li>
<li class="exp-content-list list-item-4">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">
<p>解压后，双击打开软件，如下图所示，这里显示了电脑所有的软件列表，如果你通过正常卸载无法卸载干净，这里我们直接右键软件强制删除，一键即可清理程序相关的所有信息，文件注册表之类的。</p>
</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/11c17a2cf21aeff446e39d14.html?picindex=4" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=d6e1413ba7014c08193b28a53a7a025b/0b46f21fbe096b63c9e192c202338744eaf8acac.jpg" alt="如何强制卸载软件，强制卸载的工具。" /></a></div>
</div>
<div class="last-item"><span class="last-item-end">END</span></div>
</li>
</ol></div>
</div>]]></description></item><item><title> 网站添加左下角某易云音乐播放器代码</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/10/11829338.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sun, 10 Nov 2019 03:26:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/10/11829338.html</guid><description><![CDATA[<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 音乐播放器 </span><span style="color: #008000;">--&gt;</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">link </span><span style="color: #ff0000;">rel</span><span style="color: #0000ff;">="stylesheet"</span><span style="color: #ff0000;"> href</span><span style="color: #0000ff;">="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"</span><span style="color: #0000ff;">&gt;</span>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="aplayer"</span><span style="color: #ff0000;"> data-id</span><span style="color: #0000ff;">="2440040711"</span><span style="color: #ff0000;"> data-server</span><span style="color: #0000ff;">="netease"</span><span style="color: #ff0000;"> data-type</span><span style="color: #0000ff;">="playlist"</span><span style="color: #ff0000;"> data-fixed</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;"> data-autoplay</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;">        data-volume</span><span style="color: #0000ff;">="0.6"</span> <span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> meting_api</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">http://api.mizore.cn/meting/api.php?server=:server&amp;type=:type&amp;id=:id</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="http://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="http://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 音乐播放器 </span><span style="color: #008000;">--&gt;</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>ASCII码表</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/10/11829141.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sun, 10 Nov 2019 02:48:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/10/11829141.html</guid><description><![CDATA[<div class="para">ASCII码表具体如下所示<span class="sup--normal" data-sup="1" data-ctrmap=":1,">&nbsp;<a class="sup-anchor" name="ref_[1]_15482"></a>&nbsp;&nbsp;<a name="ref_1"></a><a name="ref_1"></a><a name="ref_1"></a><a name="ref_1"></a>:</span></div>
<table class="table-view log-set-param" style="width: 99%;" data-sort="sortDisabled">
<tbody>
<tr>
<td align="center" valign="middle" height="49">
<div class="para">Bin</div>
<div class="para">(二进制)</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle" height="49">
<div class="para">Oct</div>
<div class="para">(八进制)</div>
</td>
<td align="center" valign="middle" height="49">
<div class="para">Dec</div>
<div class="para">(十进制)</div>
</td>
<td align="center" valign="middle" height="49">
<div class="para">Hex</div>
<div class="para">(十六进制)</div>
</td>
<td align="center" valign="middle" height="49">
<div class="para">缩写/字符</div>
</td>
<td colspan="1" align="center" valign="middle" height="49">
<div class="para">解释</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">00</div>
</td>
<td align="center" valign="middle">
<div class="para">0</div>
</td>
<td align="center" valign="middle">
<div class="para">0x00</div>
</td>
<td align="center" valign="middle">
<div class="para">NUL(null)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">空字符</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">01</div>
</td>
<td align="center" valign="middle">
<div class="para">1</div>
</td>
<td align="center" valign="middle">
<div class="para">0x01</div>
</td>
<td align="center" valign="middle">
<div class="para">SOH(start of headline)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">标题开始</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">02</div>
</td>
<td align="center" valign="middle">
<div class="para">2</div>
</td>
<td align="center" valign="middle">
<div class="para">0x02</div>
</td>
<td align="center" valign="middle">
<div class="para">STX (start of text)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">正文开始</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">03</div>
</td>
<td align="center" valign="middle">
<div class="para">3</div>
</td>
<td align="center" valign="middle">
<div class="para">0x03</div>
</td>
<td align="center" valign="middle">
<div class="para">ETX (end of text)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">正文结束</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">04</div>
</td>
<td align="center" valign="middle">
<div class="para">4</div>
</td>
<td align="center" valign="middle">
<div class="para">0x04</div>
</td>
<td align="center" valign="middle">
<div class="para">EOT (end of transmission)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">传输结束</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">05</div>
</td>
<td align="center" valign="middle">
<div class="para">5</div>
</td>
<td align="center" valign="middle">
<div class="para">0x05</div>
</td>
<td align="center" valign="middle">
<div class="para">ENQ (enquiry)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">请求</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">06</div>
</td>
<td align="center" valign="middle">
<div class="para">6</div>
</td>
<td align="center" valign="middle">
<div class="para">0x06</div>
</td>
<td align="center" valign="middle">
<div class="para">ACK (acknowledge)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">收到通知</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">07</div>
</td>
<td align="center" valign="middle">
<div class="para">7</div>
</td>
<td align="center" valign="middle">
<div class="para">0x07</div>
</td>
<td align="center" valign="middle">
<div class="para">BEL (bell)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">响铃</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">010</div>
</td>
<td align="center" valign="middle">
<div class="para">8</div>
</td>
<td align="center" valign="middle">
<div class="para">0x08</div>
</td>
<td align="center" valign="middle">
<div class="para">BS (backspace)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">退格</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">011</div>
</td>
<td align="center" valign="middle">
<div class="para">9</div>
</td>
<td align="center" valign="middle">
<div class="para">0x09</div>
</td>
<td align="center" valign="middle">
<div class="para">HT (horizontal tab)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">水平制表符</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">012</div>
</td>
<td align="center" valign="middle">
<div class="para">10</div>
</td>
<td align="center" valign="middle">
<div class="para">0x0A</div>
</td>
<td align="center" valign="middle">
<div class="para">LF (NL line feed, new line)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">换行键</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">013</div>
</td>
<td align="center" valign="middle">
<div class="para">11</div>
</td>
<td align="center" valign="middle">
<div class="para">0x0B</div>
</td>
<td align="center" valign="middle">
<div class="para">VT (vertical tab)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">垂直制表符</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">014</div>
</td>
<td align="center" valign="middle">
<div class="para">12</div>
</td>
<td align="center" valign="middle">
<div class="para">0x0C</div>
</td>
<td align="center" valign="middle">
<div class="para">FF (NP form feed, new page)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">换页键</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">015</div>
</td>
<td align="center" valign="middle">
<div class="para">13</div>
</td>
<td align="center" valign="middle">
<div class="para">0x0D</div>
</td>
<td align="center" valign="middle">
<div class="para">CR (carriage return)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">回车键</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">016</div>
</td>
<td align="center" valign="middle">
<div class="para">14</div>
</td>
<td align="center" valign="middle">
<div class="para">0x0E</div>
</td>
<td align="center" valign="middle">
<div class="para">SO (shift out)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">不用切换</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0000 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">017</div>
</td>
<td align="center" valign="middle">
<div class="para">15</div>
</td>
<td align="center" valign="middle">
<div class="para">0x0F</div>
</td>
<td align="center" valign="middle">
<div class="para">SI (shift in)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">启用切换</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">020</div>
</td>
<td align="center" valign="middle">
<div class="para">16</div>
</td>
<td align="center" valign="middle">
<div class="para">0x10</div>
</td>
<td align="center" valign="middle">
<div class="para">DLE (data link escape)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">数据链路转义</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">021</div>
</td>
<td align="center" valign="middle">
<div class="para">17</div>
</td>
<td align="center" valign="middle">
<div class="para">0x11</div>
</td>
<td align="center" valign="middle">
<div class="para">DC1 (device control 1)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">设备控制1</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">022</div>
</td>
<td align="center" valign="middle">
<div class="para">18</div>
</td>
<td align="center" valign="middle">
<div class="para">0x12</div>
</td>
<td align="center" valign="middle">
<div class="para">DC2 (device control 2)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">设备控制2</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">023</div>
</td>
<td align="center" valign="middle">
<div class="para">19</div>
</td>
<td align="center" valign="middle">
<div class="para">0x13</div>
</td>
<td align="center" valign="middle">
<div class="para">DC3 (device control 3)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">设备控制3</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">024</div>
</td>
<td align="center" valign="middle">
<div class="para">20</div>
</td>
<td align="center" valign="middle">
<div class="para">0x14</div>
</td>
<td align="center" valign="middle">
<div class="para">DC4 (device control 4)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">设备控制4</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">025</div>
</td>
<td align="center" valign="middle">
<div class="para">21</div>
</td>
<td align="center" valign="middle">
<div class="para">0x15</div>
</td>
<td align="center" valign="middle">
<div class="para">NAK (negative acknowledge)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">拒绝接收</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">026</div>
</td>
<td align="center" valign="middle">
<div class="para">22</div>
</td>
<td align="center" valign="middle">
<div class="para">0x16</div>
</td>
<td align="center" valign="middle">
<div class="para">SYN (synchronous idle)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">同步空闲</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">027</div>
</td>
<td align="center" valign="middle">
<div class="para">23</div>
</td>
<td align="center" valign="middle">
<div class="para">0x17</div>
</td>
<td align="center" valign="middle">
<div class="para">ETB (end of trans. block)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">结束传输块</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">030</div>
</td>
<td align="center" valign="middle">
<div class="para">24</div>
</td>
<td align="center" valign="middle">
<div class="para">0x18</div>
</td>
<td align="center" valign="middle">
<div class="para">CAN (cancel)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">取消</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">031</div>
</td>
<td align="center" valign="middle">
<div class="para">25</div>
</td>
<td align="center" valign="middle">
<div class="para">0x19</div>
</td>
<td align="center" valign="middle">
<div class="para">EM (end of medium)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">媒介结束</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">032</div>
</td>
<td align="center" valign="middle">
<div class="para">26</div>
</td>
<td align="center" valign="middle">
<div class="para">0x1A</div>
</td>
<td align="center" valign="middle">
<div class="para">SUB (substitute)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">代替</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">033</div>
</td>
<td align="center" valign="middle">
<div class="para">27</div>
</td>
<td align="center" valign="middle">
<div class="para">0x1B</div>
</td>
<td align="center" valign="middle">
<div class="para">ESC (escape)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">换码(溢出)</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">034</div>
</td>
<td align="center" valign="middle">
<div class="para">28</div>
</td>
<td align="center" valign="middle">
<div class="para">0x1C</div>
</td>
<td align="center" valign="middle">
<div class="para">FS (file separator)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">文件分隔符</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">035</div>
</td>
<td align="center" valign="middle">
<div class="para">29</div>
</td>
<td align="center" valign="middle">
<div class="para">0x1D</div>
</td>
<td align="center" valign="middle">
<div class="para">GS (group separator)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">分组符</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">036</div>
</td>
<td align="center" valign="middle">
<div class="para">30</div>
</td>
<td align="center" valign="middle">
<div class="para">0x1E</div>
</td>
<td align="center" valign="middle">
<div class="para">RS (record separator)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">记录分隔符</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0001 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">037</div>
</td>
<td align="center" valign="middle">
<div class="para">31</div>
</td>
<td align="center" valign="middle">
<div class="para">0x1F</div>
</td>
<td align="center" valign="middle">
<div class="para">US (unit separator)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">单元分隔符</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">040</div>
</td>
<td align="center" valign="middle">
<div class="para">32</div>
</td>
<td align="center" valign="middle">
<div class="para">0x20</div>
</td>
<td align="center" valign="middle">
<div class="para">(space)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">空格</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">041</div>
</td>
<td align="center" valign="middle">
<div class="para">33</div>
</td>
<td align="center" valign="middle">
<div class="para">0x21</div>
</td>
<td align="center" valign="middle">
<div class="para">!</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">叹号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">042</div>
</td>
<td align="center" valign="middle">
<div class="para">34</div>
</td>
<td align="center" valign="middle">
<div class="para">0x22</div>
</td>
<td align="center" valign="middle">
<div class="para">"</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">双引号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">043</div>
</td>
<td align="center" valign="middle">
<div class="para">35</div>
</td>
<td align="center" valign="middle">
<div class="para">0x23</div>
</td>
<td align="center" valign="middle">
<div class="para">#</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">井号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">044</div>
</td>
<td align="center" valign="middle">
<div class="para">36</div>
</td>
<td align="center" valign="middle">
<div class="para">0x24</div>
</td>
<td align="center" valign="middle">
<div class="para">$</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">美元符</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">045</div>
</td>
<td align="center" valign="middle">
<div class="para">37</div>
</td>
<td align="center" valign="middle">
<div class="para">0x25</div>
</td>
<td align="center" valign="middle">
<div class="para">%</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">百分号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">046</div>
</td>
<td align="center" valign="middle">
<div class="para">38</div>
</td>
<td align="center" valign="middle">
<div class="para">0x26</div>
</td>
<td align="center" valign="middle">
<div class="para">&amp;</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">和号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">047</div>
</td>
<td align="center" valign="middle">
<div class="para">39</div>
</td>
<td align="center" valign="middle">
<div class="para">0x27</div>
</td>
<td align="center" valign="middle">
<div class="para">'</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">闭单引号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">050</div>
</td>
<td align="center" valign="middle">
<div class="para">40</div>
</td>
<td align="center" valign="middle">
<div class="para">0x28</div>
</td>
<td align="center" valign="middle">
<div class="para">(</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">开括号</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">051</div>
</td>
<td align="center" valign="middle">
<div class="para">41</div>
</td>
<td align="center" valign="middle">
<div class="para">0x29</div>
</td>
<td align="center" valign="middle">
<div class="para">)</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">
<div class="para">闭括号</div>
</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">052</div>
</td>
<td align="center" valign="middle">
<div class="para">42</div>
</td>
<td align="center" valign="middle">
<div class="para">0x2A</div>
</td>
<td align="center" valign="middle">
<div class="para">*</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">星号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">053</div>
</td>
<td align="center" valign="middle">
<div class="para">43</div>
</td>
<td align="center" valign="middle">
<div class="para">0x2B</div>
</td>
<td align="center" valign="middle">
<div class="para">+</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">加号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">054</div>
</td>
<td align="center" valign="middle">
<div class="para">44</div>
</td>
<td align="center" valign="middle">
<div class="para">0x2C</div>
</td>
<td align="center" valign="middle">
<div class="para">,</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">逗号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">055</div>
</td>
<td align="center" valign="middle">
<div class="para">45</div>
</td>
<td align="center" valign="middle">
<div class="para">0x2D</div>
</td>
<td align="center" valign="middle">
<div class="para">-</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">减号/破折号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">056</div>
</td>
<td align="center" valign="middle">
<div class="para">46</div>
</td>
<td align="center" valign="middle">
<div class="para">0x2E</div>
</td>
<td align="center" valign="middle">
<div class="para">.</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">句号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0010 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">057</div>
</td>
<td align="center" valign="middle">
<div class="para">47</div>
</td>
<td align="center" valign="middle">
<div class="para">0x2F</div>
</td>
<td align="center" valign="middle">
<div class="para">/</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">斜杠</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">060</div>
</td>
<td align="center" valign="middle">
<div class="para">48</div>
</td>
<td align="center" valign="middle">
<div class="para">0x30</div>
</td>
<td align="center" valign="middle">
<div class="para">0</div>
</td>
<td colspan="1" align="left" valign="middle" height="0">字符0</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">061</div>
</td>
<td align="center" valign="middle">
<div class="para">49</div>
</td>
<td align="center" valign="middle">
<div class="para">0x31</div>
</td>
<td align="center" valign="middle">
<div class="para">1</div>
</td>
<td align="left" valign="middle">字符1</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">062</div>
</td>
<td align="center" valign="middle">
<div class="para">50</div>
</td>
<td align="center" valign="middle">
<div class="para">0x32</div>
</td>
<td align="center" valign="middle">
<div class="para">2</div>
</td>
<td align="left" valign="middle">字符2</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">063</div>
</td>
<td align="center" valign="middle">
<div class="para">51</div>
</td>
<td align="center" valign="middle">
<div class="para">0x33</div>
</td>
<td align="center" valign="middle">
<div class="para">3</div>
</td>
<td align="left" valign="middle">字符3</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">064</div>
</td>
<td align="center" valign="middle">
<div class="para">52</div>
</td>
<td align="center" valign="middle">
<div class="para">0x34</div>
</td>
<td align="center" valign="middle">
<div class="para">4</div>
</td>
<td align="left" valign="middle">字符4</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">065</div>
</td>
<td align="center" valign="middle">
<div class="para">53</div>
</td>
<td align="center" valign="middle">
<div class="para">0x35</div>
</td>
<td align="center" valign="middle">
<div class="para">5</div>
</td>
<td align="left" valign="middle">字符5</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">066</div>
</td>
<td align="center" valign="middle">
<div class="para">54</div>
</td>
<td align="center" valign="middle">
<div class="para">0x36</div>
</td>
<td align="center" valign="middle">
<div class="para">6</div>
</td>
<td align="left" valign="middle">字符6</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">067</div>
</td>
<td align="center" valign="middle">
<div class="para">55</div>
</td>
<td align="center" valign="middle">
<div class="para">0x37</div>
</td>
<td align="center" valign="middle">
<div class="para">7</div>
</td>
<td align="left" valign="middle">字符7</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">070</div>
</td>
<td align="center" valign="middle">
<div class="para">56</div>
</td>
<td align="center" valign="middle">
<div class="para">0x38</div>
</td>
<td align="center" valign="middle">
<div class="para">8</div>
</td>
<td align="left" valign="middle">字符8</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">071</div>
</td>
<td align="center" valign="middle">
<div class="para">57</div>
</td>
<td align="center" valign="middle">
<div class="para">0x39</div>
</td>
<td align="center" valign="middle">
<div class="para">9</div>
</td>
<td align="left" valign="middle">字符9</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">072</div>
</td>
<td align="center" valign="middle">
<div class="para">58</div>
</td>
<td align="center" valign="middle">
<div class="para">0x3A</div>
</td>
<td align="center" valign="middle">
<div class="para">:</div>
</td>
<td align="left" valign="middle">冒号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">073</div>
</td>
<td align="center" valign="middle">
<div class="para">59</div>
</td>
<td align="center" valign="middle">
<div class="para">0x3B</div>
</td>
<td align="center" valign="middle">
<div class="para">;</div>
</td>
<td align="left" valign="middle">分号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">074</div>
</td>
<td align="center" valign="middle">
<div class="para">60</div>
</td>
<td align="center" valign="middle">
<div class="para">0x3C</div>
</td>
<td align="center" valign="middle">
<div class="para">&lt;</div>
</td>
<td align="left" valign="middle">小于</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">075</div>
</td>
<td align="center" valign="middle">
<div class="para">61</div>
</td>
<td align="center" valign="middle">
<div class="para">0x3D</div>
</td>
<td align="center" valign="middle">
<div class="para">=</div>
</td>
<td align="left" valign="middle">等号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">076</div>
</td>
<td align="center" valign="middle">
<div class="para">62</div>
</td>
<td align="center" valign="middle">
<div class="para">0x3E</div>
</td>
<td align="center" valign="middle">
<div class="para">&gt;</div>
</td>
<td align="left" valign="middle">大于</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0011 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">077</div>
</td>
<td align="center" valign="middle">
<div class="para">63</div>
</td>
<td align="center" valign="middle">
<div class="para">0x3F</div>
</td>
<td align="center" valign="middle">
<div class="para">?</div>
</td>
<td align="left" valign="middle">问号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0100</div>
</td>
<td align="center" valign="middle">
<div class="para">64</div>
</td>
<td align="center" valign="middle">
<div class="para">0x40</div>
</td>
<td align="center" valign="middle">
<div class="para">@</div>
</td>
<td align="left" valign="middle">电子邮件符号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0101</div>
</td>
<td align="center" valign="middle">
<div class="para">65</div>
</td>
<td align="center" valign="middle">
<div class="para">0x41</div>
</td>
<td align="center" valign="middle">
<div class="para">A</div>
</td>
<td align="left" valign="middle">大写字母A</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0102</div>
</td>
<td align="center" valign="middle">
<div class="para">66</div>
</td>
<td align="center" valign="middle">
<div class="para">0x42</div>
</td>
<td align="center" valign="middle">
<div class="para">B</div>
</td>
<td align="left" valign="middle">大写字母B</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0103</div>
</td>
<td align="center" valign="middle">
<div class="para">67</div>
</td>
<td align="center" valign="middle">
<div class="para">0x43</div>
</td>
<td align="center" valign="middle">
<div class="para">C</div>
</td>
<td align="left" valign="middle">大写字母C</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0104</div>
</td>
<td align="center" valign="middle">
<div class="para">68</div>
</td>
<td align="center" valign="middle">
<div class="para">0x44</div>
</td>
<td align="center" valign="middle">
<div class="para">D</div>
</td>
<td align="left" valign="middle">大写字母D</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0105</div>
</td>
<td align="center" valign="middle">
<div class="para">69</div>
</td>
<td align="center" valign="middle">
<div class="para">0x45</div>
</td>
<td align="center" valign="middle">
<div class="para">E</div>
</td>
<td align="left" valign="middle">大写字母E</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0106</div>
</td>
<td align="center" valign="middle">
<div class="para">70</div>
</td>
<td align="center" valign="middle">
<div class="para">0x46</div>
</td>
<td align="center" valign="middle">
<div class="para">F</div>
</td>
<td align="left" valign="middle">大写字母F</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0107</div>
</td>
<td align="center" valign="middle">
<div class="para">71</div>
</td>
<td align="center" valign="middle">
<div class="para">0x47</div>
</td>
<td align="center" valign="middle">
<div class="para">G</div>
</td>
<td align="left" valign="middle">大写字母G</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0110</div>
</td>
<td align="center" valign="middle">
<div class="para">72</div>
</td>
<td align="center" valign="middle">
<div class="para">0x48</div>
</td>
<td align="center" valign="middle">
<div class="para">H</div>
</td>
<td align="left" valign="middle">大写字母H</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0111</div>
</td>
<td align="center" valign="middle">
<div class="para">73</div>
</td>
<td align="center" valign="middle">
<div class="para">0x49</div>
</td>
<td align="center" valign="middle">
<div class="para">I</div>
</td>
<td align="left" valign="middle">大写字母I</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">01001010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0112</div>
</td>
<td align="center" valign="middle">
<div class="para">74</div>
</td>
<td align="center" valign="middle">
<div class="para">0x4A</div>
</td>
<td align="center" valign="middle">
<div class="para">J</div>
</td>
<td align="left" valign="middle">大写字母J</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0113</div>
</td>
<td align="center" valign="middle">
<div class="para">75</div>
</td>
<td align="center" valign="middle">
<div class="para">0x4B</div>
</td>
<td align="center" valign="middle">
<div class="para">K</div>
</td>
<td align="left" valign="middle">大写字母K</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0114</div>
</td>
<td align="center" valign="middle">
<div class="para">76</div>
</td>
<td align="center" valign="middle">
<div class="para">0x4C</div>
</td>
<td align="center" valign="middle">
<div class="para">L</div>
</td>
<td align="left" valign="middle">大写字母L</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0115</div>
</td>
<td align="center" valign="middle">
<div class="para">77</div>
</td>
<td align="center" valign="middle">
<div class="para">0x4D</div>
</td>
<td align="center" valign="middle">
<div class="para">M</div>
</td>
<td align="left" valign="middle">大写字母M</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0116</div>
</td>
<td align="center" valign="middle">
<div class="para">78</div>
</td>
<td align="center" valign="middle">
<div class="para">0x4E</div>
</td>
<td align="center" valign="middle">
<div class="para">N</div>
</td>
<td align="left" valign="middle">大写字母N</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0100 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0117</div>
</td>
<td align="center" valign="middle">
<div class="para">79</div>
</td>
<td align="center" valign="middle">
<div class="para">0x4F</div>
</td>
<td align="center" valign="middle">
<div class="para">O</div>
</td>
<td align="left" valign="middle">大写字母O</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0120</div>
</td>
<td align="center" valign="middle">
<div class="para">80</div>
</td>
<td align="center" valign="middle">
<div class="para">0x50</div>
</td>
<td align="center" valign="middle">
<div class="para">P</div>
</td>
<td align="left" valign="middle">大写字母P</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0121</div>
</td>
<td align="center" valign="middle">
<div class="para">81</div>
</td>
<td align="center" valign="middle">
<div class="para">0x51</div>
</td>
<td align="center" valign="middle">
<div class="para">Q</div>
</td>
<td align="left" valign="middle">大写字母Q</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0122</div>
</td>
<td align="center" valign="middle">
<div class="para">82</div>
</td>
<td align="center" valign="middle">
<div class="para">0x52</div>
</td>
<td align="center" valign="middle">
<div class="para">R</div>
</td>
<td align="left" valign="middle">大写字母R</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0123</div>
</td>
<td align="center" valign="middle">
<div class="para">83</div>
</td>
<td align="center" valign="middle">
<div class="para">0x53</div>
</td>
<td align="center" valign="middle">
<div class="para">S</div>
</td>
<td align="left" valign="middle">大写字母S</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0124</div>
</td>
<td align="center" valign="middle">
<div class="para">84</div>
</td>
<td align="center" valign="middle">
<div class="para">0x54</div>
</td>
<td align="center" valign="middle">
<div class="para">T</div>
</td>
<td align="left" valign="middle">大写字母T</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0125</div>
</td>
<td align="center" valign="middle">
<div class="para">85</div>
</td>
<td align="center" valign="middle">
<div class="para">0x55</div>
</td>
<td align="center" valign="middle">
<div class="para">U</div>
</td>
<td align="left" valign="middle">大写字母U</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0126</div>
</td>
<td align="center" valign="middle">
<div class="para">86</div>
</td>
<td align="center" valign="middle">
<div class="para">0x56</div>
</td>
<td align="center" valign="middle">
<div class="para">V</div>
</td>
<td align="left" valign="middle">大写字母V</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0127</div>
</td>
<td align="center" valign="middle">
<div class="para">87</div>
</td>
<td align="center" valign="middle">
<div class="para">0x57</div>
</td>
<td align="center" valign="middle">
<div class="para">W</div>
</td>
<td align="left" valign="middle">大写字母W</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0130</div>
</td>
<td align="center" valign="middle">
<div class="para">88</div>
</td>
<td align="center" valign="middle">
<div class="para">0x58</div>
</td>
<td align="center" valign="middle">
<div class="para">X</div>
</td>
<td align="left" valign="middle">大写字母X</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0131</div>
</td>
<td align="center" valign="middle">
<div class="para">89</div>
</td>
<td align="center" valign="middle">
<div class="para">0x59</div>
</td>
<td align="center" valign="middle">
<div class="para">Y</div>
</td>
<td align="left" valign="middle">大写字母Y</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0132</div>
</td>
<td align="center" valign="middle">
<div class="para">90</div>
</td>
<td align="center" valign="middle">
<div class="para">0x5A</div>
</td>
<td align="center" valign="middle">
<div class="para">Z</div>
</td>
<td align="left" valign="middle">大写字母Z</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0133</div>
</td>
<td align="center" valign="middle">
<div class="para">91</div>
</td>
<td align="center" valign="middle">
<div class="para">0x5B</div>
</td>
<td align="center" valign="middle">
<div class="para">[</div>
</td>
<td align="left" valign="middle">开方括号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0134</div>
</td>
<td align="center" valign="middle">
<div class="para">92</div>
</td>
<td align="center" valign="middle">
<div class="para">0x5C</div>
</td>
<td align="center" valign="middle">
<div class="para">\</div>
</td>
<td align="left" valign="middle">反斜杠</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0135</div>
</td>
<td align="center" valign="middle">
<div class="para">93</div>
</td>
<td align="center" valign="middle">
<div class="para">0x5D</div>
</td>
<td align="center" valign="middle">
<div class="para">]</div>
</td>
<td align="left" valign="middle">闭方括号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0136</div>
</td>
<td align="center" valign="middle">
<div class="para">94</div>
</td>
<td align="center" valign="middle">
<div class="para">0x5E</div>
</td>
<td align="center" valign="middle">
<div class="para">^</div>
</td>
<td align="left" valign="middle">脱字符</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0101 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0137</div>
</td>
<td align="center" valign="middle">
<div class="para">95</div>
</td>
<td align="center" valign="middle">
<div class="para">0x5F</div>
</td>
<td align="center" valign="middle">
<div class="para">_</div>
</td>
<td align="left" valign="middle">下划线</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0140</div>
</td>
<td align="center" valign="middle">
<div class="para">96</div>
</td>
<td align="center" valign="middle">
<div class="para">0x60</div>
</td>
<td align="center" valign="middle">
<div class="para">`</div>
</td>
<td align="left" valign="middle">开单引号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0141</div>
</td>
<td align="center" valign="middle">
<div class="para">97</div>
</td>
<td align="center" valign="middle">
<div class="para">0x61</div>
</td>
<td align="center" valign="middle">
<div class="para">a</div>
</td>
<td align="left" valign="middle">小写字母a</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0142</div>
</td>
<td align="center" valign="middle">
<div class="para">98</div>
</td>
<td align="center" valign="middle">
<div class="para">0x62</div>
</td>
<td align="center" valign="middle">
<div class="para">b</div>
</td>
<td align="left" valign="middle">小写字母b</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0143</div>
</td>
<td align="center" valign="middle">
<div class="para">99</div>
</td>
<td align="center" valign="middle">
<div class="para">0x63</div>
</td>
<td align="center" valign="middle">
<div class="para">c</div>
</td>
<td align="left" valign="middle">小写字母c</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0144</div>
</td>
<td align="center" valign="middle">
<div class="para">100</div>
</td>
<td align="center" valign="middle">
<div class="para">0x64</div>
</td>
<td align="center" valign="middle">
<div class="para">d</div>
</td>
<td align="left" valign="middle">小写字母d</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0145</div>
</td>
<td align="center" valign="middle">
<div class="para">101</div>
</td>
<td align="center" valign="middle">
<div class="para">0x65</div>
</td>
<td align="center" valign="middle">
<div class="para">e</div>
</td>
<td align="left" valign="middle">小写字母e</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0146</div>
</td>
<td align="center" valign="middle">
<div class="para">102</div>
</td>
<td align="center" valign="middle">
<div class="para">0x66</div>
</td>
<td align="center" valign="middle">
<div class="para">f</div>
</td>
<td align="left" valign="middle">小写字母f</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0147</div>
</td>
<td align="center" valign="middle">
<div class="para">103</div>
</td>
<td align="center" valign="middle">
<div class="para">0x67</div>
</td>
<td align="center" valign="middle">
<div class="para">g</div>
</td>
<td align="left" valign="middle">小写字母g</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0150</div>
</td>
<td align="center" valign="middle">
<div class="para">104</div>
</td>
<td align="center" valign="middle">
<div class="para">0x68</div>
</td>
<td align="center" valign="middle">
<div class="para">h</div>
</td>
<td align="left" valign="middle">小写字母h</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0151</div>
</td>
<td align="center" valign="middle">
<div class="para">105</div>
</td>
<td align="center" valign="middle">
<div class="para">0x69</div>
</td>
<td align="center" valign="middle">
<div class="para">i</div>
</td>
<td align="left" valign="middle">小写字母i</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0152</div>
</td>
<td align="center" valign="middle">
<div class="para">106</div>
</td>
<td align="center" valign="middle">
<div class="para">0x6A</div>
</td>
<td align="center" valign="middle">
<div class="para">j</div>
</td>
<td align="left" valign="middle">小写字母j</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0153</div>
</td>
<td align="center" valign="middle">
<div class="para">107</div>
</td>
<td align="center" valign="middle">
<div class="para">0x6B</div>
</td>
<td align="center" valign="middle">
<div class="para">k</div>
</td>
<td align="left" valign="middle">小写字母k</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0154</div>
</td>
<td align="center" valign="middle">
<div class="para">108</div>
</td>
<td align="center" valign="middle">
<div class="para">0x6C</div>
</td>
<td align="center" valign="middle">
<div class="para">l</div>
</td>
<td align="left" valign="middle">小写字母l</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0155</div>
</td>
<td align="center" valign="middle">
<div class="para">109</div>
</td>
<td align="center" valign="middle">
<div class="para">0x6D</div>
</td>
<td align="center" valign="middle">
<div class="para">m</div>
</td>
<td align="left" valign="middle">小写字母m</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0156</div>
</td>
<td align="center" valign="middle">
<div class="para">110</div>
</td>
<td align="center" valign="middle">
<div class="para">0x6E</div>
</td>
<td align="center" valign="middle">
<div class="para">n</div>
</td>
<td align="left" valign="middle">小写字母n</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0110 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0157</div>
</td>
<td align="center" valign="middle">
<div class="para">111</div>
</td>
<td align="center" valign="middle">
<div class="para">0x6F</div>
</td>
<td align="center" valign="middle">
<div class="para">o</div>
</td>
<td align="left" valign="middle">小写字母o</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0160</div>
</td>
<td align="center" valign="middle">
<div class="para">112</div>
</td>
<td align="center" valign="middle">
<div class="para">0x70</div>
</td>
<td align="center" valign="middle">
<div class="para">p</div>
</td>
<td align="left" valign="middle">小写字母p</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0161</div>
</td>
<td align="center" valign="middle">
<div class="para">113</div>
</td>
<td align="center" valign="middle">
<div class="para">0x71</div>
</td>
<td align="center" valign="middle">
<div class="para">q</div>
</td>
<td align="left" valign="middle">小写字母q</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0162</div>
</td>
<td align="center" valign="middle">
<div class="para">114</div>
</td>
<td align="center" valign="middle">
<div class="para">0x72</div>
</td>
<td align="center" valign="middle">
<div class="para">r</div>
</td>
<td align="left" valign="middle">小写字母r</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0163</div>
</td>
<td align="center" valign="middle">
<div class="para">115</div>
</td>
<td align="center" valign="middle">
<div class="para">0x73</div>
</td>
<td align="center" valign="middle">
<div class="para">s</div>
</td>
<td align="left" valign="middle">小写字母s</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0164</div>
</td>
<td align="center" valign="middle">
<div class="para">116</div>
</td>
<td align="center" valign="middle">
<div class="para">0x74</div>
</td>
<td align="center" valign="middle">
<div class="para">t</div>
</td>
<td align="left" valign="middle">小写字母t</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0165</div>
</td>
<td align="center" valign="middle">
<div class="para">117</div>
</td>
<td align="center" valign="middle">
<div class="para">0x75</div>
</td>
<td align="center" valign="middle">
<div class="para">u</div>
</td>
<td align="left" valign="middle">小写字母u</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0166</div>
</td>
<td align="center" valign="middle">
<div class="para">118</div>
</td>
<td align="center" valign="middle">
<div class="para">0x76</div>
</td>
<td align="center" valign="middle">
<div class="para">v</div>
</td>
<td align="left" valign="middle">小写字母v</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 0111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0167</div>
</td>
<td align="center" valign="middle">
<div class="para">119</div>
</td>
<td align="center" valign="middle">
<div class="para">0x77</div>
</td>
<td align="center" valign="middle">
<div class="para">w</div>
</td>
<td align="left" valign="middle">小写字母w</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1000</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0170</div>
</td>
<td align="center" valign="middle">
<div class="para">120</div>
</td>
<td align="center" valign="middle">
<div class="para">0x78</div>
</td>
<td align="center" valign="middle">
<div class="para">x</div>
</td>
<td align="left" valign="middle">小写字母x</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1001</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0171</div>
</td>
<td align="center" valign="middle">
<div class="para">121</div>
</td>
<td align="center" valign="middle">
<div class="para">0x79</div>
</td>
<td align="center" valign="middle">
<div class="para">y</div>
</td>
<td align="left" valign="middle">小写字母y</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1010</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0172</div>
</td>
<td align="center" valign="middle">
<div class="para">122</div>
</td>
<td align="center" valign="middle">
<div class="para">0x7A</div>
</td>
<td align="center" valign="middle">
<div class="para">z</div>
</td>
<td align="left" valign="middle">小写字母z</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1011</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0173</div>
</td>
<td align="center" valign="middle">
<div class="para">123</div>
</td>
<td align="center" valign="middle">
<div class="para">0x7B</div>
</td>
<td align="center" valign="middle">
<div class="para">{</div>
</td>
<td align="left" valign="middle">开花括号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1100</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0174</div>
</td>
<td align="center" valign="middle">
<div class="para">124</div>
</td>
<td align="center" valign="middle">
<div class="para">0x7C</div>
</td>
<td align="center" valign="middle">
<div class="para">|</div>
</td>
<td align="left" valign="middle">垂线</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1101</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0175</div>
</td>
<td align="center" valign="middle">
<div class="para">125</div>
</td>
<td align="center" valign="middle">
<div class="para">0x7D</div>
</td>
<td align="center" valign="middle">
<div class="para">}</div>
</td>
<td align="left" valign="middle">闭花括号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1110</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0176</div>
</td>
<td align="center" valign="middle">
<div class="para">126</div>
</td>
<td align="center" valign="middle">
<div class="para">0x7E</div>
</td>
<td align="center" valign="middle">
<div class="para">~</div>
</td>
<td align="left" valign="middle">波浪号</td>
</tr>
<tr>
<td align="center" valign="middle">
<div class="para">0111 1111</div>
</td>
<td rowspan="1" colspan="1" align="center" valign="middle">
<div class="para">0177</div>
</td>
<td align="center" valign="middle">
<div class="para">127</div>
</td>
<td align="center" valign="middle">
<div class="para">0x7F</div>
</td>
<td align="left" valign="middle">
<div class="para">DEL (delete)</div>
</td>
<td align="left" valign="middle">
<div class="para">删除</div>
</td>
</tr>
</tbody>
</table>
<div class="anchor-list"><a class="lemma-anchor para-title" name="4"></a><a class="lemma-anchor " name="sub15482_4"></a><a class="lemma-anchor " name="大小规则"></a></div>
<div class="para-title level-2">
<h2 class="title-text">大小规则</h2>
</div>
<div class="para">常见ASCII码的大小规则：0~9&lt;A~Z&lt;a~z。</div>
<div class="para">1）数字比字母要小。如 &ldquo;7&rdquo;&lt;&ldquo;F&rdquo;；</div>
<div class="para">2）数字0比数字9要小，并按0到9顺序递增。如 &ldquo;3&rdquo;&lt;&ldquo;8&rdquo; ；</div>
<div class="para">3）字母A比字母Z要小，并按A到Z顺序递增。如&ldquo;A&rdquo;&lt;&ldquo;Z&rdquo; ；</div>
<div class="para">4）同个字母的大写字母比小写字母要小32。如&ldquo;A&rdquo;&lt;&ldquo;a&rdquo; 。</div>
<div class="para">几个常见字母的ASCII码大小： &ldquo;A&rdquo;为65；&ldquo;a&rdquo;为97；&ldquo;0&rdquo;为 48<span class="sup--normal" data-sup="4" data-ctrmap=":4,">&nbsp;</span></div>]]></description></item><item><title>C语言当中int,float,double,char这四个有什么区别？</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/09/11828304.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 09 Nov 2019 15:02:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/09/11828304.html</guid><description><![CDATA[<p>区别在以下方面：</p>
<p>一、定义方面：</p>
<p>1、int为整数型，用于定义整数类型的数据 。</p>
<p>2、float为单精度浮点型，能准确到小数点后六位 。</p>
<p>3、double为双精度浮点型，能准确到小数点都十二位 。</p>
<p>4、char为字符型，用于定义字符类型的数据。</p>
<p>二、内存占据：</p>
<p>1、int 的内存大小是4 个byte。</p>
<p>2、float 内存大小是4 个byte。</p>
<p>3、double 的内存大小是8 个byte。</p>
<p>4、char 的内存大小是1 个byte。</p>
<p>基本数据类型表如下：</p>
<p><a class="ikqb_img_alink" title="点击查看大图" href="https://gss0.baidu.com/-Po3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/023b5bb5c9ea15ce8d0a45a9bb003af33b87b2ae.jpg" rel="nofollow noopener" target="_blank"><img class="ikqb_img" src="https://gss0.baidu.com/-Po3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=81f0bd65edfe9925cb596156049872e7/023b5bb5c9ea15ce8d0a45a9bb003af33b87b2ae.jpg" alt="" /></a></p>
<p>三、表示的数据范围：</p>
<p>1、int：数的范围为-（2的31次方-1）到（2的31次方-1），数字为-2 147 483 647~2 147 483 647。</p>
<p>2、double：表示的范围为+1.111111111111111111111*2^1023（1.后面52个1）为1.7*10^308。负数亦然。</p>
<p>3、float：整数极限为3.4*10^38，负数亦然。</p>
<p>4、char：-128- 127。</p>]]></description></item><item><title>【C语言】scanf()输入浮点型数据</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/09/11827979.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 09 Nov 2019 13:34:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/09/11827979.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">double</span><span style="color: #000000;"> x1, x2, x3, x4;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入2个浮点数x1，x2:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%lf,%lf</span><span style="color: #800000;">"</span>, &amp;x1, &amp;<span style="color: #000000;">x2);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%lf,%lf\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, x1, x2);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入浮点数x3,x4:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%5lf,%lf</span><span style="color: #800000;">"</span>, &amp;x3, &amp;<span style="color: #000000;">x4);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%lf,%lf\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
 

}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>【C语言】一元二次方程（求实根和虚根）</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/09/11824803.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 09 Nov 2019 03:25:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/09/11824803.html</guid><description><![CDATA[<pre>求一元二次方程：ax2+bx+c=0 的根。
输入三个实数a,b,c的值，且a不等于0。</pre>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;<span style="color: #000000;">
#include</span>&lt;math.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入a,b,c\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">float</span><span style="color: #000000;"> a, b, c, t, p, q, x1, x2;
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f%f%f</span><span style="color: #800000;">"</span>, &amp;a, &amp;b, &amp;<span style="color: #000000;">c);
    </span><span style="color: #0000ff;">if</span> (a == <span style="color: #800080;">0</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">不是一元二次方程</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    {
        t </span>= b * b - <span style="color: #800080;">4</span> * a *<span style="color: #000000;"> c;
        </span><span style="color: #0000ff;">if</span> (t &gt;= <span style="color: #800080;">0</span><span style="color: #000000;">)
        {
            </span><span style="color: #008000;">/*</span><span style="color: #008000;">求实根</span><span style="color: #008000;">*/</span><span style="color: #000000;">
            x1 </span>= (-b + sqrt(t)) / (<span style="color: #800080;">2</span> *<span style="color: #000000;"> a);
            x2 </span>= (-b - sqrt(t)) / (<span style="color: #800080;">2</span> *<span style="color: #000000;"> a);
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">有实根为\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">x1=%f\nx2=%f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,x1,x2);
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        {
            p </span>= (-b) / (<span style="color: #800080;">2</span> * a);<span style="color: #008000;">/*</span><span style="color: #008000;">求实部</span><span style="color: #008000;">*/</span><span style="color: #000000;">
            q </span>= sqrt(-t) / (<span style="color: #800080;">2</span> * a);<span style="color: #008000;">/*</span><span style="color: #008000;">求虚部</span><span style="color: #008000;">*/</span><span style="color: #000000;">
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">有虚根为\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f+%f i\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, p, q);
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f-%f i\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, p, q);


        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>输入一个三位正整数，输出百位数，十位数，个位数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/08/11820102.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 08 Nov 2019 06:36:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/08/11820102.html</guid><description><![CDATA[<p>课本例题</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">x,bw,sw,gw分别用来存放三位正整数及其百位，十位和个位数</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">int</span><span style="color: #000000;"> x, bw, sw, gw;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一个三位正整数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">x);
    bw </span>= x / <span style="color: #800080;">100</span><span style="color: #000000;">;
    sw </span>= (x % <span style="color: #800080;">100</span>) / <span style="color: #800080;">10</span><span style="color: #000000;">;
    gw </span>= x % <span style="color: #800080;">10</span><span style="color: #000000;">;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">个位数为%d 十位数为%d 百位数为%d</span><span style="color: #800000;">"</span><span style="color: #000000;">, gw, sw, bw);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>输入身份证号，输出出生日期</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/08/11819921.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 08 Nov 2019 06:15:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/08/11819921.html</guid><description><![CDATA[<p>课本例题</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> year, month, day;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入身份证号码：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%*6d%4d%2d%2d%*d</span><span style="color: #800000;">"</span>, &amp;year, &amp;month, &amp;<span style="color: #000000;">day);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%4d-%02d-%02d</span><span style="color: #800000;">"</span><span style="color: #000000;">, year, month, day);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>比较四个数的大小</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/06/11806139.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 06 Nov 2019 08:28:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/06/11806139.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> a, b,c,d, t;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入四个数a,b，c，d:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d%d%d</span><span style="color: #800000;">"</span>, &amp;a, &amp;b,&amp;c,&amp;<span style="color: #000000;">d);
    </span><span style="color: #0000ff;">if</span> (a &gt;<span style="color: #000000;"> b)
    {
        t </span>=<span style="color: #000000;"> a;
        a </span>=<span style="color: #000000;"> b;
        b </span>=<span style="color: #000000;"> t;

    }
    </span><span style="color: #0000ff;">if</span> (b &gt;<span style="color: #000000;"> c)
    {
        t </span>=<span style="color: #000000;"> b;
        b </span>=<span style="color: #000000;"> c;
        c </span>=<span style="color: #000000;"> t;
    }
    </span><span style="color: #0000ff;">if</span> (c &gt;<span style="color: #000000;"> d)
    {
        t </span>=<span style="color: #000000;"> c;
        c </span>=<span style="color: #000000;"> d;
        d </span>=<span style="color: #000000;"> t; 
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">最大数为%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, d);


}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>比较三个数的大小</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/06/11806107.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 06 Nov 2019 08:24:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/06/11806107.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> a, b,c, t;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入三个数a,b，c:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d%d</span><span style="color: #800000;">"</span>, &amp;a, &amp;b,&amp;<span style="color: #000000;">c);
    </span><span style="color: #0000ff;">if</span> (a &gt;<span style="color: #000000;"> b)
    {
        t </span>=<span style="color: #000000;"> a;
        a </span>=<span style="color: #000000;"> b;
        b </span>=<span style="color: #000000;"> t;

    }
    </span><span style="color: #0000ff;">if</span> (b &gt;<span style="color: #000000;"> c) 
    {
        t </span>=<span style="color: #000000;"> b;
        b </span>=<span style="color: #000000;"> c;
        c </span>=<span style="color: #000000;"> t;
    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">最大数为%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, c);


}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>比较两个数的大小</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/06/11806074.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 06 Nov 2019 08:20:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/06/11806074.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{ 
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> a, b, t;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入两个数a,b:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d</span><span style="color: #800000;">"</span>, &amp;a, &amp;<span style="color: #000000;">b);
    </span><span style="color: #0000ff;">if</span> (a &gt;<span style="color: #000000;"> b)
    {
        t </span>=<span style="color: #000000;"> a;
        a </span>=<span style="color: #000000;"> b;
        b </span>=<span style="color: #000000;"> t;

    }
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">最大数为%d\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, b);


}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>输入一个字母判断是否为小写</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/06/11805959.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 06 Nov 2019 08:08:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/06/11805959.html</guid><description><![CDATA[<p>如果是小写并转换为大写，如果不是直接输出</p>
<p>程序框图</p>
<p><a href="https://sm.ms/image/qYFlIPbJBir4UgS" target="_blank"><img src="https://i.loli.net/2019/11/10/qYFlIPbJBir4UgS.jpg" alt="" /></a></p>
<p>代码</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span><span style="color: #000000;"> a;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入一个字母:\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">a);
    </span><span style="color: #0000ff;">if</span> (a &gt;= <span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span> &amp;&amp; a &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c\n</span><span style="color: #800000;">"</span>, a - <span style="color: #800080;">32</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,a);
    
    

}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>输入两个正整数num1、num2,计算并输出它们的和、差、积、整数商和余数</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/06/11803957.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 06 Nov 2019 03:12:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/06/11803957.html</guid><description><![CDATA[<p>课本例题</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">/*</span><span style="color: #008000;">输入两个正整数num1、num2,计算并输出它们的和、差、积、整数商和余数。</span><span style="color: #008000;">*/</span><span style="color: #000000;">
#include</span>&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> num1, num2;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入两个正整数：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d%d</span><span style="color: #800000;">"</span>,&amp;num1,&amp;<span style="color: #000000;">num2);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">和为：%d\n差为：%d\n积为%d\n整数商为：%d\n余数为：%d\n</span><span style="color: #800000;">"</span>, num1 + num2, num1 - num2, num1 * num2, num1 / num2, num1 %<span style="color: #000000;"> num2);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;

}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>闰年的判断</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/06/11803818.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 06 Nov 2019 02:55:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/06/11803818.html</guid><description><![CDATA[<p>根据课本编写，自己添加了一丢丢</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> year,a;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入年份：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">year);
    a </span>= ((year % <span style="color: #800080;">4</span> == <span style="color: #800080;">0</span>) &amp;&amp; (year % <span style="color: #800080;">100</span> != <span style="color: #800080;">0</span>)) || (year % <span style="color: #800080;">400</span> == <span style="color: #800080;">0</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (a == <span style="color: #800080;">1</span><span style="color: #000000;">)
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">闰年\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">不是闰年\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);

        
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>2019最新百度网盘不限速下载教程</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11801026.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 11:37:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11801026.html</guid><description><![CDATA[<p>浏览器不同，方法可能不同，请以实际为准!</p>
<p>以Kiwi浏览器为例</p>
<p>1.将你的浏览器的UA修改为欧朋</p>
<p>&nbsp;</p>
<p><a href="https://sm.ms/image/1zrTZCPVgdny3JW" target="_blank"><img src="https://i.loli.net/2019/11/05/1zrTZCPVgdny3JW.png" alt="" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>2.安装这个脚本</p>
<p>https://github.com/syhyz1990/baiduyun</p>
<p>&nbsp;</p>
<p><a href="https://sm.ms/image/UpqkFfjRVH49AEh" target="_blank"><img src="https://i.loli.net/2019/11/05/UpqkFfjRVH49AEh.png" alt="" /></a></p>
<p>&nbsp;</p>
<p>3.打开你要下载的网盘链接，用那个脚本获取直链</p>
<p>&nbsp;</p>
<p><a href="https://sm.ms/image/qKTzlQpYxE1Dcod" target="_blank"><img src="https://i.loli.net/2019/11/05/qKTzlQpYxE1Dcod.png" alt="" /></a></p>
<p>&nbsp;</p>
<p>4.使用ADM或IDM+下载即可（我使用的校园网，so可能没那么快!）</p>
<p><a href="https://sm.ms/image/LUC6uAdKVhOwk1m" target="_blank"><img src="https://i.loli.net/2019/11/05/LUC6uAdKVhOwk1m.jpg" alt="" /></a></p>
<p>&nbsp;QQ群</p>
<p><a href="https://sm.ms/image/z2y41wvJThfO5IQ" target="_blank"><img src="https://i.loli.net/2019/11/05/z2y41wvJThfO5IQ.jpg" alt="" /></a></p>]]></description></item><item><title>《C语言程序设计》王希杰 课后答案</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799749.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 09:08:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799749.html</guid><description><![CDATA[<p>仅供参考，好好学习，不要骗自己哦!</p>
<p>在线预览</p>
<p><iframe src="https://www.kdocs.cn/l/shOy4IgXl" scrolling="yes" width="320" height="240"></iframe></p>
<p>预览链接:</p>
<p>https://www.kdocs.cn/l/shOy4IgXl</p>
<p>下载:</p>
<p>链接1:</p>
<p>http://t.cn/AiBK2mgJ</p>
<p>链接2:</p>
<p>https://pan.baidu.com/s/18FtVvUjwKBVH7NAP6kounQ&nbsp;提取码:r44a</p>]]></description></item><item><title>一个C语言程序是由( )组成?</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799178.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 08:14:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799178.html</guid><description><![CDATA[<p>A) 一个主程序和若干子程序组成</p>
<p>B)一个或多个函数组成</p>
<p>C) 若干过程组成</p>
<p>D) 若干子程序组成</p>
<p>&nbsp;</p>
<p>正确答案</p>
<p>B</p>
<p>&nbsp;</p>
<p>解析</p>
<p>[解析] 一个C源程序是由一个main函数和若干个其他函数组成的。函数是C程序的基本单位，被调用的函数可以是系统提供的库函数，也可以是用户根据需要自己定义的函数。</p>]]></description></item><item><title>在一个C程序中，main()函数可以放在哪?</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799110.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 08:04:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799110.html</guid><description><![CDATA[<p>C语言规定，在一个C程序中，main()函数的位置（）。</p>
<p>&nbsp;</p>
<p>A．必须在系统调用的库函数之后</p>
<p>B．必须在程序的开始</p>
<p>C．必须在程序的最后</p>
<p>D．可以在任意位置</p>
<p>答案:D</p>
<p>&nbsp;</p>
<p>[解析] 每个C程序有且只有一个主函数(main)，且程序必须从main()函数开始执行，而且main()函数可以放在程序中的任意位置。</p>
<p>&nbsp;</p>]]></description></item><item><title>一个c程序的执行是从什么开始的?</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799040.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 07:57:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799040.html</guid><description><![CDATA[<div class="aw-people-detail">
<div class="mod-head clearfix">
<div class="title clearfix">
<div class="pull-left pull-left-add"><img class="img-polaroid yxl-zoom" title="办公-笔记本946.jpg" src="http://img.xiuchuang.com/questions/20190614/a464ce248431544bf5878f9dac1d29ce.jpg" alt="办公-笔记本946.jpg" data-index="0" /></div>
</div>
</div>
</div>
<div class="aw-question-detail">
<div id="c_more" class="mod-body">
<div class="markitup-box clearfix case-content"><br />一个C语言的执行是从本程序的main函数开始，到main函数结束，但需要注意的是，也是有特殊情况的，若是代码中出现了exit函数，则直接结束程序，对于这一点还是需要了解的。<br />&nbsp;<br />关于c语言需要了解的是，C语言用scanf()、printf()函数作入输入、输出函数，相对来说用法较复杂。而且C语言的最大优点是编译后代码运行效率接近汇编程序，速度快，资源占用少。因此早期很多重要应用软件、支撑软件甚至系统软件是用C语言编写。<br /><br />不仅如此，C语言也是在计算机中比较实用的程序设计工具，掌握的了c语言之后，对用户在日后学习JAVA、C++、VB等都是有好处的，可以打下良好的基础，主要是因为这些语言大部分都是由C语言扩充或衍生而来的。<br /><br />资料拓展：C语言是一门面向过程、抽象化的通用程序设计语言，广泛应用于底层开发。C语言能以简易的方式编译、处理低级存储器。C语言是仅产生少量的机器语言以及不需要任何运行环境支持便能运行的高效率程序设计语言。</div>


</div>


</div>]]></description></item><item><title>C语言特点有哪些?</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799009.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 07:54:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11799009.html</guid><description><![CDATA[<p>C语言的特点 ：&nbsp;<br />1、简洁紧凑、灵活方便</p>
<p>C语言一共只有32个关键字,9种控制语句，程序书写自由，主要用小写字母表示。它把高级语言的基本结构和语句与低级语言的实用性结合起来。 C 语言可以象汇编语言一样对位、字节和地址进行操作, 而这三者是计算机最基本的工作单元。<br />2、运算符丰富</p>
<p>C的运算符包含的范围很广泛，共有种34个运算符。C语言把括号、赋值、强制类型转换等都作为运算符处理。从而使C的运算类型极其丰富表达式类型多样化，灵活使用各种运算符可以实现在其它高级语言中难以实现的运算。<br />3、数据结构丰富</p>
<p>C的数据类型有:整型、实型、字符型、数组类型、指针类型、结构体类型、共用体类型等。能用来实现各种复杂的数据类型的运算。并引入了指针概念,使程序效率更高。另外C语言具有强大的图形功能, 支持多种显示器和驱动器。且计算功能、逻辑判断功能强大。<br />4、C是结构式语言</p>
<p>结构式语言的显著特点是代码及数据的分隔化,即程序的各个部分除了必要的信息交流外彼此独立。这种结构化方式可使程序层次清晰, 便于使用、维护以及调试。C语言是以函数形式提供给用户的,这些函数可方便的调用,并具有多种循环、条件语句控制程序流向,从而使程序完全结构化。<br />5、C语法限制不太严格、程序设计自由度大</p>
<p>一般的高级语言语法检查比较严，能够检查出几乎所有的语法错误。而C语言允许程序编写者有较大的自由度。<br />6、C语言允许直接访问物理地址，可以直接对硬件进行操作</p>
<p>因此既具有高级语言的功能，又具有低级语言的许多功能，能够象汇编语言一样对位、字节和地址进行操作,而这三者是计算机最基本的工作单元，可以用来写系统软件。<br />7、C语言程序生成代码质量高，程序执行效率高</p>
<p>一般只比汇编程序生成的目标代码效率低10へ20%。<br />8、 C语言适用范围大，可移植性好</p>
<p>C语言有一个突出的优点就是适合于多种操作系统, 如DOS、UNIX,也适用于多种机型。</p>
<p>用法补充:C语言对操作系统和系统使用程序以及需要对硬件进行操作的场合，用C语言明显优于其它高级语言，许多大型应用软件都是用C语言编写的。 C语言具有绘图能力强，可移植性，并具备很强的数据处理能力，因此适于编写系统软件，三维，二维图形和动画它是数值计算的高级语言。</p>
<p><a class="ikqb_img_alink" title="点击查看大图" href="https://gss0.baidu.com/-Po3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/0df3d7ca7bcb0a4621b4dd4a6663f6246b60af2b.jpg" target="_blank" data-size="240x160"><img class="ikqb_img" src="https://gss0.baidu.com/-Po3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/0df3d7ca7bcb0a4621b4dd4a6663f6246b60af2b.jpg" alt="" /></a></p>
<h2>扩展资料：</h2>
<p>特有特点</p>
<p>1、C语言是一个有结构化程序设计、具有变量作用域（variable scope）以及递归功能的过程式语言。</p>
<p>2、C语言传递参数均是以值传递（pass by value），另外也可以传递指针（a pointer passed by value）。</p>
<p>3、不同的变量类型可以用结构体（struct）组合在一起。</p>
<p>4、只有32个保留字（reserved keywords），使变量、函数命名有更多弹性。</p>
<p>5、部份的变量类型可以转换，例如整型和字符型变量。</p>
<p>6、通过指针（pointer），C语言可以容易的对存储器进行低级控制。</p>
<p>7、预编译处理（preprocessor）让C语言的编译更具有弹性。</p>]]></description></item><item><title>442个超实用电脑快捷键大全！总有你会用上的</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11798221.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 06:22:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11798221.html</guid><description><![CDATA[<p>&nbsp;</p>
<p><img src="http://n.sinaimg.cn/sinacn15/62/w640h2622/20180512/9b36-hamfahx0624711.jpg" alt="" /></p>
<p>Mac、Windows、Word、Excel、PPT、Photoshop，常用快捷键大全！试试看吧！值得记下的Excel快捷键：①Ctrl+Home，移动到工作表开头；②Shift+F5，弹出&ldquo;查找&rdquo;对话框；③Ctrl+D，向下填充；④=（等号），输入公式；⑤Ctrl+9，隐藏选定的行；⑥Shift+PageDown/Up，将选定区域向下/上扩展一屏。via@央视新闻</p>
<p><img src="http://n.sinaimg.cn/sinacn15/689/w640h3249/20180512/3237-hamfahx0626671.jpg" alt="" /></p>
<p>Mac、Windows、Word、Excel、PPT、Photoshop，常用快捷键大全！试试看吧！值得记下的Excel快捷键：①Ctrl+Home，移动到工作表开头；②Shift+F5，弹出&ldquo;查找&rdquo;对话框；③Ctrl+D，向下填充；④=（等号），输入公式；⑤Ctrl+9，隐藏选定的行；⑥Shift+PageDown/Up，将选定区域向下/上扩展一屏。via@央视新闻</p>
<p><img src="http://n.sinaimg.cn/sinacn15/637/w640h5597/20180512/ea92-hamfahx0627122.jpg" alt="" /></p>
<p>Mac、Windows、Word、Excel、PPT、Photoshop，常用快捷键大全！试试看吧！值得记下的Excel快捷键：①Ctrl+Home，移动到工作表开头；②Shift+F5，弹出&ldquo;查找&rdquo;对话框；③Ctrl+D，向下填充；④=（等号），输入公式；⑤Ctrl+9，隐藏选定的行；⑥Shift+PageDown/Up，将选定区域向下/上扩展一屏。via@央视新闻</p>
<p><img src="http://n.sinaimg.cn/sinacn15/428/w640h1388/20180512/060c-hamfahx0627619.jpg" alt="" /></p>
<p>Mac、Windows、Word、Excel、PPT、Photoshop，常用快捷键大全！试试看吧！值得记下的Excel快捷键：①Ctrl+Home，移动到工作表开头；②Shift+F5，弹出&ldquo;查找&rdquo;对话框；③Ctrl+D，向下填充；④=（等号），输入公式；⑤Ctrl+9，隐藏选定的行；⑥Shift+PageDown/Up，将选定区域向下/上扩展一屏。via@央视新闻</p>
<p><img src="http://n.sinaimg.cn/sinacn15/260/w640h5220/20180512/b36e-hamfahx0628067.jpg" alt="" /></p>
<p>Mac、Windows、Word、Excel、PPT、Photoshop，常用快捷键大全！试试看吧！值得记下的Excel快捷键：①Ctrl+Home，移动到工作表开头；②Shift+F5，弹出&ldquo;查找&rdquo;对话框；③Ctrl+D，向下填充；④=（等号），输入公式；⑤Ctrl+9，隐藏选定的行；⑥Shift+PageDown/Up，将选定区域向下/上扩展一屏。via@央视新闻</p>
<p><img src="http://n.sinaimg.cn/sinacn15/304/w640h1264/20180512/55be-hamfahx0628480.jpg" alt="" /></p>
<p>Mac、Windows、Word、Excel、PPT、Photoshop，常用快捷键大全！试试看吧！值得记下的Excel快捷键：①Ctrl+Home，移动到工作表开头；②Shift+F5，弹出&ldquo;查找&rdquo;对话框；③Ctrl+D，向下填充；④=（等号），输入公式；⑤Ctrl+9，隐藏选定的行；⑥Shift+PageDown/Up，将选定区域向下/上扩展一屏。via@央视新闻</p>
<p><img src="http://n.sinaimg.cn/sinacn15/746/w640h1706/20180512/573c-hamfahx0628803.jpg" alt="" /></p>
<p>Mac、Windows、Word、Excel、PPT、Photoshop，常用快捷键大全！试试看吧！值得记下的Excel快捷键：①Ctrl+Home，移动到工作表开头；②Shift+F5，弹出&ldquo;查找&rdquo;对话框；③Ctrl+D，向下填充；④=（等号），输入公式；⑤Ctrl+9，隐藏选定的行；⑥Shift+PageDown/Up，将选定区域向下/上扩展一屏。via@央视新闻</p>]]></description></item><item><title>在电脑上顿号咋打？</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/05/11798015.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 05 Nov 2019 05:55:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/05/11798015.html</guid><description><![CDATA[<p>按照以下步骤可以打出顿号：</p>
<p>1、首先将输入法的中英文切换到中文，如图所圈出的位置；</p>
<p><a class="ikqb_img_alink" title="点击查看大图" href="https://gss0.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/279759ee3d6d55fbd67186a261224f4a21a4ddfb.jpg" rel="nofollow noopener" target="_blank"><img class="ikqb_img" src="https://gss0.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=af65b3bd4736acaf59b59efa4ce9a128/279759ee3d6d55fbd67186a261224f4a21a4ddfb.jpg" alt="" /></a></p>
<p>2、在键盘上敲击下图所圈出的键，便可打出顿号。（有的电脑敲击&ldquo;\&rdquo;按键哦！）</p>
<p><a class="ikqb_img_alink" title="点击查看大图" href="https://gss0.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/83025aafa40f4bfbda436ed00f4f78f0f63618a6.jpg" rel="nofollow noopener" target="_blank"><img class="ikqb_img" src="https://gss0.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=295494892a9759ee4a0568cd82cb6f2e/83025aafa40f4bfbda436ed00f4f78f0f63618a6.jpg" alt="" /></a></p>
<p>需注意的是，如果输入法在英文模式，打出来的则是&ldquo;/&rdquo;这个符号。</p>]]></description></item><item><title>C语言实例——判断是否为闰年</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/04/11793210.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 04 Nov 2019 09:26:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/04/11793210.html</guid><description><![CDATA[<p>实例要求从键盘输入任意年份的整数 N，通过程序运行判断该年份是否为闰年。</p>
<h2>算法思想</h2>
<p>判断任意年份是否为闰年，需要满足以下条件中的任意一个：<br />① 该年份能被 4 整除同时不能被 100 整除；<br />② 该年份能被400整除。<br /><br />本实例中使用嵌入式 if-else 语句。</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> year,a;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入年份：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf_s(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">year);
    </span><span style="color: #0000ff;">if</span> (year % <span style="color: #800080;">400</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
        a </span>= <span style="color: #800080;">1</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    {
        </span><span style="color: #0000ff;">if</span> (year % <span style="color: #800080;">4</span> == <span style="color: #800080;">0</span> &amp;&amp; year % <span style="color: #800080;">100</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
            a </span>= <span style="color: #800080;">1</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
            a </span>= <span style="color: #800080;">0</span><span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">if</span>(a==<span style="color: #800080;">1</span><span style="color: #000000;">)
    {
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">该年份为闰年\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    {
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">该年份不是闰年\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    }


}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C 语言实例 - 判断三边能否构成三角形</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/04/11793087.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 04 Nov 2019 09:08:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/04/11793087.html</guid><description><![CDATA[<p><strong>原理：</strong></p>
<p><strong>要判断输入的三条边能否够成三角形，只需满足条件两边之和大于第三边即可。</strong></p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">请输入三个边长：\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">float</span> a, b, c;<span style="color: #008000;">//</span><span style="color: #008000;">定义变量</span>
    scanf_s(<span style="color: #800000;">"</span><span style="color: #800000;">%f%f%f</span><span style="color: #800000;">"</span>, &amp;a, &amp;b, &amp;c);<span style="color: #008000;">//</span><span style="color: #008000;">输入边长</span>
    <span style="color: #0000ff;">if</span>(a + b &gt; c&amp;&amp; a + c &gt; b&amp;&amp; b + c &gt; a)<span style="color: #008000;">//</span><span style="color: #008000;">判断是否可以构成三角形</span>
<span style="color: #000000;">    
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">可以构成三角形\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">不可以构成三角形\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;

}</span></pre>
</div>
<p>例如：输入 3 4 5</p>
<p>输出&ldquo;可以构成三角形&rdquo;</p>]]></description></item><item><title>C语言程序的错误和警告</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791484.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 04 Nov 2019 04:44:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791484.html</guid><description><![CDATA[<p>一段C语言代码，在编译、链接和运行的各个阶段都可能会出现问题。编译器只能检查编译和链接阶段出现的问题，而可执行程序已经脱离了编译器，运行阶段出现问题编译器是无能为力的。<br /><br />如果我们编写的代码正确，运行时会提示没有错误（Error）和警告（Warning），如下图所示：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181224/1F9245932-0.png" alt="Dev C++ 的提示" /><br />图1：Dev&nbsp;C++&nbsp;的提示<br /><br /><img src="http://c.biancheng.net/uploads/allimg/181224/1F9243550-1.png" alt="VC 6.0 的提示" /><br />图2：VC 6.0 的提示<br /><br /><img src="http://c.biancheng.net/uploads/allimg/181224/1F924H21-2.png" alt="C-Free 5.0 的提示" /><br />图3：C-Free 5.0 的提示</div>
<blockquote>对于 VS、GCC、Xcode 等，如果代码没有错误，它们只会显示&ldquo;生成成功&rdquo;，不会显示&ldquo;0个错误，0个警告&rdquo;，只有代码真的出错了，它们才会显示具体的错误信息。</blockquote>
<p>
错误（Error）表示程序不正确，不能正常编译、链接或运行，必须要纠正。<br /><br />警告（Warning）表示可能会发生错误（实际上未发生）或者代码不规范，但是程序能够正常运行，有的警告可以忽略，有的要引起注意。<br /><br />错误和警告可能发生在编译、链接、运行的任何时候。<br /><br />例如，<code>puts("C语言中文网")</code>最后忘记写分号<code>;</code>，就会出现错误，如下图所示：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181224/1F92435Z-3.png" alt="VS2015 的错误提示" /><br />图4：VS2015 的错误提示<br /><br /><img src="http://c.biancheng.net/uploads/allimg/181224/1F9241626-4.png" alt="Dev C++ 的错误提示" /><br />图5：Dev C++ 的错误提示<br /><br /><img src="http://c.biancheng.net/uploads/allimg/181224/1F92425a-5.png" alt="VC 6.0 的错误提示" /><br />图6：VC 6.0 的错误提示<br /><br /><img src="http://c.biancheng.net/uploads/allimg/181224/1F9244595-6.png" alt="C-Free 5.0 的错误提示" /><br />图7：C-Free 5.0 的错误提示</div>
<p>
<br />可以看出，C-Free 的错误提示信息比较少，不方便程序员纠错。VC 和 VS 的错误信息类似，只是中英文的差别。<br /><br />下图分析了 VC 6.0 的错误信息：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181224/1F924H52-7.png" alt="错误信息说明" /><br />图8：错误信息说明</div>
<p>
<br />翻译：源文件&nbsp;E:\cDemo\hello.c 第5行发生了语法错误，错误代码是&nbsp;C2143，原因是&nbsp;'return' 前面丢失了 ';'。<br /><br />我敢保证，你写的代码肯定会发生错误，一定要有分析错误的能力，这是一个合格的程序员必备的技能。</p>]]></description></item><item><title>C语言运算符优先级和结合性一览表</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791479.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 04 Nov 2019 04:42:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791479.html</guid><description><![CDATA[<div id="arc-body">所谓优先级就是当一个表达式中有多个运算符时，先计算谁，后计算谁。这个其实我们在小学学算术的时候就学过，如<code>1+4&divide;2</code>。<br /><br />但是<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>中的运算符已经远不止四则运算中的加减乘除了，还有其他很多运算符。当它们出现在同一个表达式中时先计算谁后计算谁呢？所以本节还是有必要讲一下的。最后我还会将所有运算符展示出来，然后告诉你哪个优先级高、哪个优先级低。<br /><br />首先不需要专门记忆，也没有必要。因为作为初学者，哪个优先级高、哪个优先级低我们很难记住。就算死记硬背记住了，时间长不用也会忘记。所以当一个表达式中有多个运算符时，如果不知道哪个优先级高哪个优先级低就查一下优先级表，附录E有一个运算符优先级表。此外用的时间长了自然而然就记住了，这样记才会记得深刻。<br /><br />而且事实上在编程的时候也不需要考虑优先级的问题。因为如果不知道优先级高低的话，加一个括号就可以了，因为括号<code>( )</code>的优先级是最高的。比如前面的程序中：
<p class="info-box">k = (j&gt;i) &amp;&amp; (8==i);</p>

根据运算符的优先级，这条语句完全可以写成：
<p class="info-box">k = j&gt;i &amp;&amp; 8==i;</p>

但是第一种写法别人一看就知道先计算谁后计算谁。<br /><br />而且加圆括号也是一种编程规范，因为程序不只是写给自己看。<br /><br />此外运算符还有&ldquo;目&rdquo;和&ldquo;结合性&rdquo;的概念，这个很简单。&ldquo;目&rdquo;就是&ldquo;眼睛&rdquo;的意思，一个运算符需要几个数就叫&ldquo;几目&rdquo;。比如加法运算符<code>+</code>，要使用这个运算符需要两个数，如 3+2。对<code>+</code>而言，3 和 2 就像它的两只眼睛，所以这个运算符是双目的。<br /><br />C语言中大多数的运算符都是双目的，也有单目和三目的。单目运算符比如逻辑非，如<code>!1</code>，它就只有一只眼睛，所以是单目的。整个C语言中只有一个三目运算符，即条件运算符<code>? :</code>。这个稍后讲到条件语句的时候再介绍。关于&ldquo;目&rdquo;大家了解一下就行了。<br /><br />那么&ldquo;结合性&rdquo;是什么呢？上面讲的优先级都是关于优先级不同的运算符参与运算时先计算谁后计算谁。但是如果运算符的优先级相同，那么先计算谁后计算谁呢？这个就是由&ldquo;结合性&rdquo;决定的。<br /><br />比如<code>1+2&times;3&divide;4</code>，乘和除的优先级相同，但是计算的时候是从左往右，即先计算乘再计算除，所以乘和除的结合性就是从左往右。就是这么简单！<br /><br />C语言中大多数运算符的结合性都是从左往右，只有三个运算符是从右往左的。一个是单目运算符，另一个是三目运算符，还有一个就是双目运算符中的赋值运算符<code>=</code>。双目运算符中只有赋值运算符的结合性是从右往左的，其他的都是从左往右。运算符的&ldquo;结合性&rdquo;也不要死记，在不断使用中就记住了。
<h2>运算符优先级和结合性一览表</h2>
<table>
<tbody>
<tr><th>
<p>优先级</p>

</th><th>
<p>运算符</p>

</th><th>
<p>名称或含义</p>

</th><th>
<p>使用形式</p>

</th><th>
<p>结合方向</p>

</th><th>
<p>说明</p>

</th></tr>
<tr>
<td rowspan="4">
<p>1</p>

</td>
<td>
<p>[]</p>

</td>
<td>
<p>数组下标</p>

</td>
<td>
<p>数组名[常量表达式]</p>

</td>
<td rowspan="4">
<p>左到右</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>()</p>

</td>
<td>
<p>圆括号</p>

</td>
<td>
<p>(表达式)<br />函数名(形参表)</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>.</p>

</td>
<td>
<p>成员选择（对象）</p>

</td>
<td>
<p>对象.成员名</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>-&gt;</p>

</td>
<td>
<p>成员选择（指针）</p>

</td>
<td>
<p>对象指针-&gt;成员名</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td rowspan="9">
<p>2</p>

</td>
<td>
<p>-</p>

</td>
<td>
<p>负号运算符</p>

</td>
<td>
<p>-表达式</p>

</td>
<td rowspan="9">
<p>右到左</p>

</td>
<td>
<p>单目运算符</p>

</td>

</tr>
<tr>
<td>
<p>(类型)</p>

</td>
<td>
<p>强制类型转换</p>

</td>
<td>
<p>(数据类型)表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>++</p>

</td>
<td>
<p>自增运算符</p>

</td>
<td>
<p>++变量名<br />变量名++</p>

</td>
<td>
<p>单目运算符</p>

</td>

</tr>
<tr>
<td>
<p>--</p>

</td>
<td>
<p>自减运算符</p>

</td>
<td>
<p>--变量名<br />变量名--</p>

</td>
<td>
<p>单目运算符</p>

</td>

</tr>
<tr>
<td>
<p>*</p>

</td>
<td>
<p>取值运算符</p>

</td>
<td>
<p>*指针变量</p>

</td>
<td>
<p>单目运算符</p>

</td>

</tr>
<tr>
<td>
<p>&amp;</p>

</td>
<td>
<p>取地址运算符</p>

</td>
<td>
<p>&amp;变量名</p>

</td>
<td>
<p>单目运算符</p>

</td>

</tr>
<tr>
<td>
<p>!</p>

</td>
<td>
<p>逻辑非运算符</p>

</td>
<td>
<p>!表达式</p>

</td>
<td>
<p>单目运算符</p>

</td>

</tr>
<tr>
<td>
<p>~</p>

</td>
<td>
<p>按位取反运算符</p>

</td>
<td>
<p>~表达式</p>

</td>
<td>
<p>单目运算符</p>

</td>

</tr>
<tr>
<td>
<p>sizeof</p>

</td>
<td>
<p>长度运算符</p>

</td>
<td>
<p>sizeof(表达式)</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td rowspan="3">
<p>3</p>

</td>
<td>
<p>/</p>

</td>
<td>
<p>除</p>

</td>
<td>
<p>表达式 / 表达式</p>

</td>
<td rowspan="3">
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>*</p>

</td>
<td>
<p>乘</p>

</td>
<td>
<p>表达式*表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>%</p>

</td>
<td>
<p>余数（取模）</p>

</td>
<td>
<p>整型表达式%整型表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td rowspan="2">
<p>4</p>

</td>
<td>
<p>+</p>

</td>
<td>
<p>加</p>

</td>
<td>
<p>表达式+表达式</p>

</td>
<td rowspan="2">
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>-</p>

</td>
<td>
<p>减</p>

</td>
<td>
<p>表达式-表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td rowspan="2">
<p>5</p>

</td>
<td>
<p>&lt;&lt;</p>

</td>
<td>
<p>左移</p>

</td>
<td>
<p>变量&lt;&lt;表达式</p>

</td>
<td rowspan="2">
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>&gt;&gt;</p>

</td>
<td>
<p>右移</p>

</td>
<td>
<p>变量&gt;&gt;表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td rowspan="4">
<p>6</p>

</td>
<td>
<p>&gt;</p>

</td>
<td>
<p>大于</p>

</td>
<td>
<p>表达式&gt;表达式</p>

</td>
<td rowspan="4">
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>&gt;=</p>

</td>
<td>
<p>大于等于</p>

</td>
<td>
<p>表达式&gt;=表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>&lt;</p>

</td>
<td>
<p>小于</p>

</td>
<td>
<p>表达式&lt;表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>&lt;=</p>

</td>
<td>
<p>小于等于</p>

</td>
<td>
<p>表达式&lt;=表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td rowspan="2">
<p>7</p>

</td>
<td>
<p>==</p>

</td>
<td>
<p>等于</p>

</td>
<td>
<p>表达式==表达式</p>

</td>
<td rowspan="2">
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>!=</p>

</td>
<td>
<p>不等于</p>

</td>
<td>
<p>表达式!= 表达式</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>8</p>

</td>
<td>
<p>&amp;</p>

</td>
<td>
<p>按位与</p>

</td>
<td>
<p>表达式&amp;表达式</p>

</td>
<td>
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>9</p>

</td>
<td>
<p>^</p>

</td>
<td>
<p>按位异或</p>

</td>
<td>
<p>表达式^表达式</p>

</td>
<td>
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>10</p>

</td>
<td>
<p>|</p>

</td>
<td>
<p>按位或</p>

</td>
<td>
<p>表达式|表达式</p>

</td>
<td>
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>11</p>

</td>
<td>
<p>&amp;&amp;</p>

</td>
<td>
<p>逻辑与</p>

</td>
<td>
<p>表达式&amp;&amp;表达式</p>

</td>
<td>
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>12</p>

</td>
<td>
<p>||</p>

</td>
<td>
<p>逻辑或</p>

</td>
<td>
<p>表达式||表达式</p>

</td>
<td>
<p>左到右</p>

</td>
<td>
<p>双目运算符</p>

</td>

</tr>
<tr>
<td>
<p>13</p>

</td>
<td>
<p>?:</p>

</td>
<td>
<p>条件运算符</p>

</td>
<td>
<p>表达式1? 表达式2: 表达式3</p>

</td>
<td>
<p>右到左</p>

</td>
<td>
<p>三目运算符</p>

</td>

</tr>
<tr>
<td rowspan="11">
<p>14</p>

</td>
<td>
<p>=</p>

</td>
<td>
<p>赋值运算符</p>

</td>
<td>
<p>变量=表达式</p>

</td>
<td rowspan="11">
<p>右到左</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>/=</p>

</td>
<td>
<p>除后赋值</p>

</td>
<td>
<p>变量/=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>*=</p>

</td>
<td>
<p>乘后赋值</p>

</td>
<td>
<p>变量*=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>%=</p>

</td>
<td>
<p>取模后赋值</p>

</td>
<td>
<p>变量%=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>+=</p>

</td>
<td>
<p>加后赋值</p>

</td>
<td>
<p>变量+=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>-=</p>

</td>
<td>
<p>减后赋值</p>

</td>
<td>
<p>变量-=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>&lt;&lt;=</p>

</td>
<td>
<p>左移后赋值</p>

</td>
<td>
<p>变量&lt;&lt;=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>&gt;&gt;=</p>

</td>
<td>
<p>右移后赋值</p>

</td>
<td>
<p>变量&gt;&gt;=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>&amp;=</p>

</td>
<td>
<p>按位与后赋值</p>

</td>
<td>
<p>变量&amp;=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>^=</p>

</td>
<td>
<p>按位异或后赋值</p>

</td>
<td>
<p>变量^=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>|=</p>

</td>
<td>
<p>按位或后赋值</p>

</td>
<td>
<p>变量|=表达式</p>

</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>
<p>15</p>

</td>
<td>
<p>,</p>

</td>
<td>
<p>逗号运算符</p>

</td>
<td>
<p>表达式,表达式,&hellip;</p>

</td>
<td>
<p>左到右</p>

</td>
<td>
<p>&nbsp;</p>

</td>

</tr>

</tbody>

</table>

<br />上表中可以总结出如下规律：<ol>
<li>结合方向只有三个是从右往左，其余都是从左往右。</li>
<li>所有双目运算符中只有赋值运算符的结合方向是从右往左。</li>
<li>另外两个从右往左结合的运算符也很好记，因为它们很特殊：一个是单目运算符，一个是三目运算符。</li>
<li>C语言中有且只有一个三目运算符。</li>
<li>逗号运算符的优先级最低，要记住。</li>
<li>此外要记住，对于优先级：算术运算符 &gt; 关系运算符 &gt; 逻辑运算符 &gt; 赋值运算符。逻辑运算符中&ldquo;逻辑非 !&rdquo;除外。</li>

</ol>
<h2>一些容易出错的优先级问题</h2>

上表中，优先级同为1 的几种运算符如果同时出现，那怎么确定表达式的优先级呢？这是很多初学者迷糊的地方。下表就整理了这些容易出错的情况：<br /><br />
<table>
<tbody>
<tr><th>优先级问题</th><th>表达式</th><th>经常误认为的结果</th><th>实际结果</th></tr>
<tr>
<td>. 的优先级高于 *（-&gt; 操作符用于消除这个问题）</td>
<td>*p.f</td>
<td>p 所指对象的字段 f，等价于：<br />(*p).f</td>
<td>对 p 取&nbsp;f&nbsp;偏移，作为指针，然后进行解除引用操作，等价于：<br />*(p.f)</td>

</tr>
<tr>
<td>[] 高于 *</td>
<td>int *ap[]</td>
<td>ap&nbsp;是个指向&nbsp;int&nbsp;数组的指针，等价于：<br />int (*ap)[]</td>
<td>ap&nbsp;是个元素为&nbsp;int&nbsp;指针的数组，等价于：<br />int *(ap [])</td>

</tr>
<tr>
<td>函数 () 高于 *</td>
<td>int *fp()</td>
<td>fp&nbsp;是个函数指针，所指函数返回&nbsp;int，等价于：<br />int (*fp)()</td>
<td>fp 是个函数，返回&nbsp;int*，等价于：<br />int* ( fp() )</td>

</tr>
<tr>
<td>== 和 != 高于位操作</td>
<td>(val&nbsp;&amp;&nbsp;mask != 0)</td>
<td>(val&nbsp;&amp;mask) != 0</td>
<td>val &amp;&nbsp;(mask != 0)</td>

</tr>
<tr>
<td>== 和 != 高于赋值符</td>
<td>c = getchar() != EOF</td>
<td>(c = getchar()) != EOF</td>
<td>c = (getchar() != EOF)</td>

</tr>
<tr>
<td>算术运算符高于位移 运算符</td>
<td>msb &lt;&lt;&nbsp;4 + lsb</td>
<td>(msb &lt;&lt;&nbsp;4) + lsb</td>
<td>msb &lt;&lt;&nbsp;(4 + lsb)</td>

</tr>
<tr>
<td>逗号运算符在所有运 算符中优先级最低</td>
<td>i = 1, 2</td>
<td>i = (1,2)</td>
<td>(i = 1),&nbsp;2</td>

</tr>

</tbody>

</table>

<br />这些容易出错的情况，希望读者好好在编译器上调试调试，这样印象会深一些。一定要多调试，光靠看代码，水平是很难提上来的。调试代码才是最长水平的。</div>
<div id="ad-arc-bottom">&nbsp;</div>
<div id="ad-bottom-weixin" class="clearfix">&nbsp;</div>]]></description></item><item><title>逻辑运算符及其优先级，C语言逻辑运算符及其优先级详解</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791471.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 04 Nov 2019 04:40:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791471.html</guid><description><![CDATA[<p>C 语言提供了以下三种逻辑运算符。</p>
<ol>
<li>&nbsp;一元：！（逻辑非）。</li>
<li>&nbsp;二元：&amp;&amp;（逻辑与）、||（逻辑或）。</li>
</ol>
<p><br />以上三种逻辑运算符中，逻辑非 ! 的优先级最高，逻辑与 &amp;&amp; 次之，逻辑或&nbsp; ||&nbsp; 优先级最低。即算术、逻辑、赋值运算符的优先级顺序为：</p>
<p class="info-box">逻辑非 ! &gt;算术 &gt; 逻辑与 &amp;&amp;、逻辑或 || &gt; 赋值=</p>
<p>
逻辑表达式的值为逻辑值，即布尔型（bool），该类型为 C99 新增的，一些编译器可能还不支持该类型。<br /><br />逻辑值分为逻辑真值和逻辑假值。一般情况下，在判断时，仅有零值被判断为逻辑假值（false），一切非零值均可被判断为逻辑真值（true）；在存储和表示时，通常，使用 1 表示逻辑真值，0表示逻辑假值。<br /><br />逻辑与 &amp;&amp; 运算符的运算规则：只有两个操作数均为逻辑真时，结果才为真。其余情况，结果均为假。<br /><br />逻辑或 || 运算符的运算规则：只有两个操作数均为逻辑假时，结果才为假。其余情况，结果均为真。<br /><br />例如，设有定义语句</p>
<div class="snippet-container">
<div class="sh_bright snippet-wrap"><ol class="snippet-num">
<li><span class="sh_type">int a<span class="sh_symbol">=<span class="sh_number">3<span class="sh_symbol">,b<span class="sh_symbol">=<span class="sh_number">5<span class="sh_symbol">;</span></span></span></span></span></span></span></li>

</ol></div>

</div>
<p>
则有:</p>
<ul>
<li>!a：由于 a 非零，为真，!a 为假，其值为 0。</li>
<li>a||b：由于 a 和 b 均非零，均为真，故逻辑或的结果为真，其值为 1。</li>
<li>a&amp;&amp;b：由于 a 和 b 均非零，均为真，故逻辑与的结果为真，其值为 1。</li>
<li>!a||b&amp;&amp;2：由于逻辑非 ! 优先级最高，首先与 a 结合，而 &amp;&amp; 优先级高于 ||，相当于（!a)||(b&amp;&amp;2)，&nbsp;即 0||1 为真，其值为 1。</li>

</ul>
<p>
<br />逻辑与 &amp;&amp;、逻辑或 || 均有&ldquo;短路&rdquo;特性:</p>
<ul>
<li>逻辑与&amp;&amp;&ldquo;短路&rdquo;：当逻辑与&amp;&amp;的左操作数为逻辑假时，就足以判断该逻辑运算的结果为假了，故右操作数就不再被执行。</li>
<li>逻辑或||&ldquo;短路&rdquo;：当逻辑或||的左操作数为逻辑真时，就足以判断该逻辑运算的结果为真了，故右操作数就不再被执行。</li>

</ul>
<p>
<br />例如：</p>
<div class="snippet-container">
<div class="sh_bright snippet-wrap"><ol class="snippet-num">
<li><span class="sh_type">int a<span class="sh_symbol">=<span class="sh_number">1<span class="sh_symbol">,b<span class="sh_symbol">=<span class="sh_number">2<span class="sh_symbol">,c<span class="sh_symbol">;</span></span></span></span></span></span></span></span></li>
<li>c<span class="sh_symbol">=a<span class="sh_symbol">||++b<span class="sh_symbol">;</span></span></span></li>
<li><span class="sh_function">printf<span class="sh_symbol">(<span class="sh_string">"a=%d,b=%d,c=%d<span class="sh_specialchar">\n<span class="sh_string">"<span class="sh_symbol">,a<span class="sh_symbol">,b<span class="sh_symbol">,c<span class="sh_symbol">);</span></span></span></span></span></span></span></span></span></li>

</ol></div>

</div>
<p>
由于 a 为非零值，即为真，而当逻辑或 || 的左操作数为真时，就足以判断该逻辑操作的结果为真。故发生&ldquo;短路&rdquo;，即右操作数 ++b 不被执行。输出结果为：a=1,b=2,c=1。<br /><br />分析以下程序，输出其运行结果。</p>
<div class="snippet-container">
<div class="sh_bright snippet-wrap"><ol class="snippet-num">
<li><span class="sh_preproc">#include<span class="sh_string">&lt;stdio.h&gt;</span></span></li>
<li><span class="sh_type">int <span class="sh_function">main<span class="sh_symbol">(<span class="sh_type">void<span class="sh_symbol">)</span></span></span></span></span></li>
<li><span class="sh_cbracket">{</span></li>
<li>    <span class="sh_type">int a<span class="sh_symbol">=<span class="sh_number">0<span class="sh_symbol">,b<span class="sh_symbol">=<span class="sh_number">2<span class="sh_symbol">,c<span class="sh_symbol">;</span></span></span></span></span></span></span></span></li>
<li>    c<span class="sh_symbol">=!a<span class="sh_symbol">||++b<span class="sh_symbol">&amp;&amp;a<span class="sh_symbol">--;</span></span></span></span></li>
<li>    <span class="sh_function">printf<span class="sh_symbol">(<span class="sh_string">"a=%d,b=%d,c=%d<span class="sh_specialchar">\n<span class="sh_string">"<span class="sh_symbol">,a<span class="sh_symbol">,b<span class="sh_symbol">,c<span class="sh_symbol">);</span></span></span></span></span></span></span></span></span></li>
<li>    <span class="sh_keyword">return <span class="sh_number">0<span class="sh_symbol">;</span></span></span></li>
<li><span class="sh_cbracket">}</span></li>

</ol></div>

</div>
<p>
代码分析：<br />混合表达式 c=!a||++b&amp;&amp;a-- 中含有的运算符有逻辑非 ！、逻辑或 ||、逻辑与 &amp;&amp;、算术前缀 ++、算术后缀 --、赋值号 = 等6个运算符。逻辑运算符、算术运算符、赋值运算符的优先级的关系为：</p>
<p class="info-box">逻辑非! &gt; 算术 &gt; 逻辑与&amp;&amp;、逻辑或 || &gt; 赋值 =</p>
<p>
由于该表达式中赋值运算符优先级最低，故最后赋值。<br /><br />根据优先级的高低，表达式 !a||++b&amp;&amp;a-- 等价于 (!a)||((++b)&amp;&amp;(a--))，而逻辑或 || 的左操作数 !a 为真，此时足以判断该表达式的值为真。故发生&ldquo;短路&rdquo;，即 || 的整个右操作数 ((++b)&amp;&amp;(a--)) 不再被执行。<br /><br />运行结果为：<br />a=0,b=2,c=1</p>]]></description></item><item><title>C 语言实例 - 判断闰年</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791455.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 04 Nov 2019 04:28:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/04/11791455.html</guid><description><![CDATA[<p>用户输入年份，判断该年份是否为闰年。</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> year;
 
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入年份: </span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>,&amp;<span style="color: #000000;">year);
 
    </span><span style="color: #0000ff;">if</span>(year%<span style="color: #800080;">4</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">if</span>( year%<span style="color: #800080;">100</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
        {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 这里如果被 400 整数是闰年</span>
            <span style="color: #0000ff;">if</span> ( year%<span style="color: #800080;">400</span> == <span style="color: #800080;">0</span><span style="color: #000000;">)
                printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d 是闰年</span><span style="color: #800000;">"</span><span style="color: #000000;">, year);
            </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
                printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d 不是闰年</span><span style="color: #800000;">"</span><span style="color: #000000;">, year);
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d 是闰年</span><span style="color: #800000;">"</span><span style="color: #000000;">, year );
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d 不是闰年</span><span style="color: #800000;">"</span><span style="color: #000000;">, year);
    
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>运行结果：</p>
<pre class="prettyprint prettyprinted"><span class="pun">输入年份:<span class="pln"> <span class="lit">1990<span class="pln">
<span class="lit">1990<span class="pln"> <span class="pun">不是闰年</span></span></span></span></span></span></span></pre>]]></description></item><item><title>电脑不显示桌面怎么办？</title><link>http://www.cnblogs.com/HGNET/archive/2019/11/02/11784656.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 02 Nov 2019 14:57:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/11/02/11784656.html</guid><description><![CDATA[<div class="exp-content-block">
<div class="exp-content-body exp-brief-step">
<div class="exp-content-listblock">
<div class="content-listblock-text">电脑不显示桌面怎么办，相信很多朋友们遇到过这种类似的问题，你们对于这类问题如何解决呢？下面就给大家分享一下个人经验，希望可以帮助到大家。</div>
</div>
</div>
</div>
<div class="exp-content-block">
<h2 class="exp-content-head"><a name="section-2"></a>工具/原料</h2>
<div class="audio-wp audio-wp-2" data-text="" data-for="" data-index="1">&nbsp;</div>
<div class="exp-content-body">
<ul class="exp-content-unorderlist ">
<li class="exp-content-list list-item-1">
<div class="content-list-text">软件版本：Windows10任务管理器</div>
</li>
<li class="exp-content-list list-item-2">
<div class="content-list-text">适用系统：Windows</div>
</li>
</ul>
</div>
</div>
<div class="exp-content-block">
<h2 class="exp-content-head"><a name="section-3"></a>方法/步骤</h2>
<div class="audio-wp audio-wp-2" data-text="" data-for="" data-index="2">&nbsp;</div>
<div class="exp-content-body"><ol class="exp-conent-orderlist">
<li class="exp-content-list list-item-1">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">首先按住 &ldquo;ctrl+alt+delete&rdquo; 调出页面。</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/656db9184e4eb3a380249c6c.html?picindex=1" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=89e774f0a6ec8a13141a57e0c7029157/d62a6059252dd42af6ff51b40c3b5bb5c9eab83f.jpg" alt="电脑不显示桌面怎么办" /></a></div>
</div>
</li>
<li class="exp-content-list list-item-2">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">点击右上角的文件，选择 &ldquo;运行新任务&rdquo; 。</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/656db9184e4eb3a380249c6c.html?picindex=2" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=eeba3712299759ee4a5060cb82fb434e/14ce36d3d539b600dcb35ca8e650352ac65cb7b4.jpg" alt="电脑不显示桌面怎么办" /></a></div>
</div>
</li>
<li class="exp-content-list list-item-3">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">切换为英文输入法，输入 &ldquo;explorer&rdquo; 再点击确定。</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/656db9184e4eb3a380249c6c.html?picindex=3" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=efa0faadde58ccbf1bbcb53a29d9bcd4/d788d43f8794a4c22160b43401f41bd5ad6e3969.jpg" alt="电脑不显示桌面怎么办" /></a></div>
</div>
</li>
<li class="exp-content-list list-item-4">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">或在桌面右击鼠标，点击查看栏的 &ldquo;显示桌面图标&rdquo; 即可。</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/656db9184e4eb3a380249c6c.html?picindex=4" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=e2d88530b1096b6381195e503c328733/96dda144ad3459825a29a78d03f431adcbef840a.jpg" alt="电脑不显示桌面怎么办" /></a></div>
</div>
</li>
<li class="exp-content-list list-item-5">
<div class="list-icon">&nbsp;</div>
<div class="content-list-text">总结如下。</div>
<div class="content-list-media">
<div class="content-list-image clearfix"><a class="exp-image-wraper" href="http://jingyan.baidu.com/album/656db9184e4eb3a380249c6c.html?picindex=5" target="_self"><img class="exp-image-default" src="https://imgsa.baidu.com/exp/w=500/sign=e0d3f509c0fc1e17fdbf8c317a91f67c/f3d3572c11dfa9ec296914086dd0f703918fc16e.jpg" alt="电脑不显示桌面怎么办" /></a></div>
</div>
</li>
</ol></div>
</div>]]></description></item><item><title>135编辑器安卓客户端</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/30/11768426.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 30 Oct 2019 14:24:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/30/11768426.html</guid><description><![CDATA[<p>这个安卓APP是我自己开发的，方便大家排版，欢迎下载</p>
<p>应用截图：</p>
<p><img src="https://i.loli.net/2019/10/30/tBZXxwMjlPVbRUa.png" alt="" width="1080" height="2340" /></p>
<p>&nbsp;</p>
<p>下载链接：</p>
<p>https://www.lanzous.com/i6pv4qh</p>
<p><img src="https://i.loli.net/2019/10/30/CdjIbi83PSylMRO.png" alt="扫描二维码下载" width="190" height="190" /></p>]]></description></item><item><title>C语言实例-大小写字母间的转换</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/30/11765634.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 30 Oct 2019 08:21:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/30/11765634.html</guid><description><![CDATA[<p>初学C语言都会遇到要求写大小写转换的题目</p>
<p>这类题目主要通过ASCII（美国信息交换标准代码）码差值实现，A对应ASCII码十进制数字是65，a对应ASCII码十进制数字是97，即大小写字母之间ASCII码差值为32，想要将大写字母转换为小写字母可以将该字符ASCII码值+32，同理小写字母转换成大写字母只需将该字符ASCII码值-32</p>
<p>代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;"> 1</span> #include&lt;stdio.h&gt;
<span style="color: #008080;"> 2</span> 
<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
</span><span style="color: #008080;"> 4</span> <span style="color: #000000;">{
</span><span style="color: #008080;"> 5</span>     <span style="color: #0000ff;">char</span><span style="color: #000000;"> ch1,ch2,c1,c2;
</span><span style="color: #008080;"> 6</span>     ch1=<span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 7</span>     ch2=<span style="color: #800000;">'</span><span style="color: #800000;">A</span><span style="color: #800000;">'</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 8</span>     c1=ch1-<span style="color: #800080;">32</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 9</span>     c2=ch2+<span style="color: #800080;">32</span><span style="color: #000000;">;
</span><span style="color: #008080;">10</span>     printf(<span style="color: #800000;">"</span><span style="color: #800000;">%c,%c\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,ch1,ch2);
</span><span style="color: #008080;">11</span>     printf(<span style="color: #800000;">"</span><span style="color: #800000;">%c,%c\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,c1,c2);
</span><span style="color: #008080;">12</span>     <span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
</span><span style="color: #008080;">13</span> <span style="color: #000000;">}
</span><span style="color: #008080;">14</span>  </pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C 语言实例 - 二进制与十进制相互转换</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763785.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 30 Oct 2019 03:22:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763785.html</guid><description><![CDATA[<h2 class="example">实例 - 二进制转换为十进制</h2>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;<span style="color: #000000;">
#include </span>&lt;math.h&gt;
 
<span style="color: #0000ff;">int</span> convertBinaryToDecimal(<span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span><span style="color: #000000;"> n);
 
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span><span style="color: #000000;"> n;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入一个二进制数: </span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%lld</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">n);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">二进制数 %lld 转换为十进制为 %d</span><span style="color: #800000;">"</span><span style="color: #000000;">, n, convertBinaryToDecimal(n));
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}
 
</span><span style="color: #0000ff;">int</span> convertBinaryToDecimal(<span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span><span style="color: #000000;"> n)
{
    </span><span style="color: #0000ff;">int</span> decimalNumber = <span style="color: #800080;">0</span>, i = <span style="color: #800080;">0</span><span style="color: #000000;">, remainder;
    </span><span style="color: #0000ff;">while</span> (n!=<span style="color: #800080;">0</span><span style="color: #000000;">)
    {
        remainder </span>= n%<span style="color: #800080;">10</span><span style="color: #000000;">;
        n </span>/= <span style="color: #800080;">10</span><span style="color: #000000;">;
        decimalNumber </span>+= remainder*pow(<span style="color: #800080;">2</span><span style="color: #000000;">,i);
        </span>++<span style="color: #000000;">i;
    }
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> decimalNumber;
}</span></pre>
</div>
<p>输出结果为：</p>
<pre class="prettyprint prettyprinted"><span class="pun">输入一个二进制数:<span class="pln"> <span class="lit">110110111<span class="pln">
<span class="pun">二进制数<span class="pln"> <span class="lit">110110111<span class="pln"> <span class="pun">转换为十进制为<span class="pln"> <span class="lit">439</span></span></span></span></span></span></span></span></span></span></span><br /><br /></pre>
<h2 class="example">实例 - 十进制转换为二进制</h2>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;<span style="color: #000000;">
#include </span>&lt;math.h&gt;
 
<span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> convertDecimalToBinary(<span style="color: #0000ff;">int</span><span style="color: #000000;"> n);
 
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> n;
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入一个十进制数: </span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%d</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">n);
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">十进制数 %d 转换为二进制位 %lld</span><span style="color: #800000;">"</span><span style="color: #000000;">, n, convertDecimalToBinary(n));
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}
 
</span><span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> convertDecimalToBinary(<span style="color: #0000ff;">int</span><span style="color: #000000;"> n)
{
    </span><span style="color: #0000ff;">long</span> <span style="color: #0000ff;">long</span> binaryNumber = <span style="color: #800080;">0</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">int</span> remainder, i = <span style="color: #800080;">1</span>, step = <span style="color: #800080;">1</span><span style="color: #000000;">;
 
    </span><span style="color: #0000ff;">while</span> (n!=<span style="color: #800080;">0</span><span style="color: #000000;">)
    {
        remainder </span>= n%<span style="color: #800080;">2</span><span style="color: #000000;">;
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Step %d: %d/2, 余数 = %d, 商 = %d\n</span><span style="color: #800000;">"</span>, step++, n, remainder, n/<span style="color: #800080;">2</span><span style="color: #000000;">);
        n </span>/= <span style="color: #800080;">2</span><span style="color: #000000;">;
        binaryNumber </span>+= remainder*<span style="color: #000000;">i;
        i </span>*= <span style="color: #800080;">10</span><span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> binaryNumber;
}</span></pre>
</div>
<p>输出结果为：</p>
<pre class="prettyprint prettyprinted"><span class="pun">输入一个十进制数:<span class="pln"> <span class="lit">100<span class="pln">
<span class="typ">Step<span class="pln"> <span class="lit">1<span class="pun">:<span class="pln"> <span class="lit">100<span class="pun">/<span class="lit">2<span class="pun">,<span class="pln"> <span class="pun">余数<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">0<span class="pun">,<span class="pln"> <span class="pun">商<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">50<span class="pln">
<span class="typ">Step<span class="pln"> <span class="lit">2<span class="pun">:<span class="pln"> <span class="lit">50<span class="pun">/<span class="lit">2<span class="pun">,<span class="pln"> <span class="pun">余数<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">0<span class="pun">,<span class="pln"> <span class="pun">商<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">25<span class="pln">
<span class="typ">Step<span class="pln"> <span class="lit">3<span class="pun">:<span class="pln"> <span class="lit">25<span class="pun">/<span class="lit">2<span class="pun">,<span class="pln"> <span class="pun">余数<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">1<span class="pun">,<span class="pln"> <span class="pun">商<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">12<span class="pln">
<span class="typ">Step<span class="pln"> <span class="lit">4<span class="pun">:<span class="pln"> <span class="lit">12<span class="pun">/<span class="lit">2<span class="pun">,<span class="pln"> <span class="pun">余数<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">0<span class="pun">,<span class="pln"> <span class="pun">商<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">6<span class="pln">
<span class="typ">Step<span class="pln"> <span class="lit">5<span class="pun">:<span class="pln"> <span class="lit">6<span class="pun">/<span class="lit">2<span class="pun">,<span class="pln"> <span class="pun">余数<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">0<span class="pun">,<span class="pln"> <span class="pun">商<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">3<span class="pln">
<span class="typ">Step<span class="pln"> <span class="lit">6<span class="pun">:<span class="pln"> <span class="lit">3<span class="pun">/<span class="lit">2<span class="pun">,<span class="pln"> <span class="pun">余数<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">1<span class="pun">,<span class="pln"> <span class="pun">商<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">1<span class="pln">
<span class="typ">Step<span class="pln"> <span class="lit">7<span class="pun">:<span class="pln"> <span class="lit">1<span class="pun">/<span class="lit">2<span class="pun">,<span class="pln"> <span class="pun">余数<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">1<span class="pun">,<span class="pln"> <span class="pun">商<span class="pln"> <span class="pun">=<span class="pln"> <span class="lit">0<span class="pln">
<span class="pun">十进制数<span class="pln"> <span class="lit">100<span class="pln"> <span class="pun">转换为二进制位<span class="pln"> <span class="lit">1100100</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre>]]></description></item><item><title>C 语言实例 - 循环输出26个字母</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763712.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 30 Oct 2019 03:15:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763712.html</guid><description><![CDATA[<p>循环输出 26 个字母。</p>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span><span style="color: #000000;"> c;
 
    </span><span style="color: #0000ff;">for</span>(c = <span style="color: #800000;">'</span><span style="color: #800000;">A</span><span style="color: #800000;">'</span>; c &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">Z</span><span style="color: #800000;">'</span>; ++<span style="color: #000000;">c)
       printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c </span><span style="color: #800000;">"</span><span style="color: #000000;">, c);
    
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>运行结果：</p>
<pre class="prettyprint prettyprinted"><span class="pln">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</span><br /><br /></pre>
<h2 class="example">实例 - 输出大写或小写字母</h2>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">char</span><span style="color: #000000;"> c;
 
    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入 u 显示大写字母，输入 l 显示小写字母: </span><span style="color: #800000;">"</span><span style="color: #000000;">);
    scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c</span><span style="color: #800000;">"</span>, &amp;<span style="color: #000000;">c);
 
    </span><span style="color: #0000ff;">if</span>(c== <span style="color: #800000;">'</span><span style="color: #800000;">U</span><span style="color: #800000;">'</span> || c== <span style="color: #800000;">'</span><span style="color: #800000;">u</span><span style="color: #800000;">'</span><span style="color: #000000;">)
    {
       </span><span style="color: #0000ff;">for</span>(c = <span style="color: #800000;">'</span><span style="color: #800000;">A</span><span style="color: #800000;">'</span>; c &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">Z</span><span style="color: #800000;">'</span>; ++<span style="color: #000000;">c)
         printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c </span><span style="color: #800000;">"</span><span style="color: #000000;">, c);
    }
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (c == <span style="color: #800000;">'</span><span style="color: #800000;">L</span><span style="color: #800000;">'</span> || c == <span style="color: #800000;">'</span><span style="color: #800000;">l</span><span style="color: #800000;">'</span><span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">for</span>(c = <span style="color: #800000;">'</span><span style="color: #800000;">a</span><span style="color: #800000;">'</span>; c &lt;= <span style="color: #800000;">'</span><span style="color: #800000;">z</span><span style="color: #800000;">'</span>; ++<span style="color: #000000;">c)
         printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%c </span><span style="color: #800000;">"</span><span style="color: #000000;">, c);
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
       printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">Error! 输入非法字符。</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<pre class="prettyprint prettyprinted"><span class="pun">输入<span class="pln"> u <span class="pun">显示大写字母，输入<span class="pln"> l <span class="pun">显示小写字母。<span class="pln">
a b c d e f g h i j k l m n o p q r s t u v w x y z</span></span></span></span></span></span></pre>]]></description></item><item><title>C 语言实例 - 约瑟夫生者死者小游戏</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763598.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 30 Oct 2019 03:04:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763598.html</guid><description><![CDATA[<p>30 个人在一条船上，超载，需要 15 人下船。</p>
<p>于是人们排成一队，排队的位置即为他们的编号。</p>
<p>报数，从 1 开始，数到 9 的人下船。</p>
<p>如此循环，直到船上仅剩 15 人为止，问都有哪些编号的人下船了呢？</p>
<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt;
 
<span style="color: #0000ff;">int</span> c = <span style="color: #800080;">0</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">int</span> i = <span style="color: #800080;">1</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">int</span> j = <span style="color: #800080;">0</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">int</span> a[<span style="color: #800080;">30</span>] = { <span style="color: #800080;">0</span><span style="color: #000000;"> };
</span><span style="color: #0000ff;">int</span> b[<span style="color: #800080;">30</span>] = { <span style="color: #800080;">0</span><span style="color: #000000;"> };
 
</span><span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
    </span><span style="color: #0000ff;">while</span> (i&lt;=<span style="color: #800080;">31</span><span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">if</span> (i == <span style="color: #800080;">31</span><span style="color: #000000;">)
        {
            i </span>= <span style="color: #800080;">1</span><span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (c == <span style="color: #800080;">15</span><span style="color: #000000;">)
        {
            </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        {
            </span><span style="color: #0000ff;">if</span> (b[i] != <span style="color: #800080;">0</span><span style="color: #000000;">)
            {
                i</span>++<span style="color: #000000;">;
                </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
            {
                j</span>++<span style="color: #000000;">;
                </span><span style="color: #0000ff;">if</span> (j != <span style="color: #800080;">9</span><span style="color: #000000;">)
                {
                    i</span>++<span style="color: #000000;">;
                    </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
                }
                </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
                {
                    b[i] </span>= <span style="color: #800080;">1</span><span style="color: #000000;">;
                    a[i] </span>=<span style="color: #000000;"> j;
                    j </span>= <span style="color: #800080;">0</span><span style="color: #000000;">;
                    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">第%d号下船了\n</span><span style="color: #800000;">"</span><span style="color: #000000;">, i);
                    i</span>++<span style="color: #000000;">;
                    c</span>++<span style="color: #000000;">;
                }
            }
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C 语言实例 - 输出九九乘法口诀表</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763577.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 30 Oct 2019 03:01:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/30/11763577.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>#include&lt;stdio.h&gt; 
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main(){  
    </span><span style="color: #008000;">//</span><span style="color: #008000;">外层循环变量,控制行  </span>
    <span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span><span style="color: #000000;">;  
    </span><span style="color: #008000;">//</span><span style="color: #008000;">内层循环变量,控制列   </span>
    <span style="color: #0000ff;">int</span> j = <span style="color: #800080;">0</span><span style="color: #000000;">;   
    </span><span style="color: #0000ff;">for</span>(i=<span style="color: #800080;">1</span>;i&lt;=<span style="color: #800080;">9</span>;i++<span style="color: #000000;">){  
        </span><span style="color: #0000ff;">for</span>(j=<span style="color: #800080;">1</span>;j&lt;=i;j++<span style="color: #000000;">){  
            printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%dx%d=%d\t</span><span style="color: #800000;">"</span>,j,i,i*<span style="color: #000000;">j);  
        }  
        </span><span style="color: #008000;">//</span><span style="color: #008000;">每行输出完后换行   </span>
        printf(<span style="color: #800000;">"</span><span style="color: #800000;">\n</span><span style="color: #800000;">"</span><span style="color: #000000;">);     
    }  
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>Visual Studio 2019 C语言编程环境搭建大法</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11756025.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 14:27:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11756025.html</guid><description><![CDATA[<p>有许多人不会安装，so有了这个教程</p>
<p>1.从官方网站下载Visual&nbsp;Studio&nbsp;2019&nbsp;Professionalan安装器</p>
<p>传送门：<br />https://visualstudio.microsoft.com/zh-hans/thank-you-downloading-visual-studio/?sku=Professional&amp;rel=16</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191028221459875-675821146.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>2.安装安装器并打开，选择&ldquo;使用c++的桌面开发&rdquo;</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191028221758246-1128076455.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;注意：尽量不要安装在c盘</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191028221942717-1030696859.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 然后开始下载，下载结束，打开软件</p>
<p><img src="https://i.loli.net/2019/10/28/YnXZgUS27wu3LVB.jpg" alt="" width="1851" height="961" /></p>
<p>4.打开菜单栏里的&ldquo;帮助&rdquo;，选择&ldquo;注册产品&rdquo;，输入Visual&nbsp;Studio&nbsp;2019&nbsp;Professional激活码进行激活<br />NYWVH-HT4XC-R2WYW-9Y3CM-X4V3Y</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191028222518674-738795590.png" alt="" /></p>
<p>5.开始你的编程之路</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191028222715619-92831541.png" alt="" /></p>
<p>&nbsp;</p>]]></description></item><item><title>HTML之marquee(文字滚动)详解</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11754022.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 10:00:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11754022.html</guid><description><![CDATA[<p><strong>语法：</strong></p>
<p><strong>&lt;marquee&gt;&lt;/marquee&gt;</strong></p>
<p>以下是一个最简单的例子：</p>
<p>代码如下:</p>
<p>&lt;marquee&gt;&lt;font size=+3 color=red&gt;Hello, World&lt;/font&gt;&lt;/marquee&gt;</p>
<p>下面这两个事件经常用到：</p>
<p>onMouseOut="this.start()" ：用来设置鼠标移出该区域时继续滚动</p>
<p>onMouseOver="this.stop()"：用来设置鼠标移入该区域时停止滚动</p>
<p>代码如下:</p>
<p>&lt;marquee onMouseOut="this.start()" onMouseOver="this.stop()"&gt;onMouseOut="this.start()" ：用来设置鼠标移出该区域时继续滚动 onMouseOver="this.stop()"：用来设置鼠标移入该区域时停止滚动&lt;/marquee&gt;</p>
<p>这是一个完整的例子：</p>
<p>代码如下:</p>
<p>&lt;marquee id="affiche" align="left" behavior="scroll" bgcolor="#FF0000" direction="up" height="300" width="200" hspace="50" vspace="20" loop="-1" scrollamount="10" scrolldelay="100" onMouseOut="this.start()" onMouseOver="this.stop()"&gt;</p>
<p>这是一个完整的例子</p>
<p>&lt;/marquee&gt;</p>
<p>该标签支持的属性多达11个：</p>
<p>align</p>
<p>设定&lt;marquee&gt;标签内容的对齐方式</p>
<p>absbottom：绝对底部对齐（与g、p等字母的最下端对齐）</p>
<p>absmiddle：绝对中央对齐</p>
<p>baseline：底线对齐</p>
<p>bottom：底部对齐（默认）</p>
<p>left：左对齐</p>
<p>middle：中间对齐</p>
<p>right：右对齐</p>
<p>texttop：顶线对齐</p>
<p>top：顶部对齐</p>
<p>代码如下:</p>
<p>&lt;marquee align="absbottom"&gt;align="absbottom"：绝对底部对齐（与g、p等字母的最下端对齐）。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="absmiddle"&gt;align="absmiddle"： 绝对中央对齐。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="baseline"&gt;align="baseline"： 底线对齐。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="bottom"&gt;align="bottom"： 底部对齐（默认）。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="left"&gt;align="left"： 左对齐。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="middle"&gt;align="middle"： 中间对齐。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="right"&gt;align="right"： 右对齐。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="texttop"&gt;align="texttop"： 顶线对齐。 &lt;/marquee&gt;</p>
<p>&lt;marquee align="top"&gt;align="top"： 顶部对齐。 &lt;/marquee&gt;</p>
<p>behavior</p>
<p>设定滚动的方式：</p>
<p>alternate： 表示在两端之间来回滚动。</p>
<p>scroll： 表示由一端滚动到另一端，会重复。</p>
<p>slide：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 表示由一端滚动到另一端，不会重复。</p>
<p>代码如下:</p>
<p>&lt;marquee behavior="alternate"&gt;alternate：表示在两端之间来回滚动。 &lt;/marquee&gt;</p>
<p>&lt;marquee behavior="scroll"&gt;scroll：表示由一端滚动到另一端，会重复。&lt;/marquee&gt;</p>
<p>&lt;marquee behavior="slide"&gt;slide：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 表示由一端滚动到另一端，不会重复。&lt;/marquee&gt;</p>
<p>bgcolor</p>
<p>设定活动字幕的背景颜色，背景颜色可用RGB、16进制值的格式或颜色名称来设定。</p>
<p>代码如下:</p>
<p>&lt;marquee bgcolor="#006699"&gt;设定活动字幕的背景颜色 bgcolor="#006699"&lt;/marquee&gt;</p>
<p>&lt;marquee bgcolor="RGB(10%,50%,100%,)"&gt;设定活动字幕的背景颜色 bgcolor="rgb(10%,50%,100%,)"&lt;/marquee&gt;</p>
<p>&lt;marquee bgcolor="red"&gt;设定活动字幕的背景颜色 bgcolor="red"&lt;/marquee&gt;</p>
<p>direction</p>
<p>设定活动字幕的滚动方向</p>
<p>代码如下:</p>
<p>&lt;marquee direction="down"&gt;设定活动字幕的滚动方向direction="down"：向下&lt;/marquee&gt;</p>
<p>&lt;marquee direction="left"&gt;设定活动字幕的滚动方向direction="left"：向左&lt;/marquee&gt;</p>
<p>&lt;marquee direction="right"&gt;设定活动字幕的滚动方向direction="right"：向右&lt;/marquee&gt;</p>
<p>&lt;marquee direction="up"&gt;设定活动字幕的滚动方向direction="up"：向上&lt;/marquee&gt;</p>
<p>height</p>
<p>设定活动字幕的高度</p>
<p>代码如下:</p>
<p>&lt;marquee height="500" direction="down" bgcolor="#CCCCCC"&gt;设定活动字幕的高度height="500"&lt;/marquee&gt;</p>
<p>width</p>
<p>设定活动字幕的宽度</p>
<p>代码如下:</p>
<p>&lt;marquee width="500" bgcolor="#CCCCCC"&gt;设定活动字幕的宽度width="500"&lt;/marquee&gt;</p>
<p>hspace</p>
<p>设定活动字幕里所在的位置距离父容器水平边框的距离</p>
<p>This controls the horizontal（水平）space around the display box.</p>
<p>代码如下:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;table width="500" border="1" align="center" cellpadding="0" cellspacing="0"&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;&lt;marquee hspace="100" bgcolor="#CCCCCC"&gt;hspace="100"&lt;/marquee&gt;&lt;/td&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/table&gt;</p>
<p>vspace</p>
<p>设定活动字幕里所在的位置距离父容器垂直边框的距离</p>
<p>This controls the vertical（垂直） space around the display box.</p>
<p>代码如下:</p>
<p>&lt;marquee vspace="100" bgcolor="#CCCCCC"&gt;hspace="100"&lt;/marquee&gt;</p>
<p>loop</p>
<p>设定滚动的次数，当loop=-1表示一直滚动下去，默认为-1</p>
<p>代码如下:</p>
<p>&lt;marquee loop="-1" bgcolor="#CCCCCC"&gt;我会不停地走。&lt;/marquee&gt;</p>
<p>&lt;p&gt;&amp;nbsp;&lt;/p&gt;</p>
<p>&lt;marquee loop="2" bgcolor="#CCCCCC"&gt;我只走两次哦&lt;/marquee&gt;</p>
<p>scrollamount</p>
<p>设定活动字幕的滚动速度，单位pixels</p>
<p>代码如下:</p>
<p>&lt;marquee scrollamount="10" &gt;scrollamount="10" &lt;/marquee&gt;</p>
<p>&lt;marquee scrollamount="20" &gt;scrollamount="20" &lt;/marquee&gt;</p>
<p>&lt;marquee scrollamount="30" &gt;scrollamount="30" &lt;/marquee&gt;</p>
<p>scrolldelay</p>
<p>设定活动字幕滚动两次之间的延迟时间，单位millisecond（毫秒）</p>
<p>值大了会有一步一停顿的效果</p>
<p>代码如下:</p>
<p>&lt;marquee scrolldelay="10" &gt;scrolldelay="10" &lt;/marquee&gt;</p>
<p>&lt;marquee scrolldelay="100" &gt; scrolldelay="100"&lt;/marquee&gt;</p>
<p>&lt;marquee scrolldelay="1000"&gt;scrolldelay="1000" &lt;/marquee&gt;</p>
<p>&nbsp;</p>
<p>&lt;marquee&gt; ... &lt;/marquee&gt;</p>
<p>移动属性的设置 ,这种移动不仅仅局限于文字，也可以应用于图片，表格等等</p>
<p>鼠标属性</p>
<p>onMouseOut=this.start() ........鼠标移出状态滚动</p>
<p>onMouseOver=this.stop() .........鼠标经过时停止滚动</p>
<p>方向</p>
<p>&lt;direction=#&gt; #=left, right ,up ,down &lt;marquee direction=left&gt;从右向左移！&lt;/marquee&gt;</p>
<p>方式</p>
<p>&lt;bihavior=#&gt; #=scroll, slide, alternate &lt;marquee behavior=scroll&gt;一圈一圈绕着走！&lt;/marquee&gt;</p>
<p>&lt;marquee behavior=slide&gt;只走一次就歇了！&lt;/marquee&gt;</p>
<p>&lt;marquee behavior=alternate&gt;来回走&lt;/marquee&gt;</p>
<p>循环</p>
<p>&lt;loop=#&gt; #=次数；若未指定则循环不止(infinite) &lt;marquee loop=3 width=50% behavior=scroll&gt;只走 3 趟&lt;/marquee&gt;</p>
<p>&lt;marquee loop=3 width=50% behavior=slide&gt;只走 3 趟&lt;/marquee&gt;</p>
<p>&lt;marquee loop=3 width=50% behavior=alternate&gt;只走 3 趟！&lt;/marquee&gt;</p>
<p>速度</p>
<p>&lt;scrollamount=#&gt; &lt;marquee scrollamount=20&gt;啦啦啦，我走得好快哟！&lt;/marquee&gt;</p>
<p>延时</p>
<p>&lt;scrolldelay=#&gt; &lt;marquee scrolldelay=500 scrollamount=100&gt;啦啦啦，我走一步，停一停！&lt;/marquee&gt;</p>
<p>外观(Layout)设置</p>
<p>对齐方式(Align)</p>
<p>&lt;align=#&gt; #=top, middle, bottom &lt;font size=6&gt;</p>
<p>&lt;marquee align=# width=400&gt;啦啦啦，我会移动耶！&lt;/marquee&gt;</p>
<p>&lt;/font&gt;</p>
<p>底色</p>
<p>&lt;bgcolor=#&gt; #=rrggbb 16 进制数码，或者是下列预定义色彩：</p>
<p>Black, Olive, Teal, Red, Blue, Maroon, Navy, Gray, Lime,</p>
<p>Fuchsia, White, Green, Purple, Silver, Yellow, Aqua &lt;marquee bgcolor=aaaaee&gt;颜色！&lt;/marquee&gt;</p>
<p>面积</p>
<p>&lt;height=# width=#&gt; &lt;marquee height=40 width=50% bgcolor=aaeeaa&gt;面积！&lt;/marquee&gt;</p>
<p>空白</p>
<p>(Margins)&lt;hspace=# vspace=#&gt;</p>
<p>&lt;marquee hspace=20 vspace=20 width=150 bgcolor=ffaaaa align=middle&gt;面积！&lt;/marquee&gt;</p>
<p>&lt;/P&gt;</p>
<p>&lt;marquee id="iescroller" direction=left height=10 onMouseOut=start(); onMouseOver=stop(); scrollamount=2 scrolldelay=10 scrollleft="0" scrolltop="0" behavior="alternate" bgcolor="#999999" style="color: #ffffff; font-size: 14; font-family: '宋体', 'Arial','Helvetica', 'sans-serif'"title=文字内容&gt; 这是放文字或需要移动的图片（光标放在这里时用INSERT命令就可以插入图片）&lt;/marquee&gt; &lt;/P&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<table border="0" cellspacing="5" cellpadding="0">
<tbody>
<tr>
<td align="middle">marquee的滚动属性参数&nbsp;</td>
</tr>
<tr>
<td>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 从&lt;marquee&gt;开始到&lt;/marquee&gt;结束,其中有很多参数,其实,朋友们还是应用得很多了,让图片滚动起来,也是经常经常应用的,下面对这个网页参数的属性做一些简单的描述;</p>
<p>滚动参数：</p>
<p>1：方向：DIRECTION</p>
<p>left---左（默认）</p>
<p>right---右</p>
<p>up------上</p>
<p>down----下</p>
<p>2：方式：BEHAVIOR</p>
<p>SCROLL -------环绕滚动（默认）</p>
<p>SLIDE---------滚动一次</p>
<p>ALTERNATE-----来回滚动</p>
<p>3：次数：LOOP</p>
<p>当LOOP=-1或LOOP=INFINITE时，则表明文字滚动是无限循环（默认）</p>
<p>4：速度：SCROLLDELAY</p>
<p>任意自然整数</p>
<p>5：对齐：ALIGN</p>
<p>TOP---------对齐上方</p>
<p>MIDDLE------对齐中部</p>
<p>BOTTOM------对齐下方</p>
<p>6：鼠标的划过与离开</p>
<p>onMouseOver=this.stop(); onMouseOut=this.start();</p>
<p>划过停止滚动。离开，继续滚动</p>
<p>有了以上参数。我们就很容易制作出一个logo图片的任意滚动方式，例如：</p>
<p>&lt;marquee width=120 height=200 DIRECTION=up BEHAVIOR=ALTERNATE SCROLLDELAY=120 ALIGN=MIDDLE onMouseOver=this.stop(); onMouseOut=this.start();&gt;&lt;a href=http://qjpz.com&gt;&lt;img src=http://qjpz.com/bbs/images/logo.gif border=0&gt;&lt;marquee&gt;</p>
<p>很容易对照出。这是一个滚动速度为120MM，从下到上碰壁即返回并对齐中间，鼠标划过图标即停止，点击图标进入〈千娇论坛〉的一个来回滚动的代码。</p>
<p>在背景图片上做滚动字幕</p>
<p>&lt;TABLE width="500" border=0&gt;</p>
<p>&lt;TBODY&gt;</p>
<p>&lt;TR&gt;</p>
<p>&lt;TD background=背景图片地址 height=250&gt;</p>
<p>&lt;P&gt;&lt;MARQUEE scrollAmount=2 scrollDelay=50 direction=up width=200 height=200 behavior=scroll&gt;要滚动的文字&lt;/MARQUEE&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;</p>
<p>参数设置：</p>
<p>a）scrollAmount表示速度，值越大速度越快。如果没有它，默认为6，建议设为1～3比较好</p>
<p>b）scrollDelay也是用来控制速度的，表示走走停停，默认为90，值越大，速度越慢。通常scrollDelay是不需要设置的。</p>
<p>c）direction很明显是表示滚动的方向，默认为从右向左：&larr;，因此如果是向左滚动的话不需要次参数。其他可选的值还有right，down，up。滚动方向分别为：right表示&rarr;，up表示&uarr;，down表示&darr;。</p>
<p>d）width和height用来表示滚动区域的大小，width是宽度，height是高度。特别是在做垂直滚动的时候，一定要设height的值。</p>
<p>e）behavior是来控制滚动属性的，默认为循环滚动(scroll)，同样，如果是循环滚动的话可以不需要此参数。其他可选的值还有alternate(交替滚动)，slide(幻灯片效果，指的是滚动一次，然后停止滚动)。</p>
<p>f）每行字的前后&lt;FONT color=#990066 size=4 face=隶书&gt;和&lt;/FONT&gt;用定义每行字的颜色，大小和字体，如果哪项不需要的话，把代码去掉就行。</p>
</td>
</tr>
</tbody>
</table>
<p>图片滚动<br />用&lt;img src=相对路径/文件名&gt;的语句。并且要注意图片名不要中文，要注意区分英文大小写。<br /><br />图片做超链接<br />用&lt;a href=&gt;和&lt;/a&gt;把&lt;img&gt;包围，并且img必须设border=0，否则图片会出现蓝框。</p>
<p>正确的例子如：</p>
<p>&lt;a href=http://www.sina.com.cn/&gt;&lt;img src=../../j/01.jpg border=0&gt;&lt;/a&gt;<br />其中a href=表示超链接，这是最常用的。练习的方法也很简单，就是平时用FP或DW做网页的时候，要多查看源代码。<br /><br />多张图片排列滚动<br />通常图片和图片之间用&lt;br&gt;(回行)或&lt;p style=margin-top:9&gt;(精确调整图片间的距离)来链接。也可以把你的图片先用表格排版，然后把这个表格的所有语句也加入到marquee中，让这个表格来滚动。<br />代码如：</p>
<p>&lt;script&gt;document.write('&lt;marquee scrollAmount=2 width=340 height=160 direction=up onmouseover=stop() onmouseout=start()&gt;&lt;a href=http://www.sina.com.cn/&gt;&lt;img src=../../j/01.jpg border=0&gt;&lt;/a&gt;&lt;/marquee&gt;')&lt;/script&gt;&nbsp;</p>]]></description></item><item><title>一款好看的404页面代码 | 滚动的404</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11753287.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 08:39:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11753287.html</guid><description><![CDATA[<p><img src="https://sm.ms/image/7xp2RK5nMLPTkqr" alt="" /></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">doctype html</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">meta </span><span style="color: #ff0000;">charset</span><span style="color: #0000ff;">="utf-8"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>网站404<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">style</span><span style="color: #0000ff;">&gt;</span><span style="background-color: #f5f5f5; color: #800000;">
body </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  background</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> #000</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  height</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 100vh</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  overflow</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> hidden</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  display</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> flex</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  font-family</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 'Anton', sans-serif</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  justify-content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  align-items</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-perspective</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 1000px</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          perspective</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 1000px</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">

div </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform-style</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> preserve-3d</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform-style</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> preserve-3d</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">

.rail </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  position</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> absolute</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  width</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 100%</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  height</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 100%</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  display</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> flex</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  justify-content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  align-items</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(-30deg) rotateY(-30deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(-30deg) rotateY(-30deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  position</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> absolute</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  width</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 200px</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  height</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 200px</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  display</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> flex</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  justify-content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  align-items</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  background</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> #141414</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  color</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> #fff</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  font-size</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 7rem</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(1) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -2300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -2300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(2) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -4300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -4300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(3) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -6300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -6300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(4) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -8300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -8300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(5) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -10300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -10300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(6) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -12300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -12300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(7) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -14300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -14300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(8) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -16300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -16300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(9) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -18300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -18300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(10) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -20300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -20300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(11) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -22300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -22300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(12) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -24300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -24300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(13) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -26300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -26300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(14) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -28300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -28300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(15) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -30300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -30300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(16) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -32300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -32300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(17) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -34300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -34300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(18) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -36300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -36300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(19) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -38300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -38300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.rail .stamp:nth-child(20) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -40300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> stampSlide 40000ms -40300ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">

@-webkit-keyframes stampSlide </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(130px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(130px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(-3870px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(-3870px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}

@keyframes stampSlide </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(130px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(130px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(-3870px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) rotateZ(-90deg) translateZ(-200px) translateY(-3870px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}
.world </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(-30deg) rotateY(-30deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(-30deg) rotateY(-30deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .forward </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  position</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> absolute</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> slide 2000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> slide 2000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  width</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 200px</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  height</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 200px</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform-origin</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 100% 100%</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform-origin</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 100% 100%</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> roll 2000ms cubic-bezier(1, 0.01, 1, 1) infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> roll 2000ms cubic-bezier(1, 0.01, 1, 1) infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  position</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> absolute</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  width</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 200px</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  height</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 200px</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  background</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rgba(10, 10, 10, 0.8)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  border</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 1px solid #fafafa</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  box-sizing</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> border-box</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall::before </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> ''</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  position</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> absolute</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  width</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 100%</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  height</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 100%</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  display</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> flex</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  justify-content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  align-items</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> center</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  color</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> #fff</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  font-size</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> 7rem</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(1) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(2) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(3) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(3)::before </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) rotateZ(90deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) rotateZ(90deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms -2000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms -2000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(4) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(-90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(-90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(4)::before </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) rotateZ(-90deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) rotateZ(-90deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms -2000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms -2000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(5) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateY(90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateY(90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(5)::before </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(6) </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateY(-90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateY(-90deg) translateZ(100px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
.world .box .wall:nth-child(6)::before </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) rotateZ(180deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateX(180deg) rotateZ(180deg) translateZ(-1px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
  -webkit-animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
          animation</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> zeroFour 4000ms linear infinite</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
<span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">

@-webkit-keyframes zeroFour </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> '4'</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> '0'</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}

@keyframes zeroFour </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> '4'</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    content</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> '0'</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}
@-webkit-keyframes roll </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(0deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(0deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  85% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  87% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(88deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(88deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  90% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}
@keyframes roll </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(0deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(0deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  85% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  87% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(88deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(88deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  90% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> rotateZ(90deg)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}
@-webkit-keyframes slide </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(0)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(0)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(-200px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(-200px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}
@keyframes slide </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
  0% {
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(0)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(0)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
  100% </span><span style="background-color: #f5f5f5; color: #000000;">{</span><span style="background-color: #f5f5f5; color: #ff0000;">
    -webkit-transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(-200px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span><span style="background-color: #f5f5f5; color: #ff0000;">
            transform</span><span style="background-color: #f5f5f5; color: #000000;">:</span><span style="background-color: #f5f5f5; color: #0000ff;"> translateX(-200px)</span><span style="background-color: #f5f5f5; color: #000000;">;</span>
  <span style="background-color: #f5f5f5; color: #000000;">}</span><span style="background-color: #f5f5f5; color: #800000;">
}
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">style</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="rail"</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp four"</span><span style="color: #0000ff;">&gt;</span>4<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="stamp zero"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="world"</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="forward"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="box"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="wall"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="wall"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="wall"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="wall"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="wall"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="wall"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;<img src="https://i.loli.net/2019/10/28/7xp2RK5nMLPTkqr.jpg" alt="截图" width="1366" height="664" /></p>]]></description></item><item><title>VS2010到VS2019各个版本的密钥</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751889.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 06:08:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751889.html</guid><description><![CDATA[<h1 class="postTitle">VS2019专业版和企业版的密钥</h1>
<div class="postBody">
<div id="cnblogs_post_body" class="blogpost-body ">
<p>Visual&nbsp;Studio&nbsp;2019&nbsp;Enterprise<br />BF8Y8-GN2QH-T84XB-QVY3B-RC4DF<br /><br />Visual&nbsp;Studio&nbsp;2019&nbsp;Professional<br />NYWVH-HT4XC-R2WYW-9Y3CM-X4V3Y</p>
<hr />
<p>&nbsp;</p>
<h1 class="block_title">VS2017专业版和企业版的密钥</h1>
<h1 class="block_title">Enterprise:</h1>
<div class="post">
<div class="postcontent">
<div id="cnblogs_post_body" class="blogpost-body ">
<p>NJVYC-BMHX2-G77MM-4XJMR-6Q8QF</p>
<p><strong>Professional:</strong></p>
<p>KBJFW-NXHK6-W4WJM-CRMQB-G3CDH</p>
<hr />
<p>&nbsp;</p>
<h1 class="block_title">VS2015专业版和企业版的密钥</h1>
<p>Visual Studio Professional 2015简体中文版（专业版）<br />HMGNV-WCYXV-X7G9W-YCX63-B98R2<br />Visual Studio Enterprise 2015简体中文版（企业版）<br />HM6NR-QXX7C-DFW2Y-8B82K-WTYJV</p>
<hr />
<p>&nbsp;</p>
<h1 class="block_title">VS2013密钥</h1>
<div class="articalTitle">
<div class="turnBoxzz">Visual Studio Ultimate 2013 KEY（密钥）：<code>BWG7X-J98B3-W34RT-33B3R-JVYW9</code></div>

</div>
<div class="articalContent newfont_family">
<p>Visual Studio Premium 2013 KEY（密钥）：<code>FBJVC-3CMTX-D8DVP-RTQCT-92494</code></p>
<p>Visual Studio Professional 2013&nbsp; KEY（密钥）：&nbsp;<code>XDM3T-W3T3V-MGJWK-8BFVD-GVPKY</code></p>
<p>Team Foundation Server 2013 KEY（密钥）：<code>MHG9J-HHHX9-WWPQP-D8T7H-7KCQG</code></p>
<hr />
<p>&nbsp;</p>

</div>
<h1 class="block_title">VS2012密钥</h1>
<p>&nbsp;Microsoft Visual Studio Ultimate 2012 旗舰版，有效注册密钥：YKCW6-BPFPF-BT8C9-7DCTH-QXGWC或YQ7PR-QTHDM-HCBCV-9GKGG-TB2TM<br />&nbsp;Microsoft Visual Studio Premium 2012 高级版，有效注册密钥：MH2FR-BC9R2-84433-47M63-KQVWC<br />Microsoft Visual Studio Professional 2012 专业版，有效注册密钥：4D974-9QX42-9Y43G-YJ7JG-JDYBP</p>
<hr />
<p>&nbsp;</p>
<h1 class="block_title">VS2010密钥</h1>
<p>Microsoft Visual Studio 2010(VS2010)正式版 CDKEY / SN:<br />YCFHQ-9DWCY-DKV88-T2TMH-G7BHP</p>

</div>

</div>

</div>

</div>

</div>]]></description></item><item><title>什么是工程/项目？</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751718.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:33:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751718.html</guid><description><![CDATA[<p>一个真正的程序（也可以说软件）往往包含多项功能，每一项功能都需要几十行甚至几千行、几万行的代码来实现，如果我们将这些代码都放到一个源文件中，那将会让人崩溃，不但源文件打开速度极慢，代码的编写和维护也将变得非常困难。<br /><br />在实际开发中，程序员都是将这些代码分门别类地放到多个源文件中。除了这些成千上万行的代码，一个程序往往还要包含图片、视频、音频、控件、库（也可以说框架）等其它资源，它们也都是一个一个地文件。<br /><br />为了有效地管理这些种类繁杂、数目众多的文件，我们有理由把它们都放到一个目录（文件夹）下，并且这个目录下只存放与当前程序有关的资源。实际上 IDE 也是这么做的，它会为每一个程序都创建一个专门的目录，将用到的所有文件都集中到这个目录下，并对它们进行便捷的管理，比如重命名、删除文件、编辑文件等。<br /><br />这个为当前程序配备的专用文件夹，在 IDE 中也有一个专门的称呼，叫做&ldquo;Project&rdquo;，翻译过来就是&ldquo;工程&rdquo;或者&ldquo;项目&rdquo;。在 Visual&nbsp;<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>&nbsp;6.0 下，这叫做一个&ldquo;工程&rdquo;，而在 Visual Studio 下，这又叫做一个&ldquo;项目&rdquo;，它们只是单词&ldquo;Project&rdquo;的不同翻译而已，实际上是一个概念。</p>
<h2>工程类型/项目类型</h2>
<p>
&ldquo;程序&rdquo;是一个比较宽泛的称呼，它可以细分为很多种类，例如：</p>
<ul>
<li>有的程序不带界面，完全是&ldquo;黑屏&rdquo;的，只能输入一些字符或者命令，称为控制台程序（Console Application），例如 Windows 下的 cmd.exe，<a href="http://c.biancheng.net/linux_tutorial/" target="_blank">Linux</a>&nbsp;或 Mac OS 下的终端（Terminal）。</li>
<li>有的程序带界面，看起来很漂亮，能够使用鼠标点击，称为GUI程序（Graphical User Interface Program），例如 QQ、迅雷、Chrome 等。</li>
<li>有的程序不单独出现，而是作为其它程序的一个组成部分，普通用户很难接触到它们，例如静态库、动态库等。</li>



</ul>
<p>
<br />不同的程序对应不同的工程类型（项目类型），使用 IDE 时必须选择正确的工程类型才能创建出我们想要的程序。换句话说，IDE 包含了多种工程类型，不同的工程类型会创建出不同的程序。<br /><br />不同的工程类型本质上是对 IDE 中各个参数的不同设置；我们也可以创建一个空白的工程类型，然后自己去设置各种参数（不过一般不这样做）。<br /><br />控制台程序对应的工程类型为&ldquo;Win32控制台程序（Win32 Console Application）&rdquo;，GUI 程序对应的工程类型为&ldquo;Win32程序（Win32 Application）&rdquo;。<br /><br />控制台程序是 DOS 时代的产物了，它没有复杂的功能，没有漂亮的界面，只能看到一些文字，虽然枯燥无趣，也不实用，但是它非常简单，不受界面的干扰，所以适合入门，我强烈建议初学者从控制台程序学起。等大家对编程掌握的比较熟练了，能编写上百行的代码了，再慢慢过渡到 GUI 程序。</p>]]></description></item><item><title>什么是IDE（集成开发环境）？</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751711.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:31:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751711.html</guid><description><![CDATA[<p>实际开发中，除了编译器是必须的工具，我们往往还需要很多其他辅助软件，例如：</p>
<ul>
<li>编辑器：用来编写代码，并且给代码着色，以方便阅读；</li>
<li>代码提示器：输入部分代码，即可提示全部代码，加速代码的编写过程；</li>
<li>调试器：观察程序的每一个运行步骤，发现程序的逻辑错误；</li>
<li>项目管理工具：对程序涉及到的所有资源进行管理，包括源文件、图片、视频、第三方库等；</li>
<li>漂亮的界面：各种按钮、面板、菜单、窗口等控件整齐排布，操作更方便。</li>
</ul>
<p><br />这些工具通常被打包在一起，统一发布和安装，例如 Visual Studio、Dev&nbsp;<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>、Xcode、Visual C++ 6.0、C-Free、Code::Blocks 等，它们统称为集成开发环境（IDE，Integrated Development Environment）。<br /><br />集成开发环境就是一系列开发工具的组合套装。这就好比台式机，一个台式机的核心部件是主机，有了主机就能独立工作了，但是我们在购买台式机时，往往还要附带上显示器、键盘、鼠标、U盘、摄像头等外围设备，因为只有主机太不方便了，必须有外设才能玩的爽。<br /><br />集成开发环境也是这个道理，只有编译器不方便，所以还要增加其他的辅助工具。在实际开发中，我一般也是使用集成开发环境，而不是单独地使用编译器。</p>
<h4>通俗的称呼</h4>
<p>
有时候为了称呼方便，或者初学者没有严格区分概念，也会将<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>集成开发环境称作&ldquo;<a href="http://c.biancheng.net/compiler/" target="_blank">C语言编译器</a>&rdquo;或者&ldquo;<a href="http://c.biancheng.net/compiler/" target="_blank">C语言编程软件</a>&rdquo;。这里大家不要认为是一种错误，就把它当做&ldquo;乡间俗语&rdquo;吧。</p>]]></description></item><item><title>C语言编译和链接详解（通俗易懂，深入本质）</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751708.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:30:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751708.html</guid><description><![CDATA[<p>我们平时所说的程序，是指双击后就可以直接运行的程序，这样的程序被称为可执行程序（Executable Program）。在 Windows 下，可执行程序的后缀有<code>.exe</code>和<code>.com</code>（其中<code>.exe</code>比较常见）；在类 UNIX 系统（<a href="http://c.biancheng.net/linux_tutorial/" target="_blank">Linux</a>、Mac OS 等）下，可执行程序没有特定的后缀，系统根据文件的头部信息来判断是否是可执行程序。<br /><br />可执行程序的内部是一系列计算机指令和数据的集合，它们都是二进制形式的，CPU 可以直接识别，毫无障碍；但是对于程序员，它们非常晦涩，难以记忆和使用。<br /><br />例如，在屏幕上输出&ldquo;VIP会员&rdquo;，<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>的写法为：</p>
<p class="info-box">puts("VIP会员");</p>
<p>
二进制的写法为：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181224/11103541N-0.jpg" alt="" /></div>
<p>
<br />你感受一下，直接使用二进制是不是想撞墙，是不是受到一吨重的伤害？</p>
<blockquote>在计算机发展的初期，程序员就是使用这样的二进制指令来编写程序的，那个拓荒的年代还没有编程语言。</blockquote>
<p>
直接使用二进制指令编程对程序员来说简直是噩梦，尤其是当程序比较大的时候，不但编写麻烦，需要频繁查询指令手册，而且除错会异常苦恼，要直接面对一堆二进制数据，让人眼花缭乱。另外，用二进制指令编程步骤繁琐，要考虑各种边界情况和底层问题，开发效率十分低下。<br /><br />这就倒逼程序员开发出了编程语言，提高自己的生产力，例如汇编、C语言、<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>、<a href="http://c.biancheng.net/java/" target="_blank">Java</a>、<a href="http://c.biancheng.net/python/" target="_blank">Python</a>、<a href="http://c.biancheng.net/golang/" target="_blank">Go语言</a>等，都是在逐步提高开发效率。至此，编程终于不再是只有极客能做的事情了，不了解计算机的读者经过一定的训练也可以编写出有模有样的程序。</p>
<h2>编译（Compile）</h2>
<p>
C语言代码由固定的词汇按照固定的格式组织起来，简单直观，程序员容易识别和理解，但是对于CPU，C语言代码就是天书，根本不认识，CPU只认识几百个二进制形式的指令。这就需要一个工具，将C语言代码转换成CPU能够识别的二进制指令，也就是将代码加工成 .exe 程序的格式；这个工具是一个特殊的软件，叫做<strong>编译器（Compiler）</strong>。<br /><br />编译器能够识别代码中的词汇、句子以及各种特定的格式，并将他们转换成计算机能够识别的二进制形式，这个过程称为<strong>编译（Compile）</strong>。<br /><br />编译也可以理解为&ldquo;翻译&rdquo;，类似于将中文翻译成英文、将英文翻译成象形文字，它是一个复杂的过程，大致包括词法分析、语法分析、语义分析、性能优化、生成可执行文件五个步骤，期间涉及到复杂的算法和硬件架构。对于学计算机或者软件的大学生，&ldquo;编译原理&rdquo;是一门专业课程，有兴趣的读者请自行阅读《<a href="https://book.douban.com/subject/3296317/" target="_blank">编译原理</a>》一书，这里我们不再展开讲解。</p>
<blockquote>注意：不了解编译原理并不影响我们学习C语言，我也不建议初学者去钻研编译原理，贪多嚼不烂，不要把自己绕进去。</blockquote>
<p>
C语言的编译器有很多种，不同的平台下有不同的编译器，例如：</p>
<ul>
<li>Windows 下常用的是微软开发的&nbsp;Visual C++，它被集成在 Visual Studio 中，一般不单独使用；</li>
<li>Linux 下常用的是 GUN 组织开发的&nbsp;<a href="http://c.biancheng.net/gcc/" target="_blank">GCC</a>，很多 Linux 发行版都自带 GCC；</li>
<li>Mac 下常用的是&nbsp;LLVM/Clang，它被集成在 Xcode 中（Xcode 以前集成的是 GCC，后来由于 GCC 的不配合才改为 LLVM/Clang，LLVM/Clang 的性能比 GCC 更加强大）。</li>


</ul>
<p>
<br />你的代码语法正确与否，编译器说了才算，我们学习C语言，从某种意义上说就是学习如何使用编译器。<br /><br />编译器可以 100% 保证你的代码从语法上讲是正确的，因为哪怕有一点小小的错误，编译也不能通过，编译器会告诉你哪里错了，便于你的更改。</p>
<h2>链接（Link）</h2>
<p>
C语言代码经过编译以后，并没有生成最终的可执行文件（.exe 文件），而是生成了一种叫做目标文件（Object File）的中间文件（或者说临时文件）。目标文件也是二进制形式的，它和可执行文件的格式是一样的。对于 Visual C++，目标文件的后缀是<code>.obj</code>；对于 GCC，目标文件的后缀是<code>.o</code>。<br /><br />目标文件经过链接（Link）以后才能变成可执行文件。既然目标文件和可执行文件的格式是一样的，为什么还要再链接一次呢，直接作为可执行文件不行吗？<br /><br />不行的！因为编译只是将我们自己写的代码变成了二进制形式，它还需要和系统组件（比如标准库、动态链接库等）结合起来，这些组件都是程序运行所必须的。<br /><br /><strong>链接（Link）</strong>其实就是一个&ldquo;打包&rdquo;的过程，它将所有二进制形式的目标文件和系统组件组合成一个可执行文件。完成链接的过程也需要一个特殊的软件，叫做<strong>链接器（Linker）</strong>。<br /><br />随着我们学习的深入，我们编写的代码越来越多，最终需要将它们分散到多个源文件中，编译器每次只能编译一个源文件，生成一个目标文件，这个时候，链接器除了将目标文件和系统组件组合起来，还需要将编译器生成的多个目标文件组合起来。<br /><br />再次强调，编译是针对一个源文件的，有多少个源文件就需要编译多少次，就会生成多少个目标文件。</p>
<h2>总结</h2>
<p>
不管我们编写的代码有多么简单，都必须经过「编译 --&gt; 链接」的过程才能生成可执行文件：</p>
<ul>
<li>编译就是将我们编写的源代码&ldquo;翻译&rdquo;成计算机可以识别的二进制格式，它们以目标文件的形式存在；</li>
<li>链接就是一个&ldquo;打包&rdquo;的过程，它将所有的目标文件以及系统组件组合成一个可执行文件。</li>


</ul>
<p>
<br />如果不是特别强调，一般情况下我们所说的&ldquo;编译器&rdquo;实际上也包括了链接器，比如，你使用了哪种编译器？去哪里下载<a href="http://c.biancheng.net/compiler/" target="_blank">C语言编译器</a>？我的编译器为什么报错了呢？</p>]]></description></item><item><title>什么是源文件？</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751705.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:29:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751705.html</guid><description><![CDATA[<p>在开发软件的过程中，我们需要将编写好的代码（Code）保存到一个文件中，这样代码才不会丢失，才能够被编译器找到，才能最终变成可执行文件。这种用来保存代码的文件就叫做源文件（Source File）。</p>
<blockquote>我们将在《<a href="http://c.biancheng.net/view/1736.html" target="_blank">编译和链接</a>》一节中讲解编译器的概念。</blockquote>
<p>每种编程语言的源文件都有特定的后缀，以方便被编译器识别，被程序员理解。源文件后缀大都根据编程语言本身的名字来命名，例如：</p>
<ul>
<li><a href="http://c.biancheng.net/c/" target="_blank">C语言</a>源文件的后缀是<code>.c</code>；</li>
<li><a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>语言（C Plus Plus）源文件的后缀是<code>.cpp</code>；</li>
<li><a href="http://c.biancheng.net/java/" target="_blank">Java</a>&nbsp;源文件的后缀是<code>.java</code>；</li>
<li><a href="http://c.biancheng.net/python/" target="_blank">Python</a>&nbsp;源文件的后缀是<code>.py</code>；</li>
<li><a href="http://c.biancheng.net/js/" target="_blank">JavaScript</a>&nbsp;源文件后置是<code>.js</code>。</li>
</ul>
<p><br />源文件其实就是纯文本文件，它的内部并没有特殊格式，能证明这一结论的典型例子是：在 Windows 下用记事本程序新建一个文本文档，并命名为<code>demo.txt</code>，输入一段C语言代码并保存，然后将该文件强制重命名为<code>demo.c</code>（后缀从<code>.txt</code>变成了<code>.c</code>），发现编译器依然能够正确识别其中的C语言代码，并顺利生成可执行文件。<br /><br />源文件的后缀仅仅是为了表明该文件中保存的是某种语言的代码（例如<code>.c</code>文件中保存的是C语言代码），这样程序员更加容易区分，编译器也更加容易识别，它并不会导致该文件的内部格式发生改变。<br /><br /><a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>&nbsp;是站在C语言的肩膀上发展起来的，是在C语言的基础上进行的扩展，C++ 包含了C语言的全部内容（请猛击《<a href="http://c.biancheng.net/view/vip_1722.html" target="_blank">C语言和C++到底有什么关系</a>》一文了解更多），将C语言代码放在<code>.cpp</code>文件中不会有错，很多初学者都是这么做的，很多大学老师也是这么教的。但是，我还是强烈建议将C语言代码放在<code>.c</code>文件中，这样能够更加严格地遵循C语言的语法，也能够更加清晰地了解C语言和C++的区别。</p>]]></description></item><item><title>编程时请选择正确的输入法，严格区分中英文</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751702.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:28:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751702.html</guid><description><![CDATA[<p>计算机起源于美国，<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>、<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>、<a href="http://c.biancheng.net/java/" target="_blank">Java</a>、<a href="http://c.biancheng.net/js/" target="_blank">JavaScript</a>&nbsp;等很多流行的编程语言都是美国人发明的，所以在编写代码的时候必须使用<strong>英文半角输入法</strong>，尤其是标点符号，初学者一定要引起注意。<br /><br />例如，上节我们使用 puts 语句在显示器上输出内容：</p>
<p class="info-box">puts("C语言中文网");</p>
<p>
这里的括号、双引号、分号都必须是英文符号，而且是半角的。下图演示了如何将搜狗输入法切换到英文半角状态：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181224/10103552E-0.png" alt="" /><br />图1：搜狗输入法</div>
<p>
<br />一些相似的中英文标点符号：</p>
<ul>
<li>中文分号<span class="keypoint">；和英文分号<span class="keypoint">;；</span></span></li>
<li>中文逗号<span class="keypoint">，和英文逗号<span class="keypoint">,；</span></span></li>
<li>中文冒号<span class="keypoint">：和英文冒号<span class="keypoint">:；</span></span></li>
<li>中文括号<span class="keypoint">（）和英文括号<span class="keypoint">()；</span></span></li>
<li>中文问号<span class="keypoint">？和英文问号<span class="keypoint">?；</span></span></li>
<li>中文单引号<span class="keypoint">&rsquo;&lsquo;和英文单引号<span class="keypoint">' '；</span></span></li>
<li>中文双引号<span class="keypoint">&ldquo; &rdquo;和英文双引号<span class="keypoint">" "。</span></span></li>

</ul>
<p>
<br />初学者请务必注意标点符号的问题，它们在视觉上的差别很小，一旦将英文符号写成中文符号就会导致错误，而且往往不容易发现。我在给<a href="http://vip.biancheng.net/" target="_blank">VIP会员</a>进行一对一答疑的过程中，经常会遇到类似的错误，有些同学甚至会在这里跌倒好几次。</p>
<h2>全角和半角输入法的区别</h2>
<p>
全角和半角的区别主要在于除汉字以外的其它字符，比如标点符号、英文字母、阿拉伯数字等，全角字符和半角字符所占用的位置的大小不同。<br /><br />在计算机屏幕上，一个汉字要占两个英文字符的位置，人们把一个英文字符所占的位置称为&ldquo;半角&rdquo;，相对地把一个汉字所占的位置称为&ldquo;全角&rdquo;。<br /><br />标点符号、英文字母、阿拉伯数字等这些字符不同于汉字，在半角状态它们被作为英文字符处理，而在全角状态作为中文字符处理，请看下面的例子。<br /><br />半角输入：</p>
<p class="info-box">C语言中文网！Hello C,I like!</p>
<p>
全角输入：</p>
<p class="info-box">Ｃ语言中文网！Ｈｅｌｌｏ　Ｃ，Ｉ　ｌｉｋｅ！</p>
<p>
另外最重要的一点是：&ldquo;相同&rdquo;字符在全角和半角状态下对应的编码值（例如 Unicode 编码、GBK 编码等）不一样，所以它们是不同的字符。<br /><br /></p>
<div><img src="http://c.biancheng.net/uploads/allimg/181224/10103552R-1.png" alt="" /><br />图：搜狗输入法半角和全角</div>
<p>
<br />我们知道，在编程时要使用英文半角输入法。为了加强练习，出个选择题，请大家判断下面哪一种描述是正确的：<br />A) 编程的时候不用在意中英文符号的区别。<br />B) 在源代码的任何地方都不能出现中文汉字、字符等。<br />C) 感叹号没有中文和英文的区别。<br />D) 编程时，使用的英文引号，也有左引号和右引号的区别。<br />E) 中文和英文模式下的制表符（键盘tab键）输入效果一致。<br /><br />答案：E 选项正确。</p>]]></description></item><item><title>ASCII编码，将英文存储到计算机</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751700.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:27:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751700.html</guid><description><![CDATA[<p>前面我们已经讲到，计算机是以二进制的形式来存储数据的，它只认识 0 和 1 两个数字，我们在屏幕上看到的文字，在存储之前都被转换成了二进制（0和1序列），在显示时也要根据二进制找到对应的字符。<br /><br />可想而知，特定的文字必然对应着固定的二进制，否则在转换时将发生混乱。那么，怎样将文字与二进制对应起来呢？这就需要有一套规范，计算机公司和软件开发者都必须遵守，这样的一套规范就称为字符集（Character Set）或者字符编码（Character Encoding）。</p>
<blockquote>严格来说，字符集和字符编码不是一个概念，字符集定义了文字和二进制的对应关系，为字符分配了唯一的编号，而字符编码规定了如何将文字的编号存储到计算机中。我们暂时先不讨论这些细节，姑且认为它们是一个概念，本节中我也混用了这两个概念，未做区分。</blockquote>
<p>
字符集为每个字符分配一个唯一的编号，类似于学生的学号，通过编号就能够找到对应的字符。<br /><br />可以将字符集理解成一个很大的表格，它列出了所有字符和二进制的对应关系，计算机显示文字或者存储文字，就是一个查表的过程。<br /><br />在计算机逐步发展的过程中，先后出现了几十种甚至上百种字符集，有些还在使用，有些已经淹没在了历史的长河中，本节我们要讲解的是一种专门针对英文的字符集&mdash;&mdash;<a href="http://c.biancheng.net/c/ascii/" target="_blank">ASCII编码</a>。</p>
<h2>拉丁字母（开胃小菜）</h2>
<p>
在正式介绍&nbsp;<a href="http://c.biancheng.net/c/ascii/" target="_blank">ASCII</a>&nbsp;编码之前，我们先来说说什么是拉丁字母。估计也有不少读者和我一样，对于拉丁字母、英文字母和汉语拼音中的字母的关系不是很清楚。<br /><br />拉丁字母也叫罗马字母，它源自希腊字母，是当今世界上使用最广的字母系统。基本的拉丁字母就是我们经常见到的 ABCD 等26个英文字母。</p>
<blockquote>拉丁字母、阿拉伯字母、斯拉夫字母（西里尔字母）被称为世界三大字母体系。</blockquote>
<p>
拉丁字母原先是欧洲人使用的，后来由于欧洲殖民主义，导致这套字母体系在全球范围内开始流行，美洲、非洲、澳洲、亚洲都没有逃过西方文化的影响。中国也是，我们现在使用的拼音其实就是拉丁字母，是不折不扣的舶来品。<br /><br />后来，很多国家对 26 个基本的拉丁字母进行了扩展，以适应本地的语言文化。最常见的扩展方式就是加上变音符号，例如汉语拼音中的<code>&uuml;</code>，就是在<code>u</code>的基础上加上两个小点演化而来；再如，<code>&aacute;&agrave;</code>就是在a的上面标上音调。<br /><br />总起来说：</p>
<ul>
<li>基本拉丁字母就是 26 个英文字母；</li>
<li>扩展拉丁字母就是在基本的 26 个英文字母的基础上添加变音符号、横线、斜线等演化而来，每个国家都不一样。</li>

</ul>
<h2>ASCII 编码</h2>
<p>
计算机是美国人发明的，他们首先要考虑的问题是，如何将二进制和英文字母（也就是拉丁文）对应起来。<br /><br />当时，各个厂家或者公司都有自己的做法，编码规则并不统一，这给不同计算机之间的数据交换带来不小的麻烦。但是相对来说，能够得到普遍认可的有 IBM 发明的 EBCDIC 和此处要谈的 ASCII。<br /><br />我们先说 ASCII。ASCII 是&ldquo;American S<a href="http://c.biancheng.net/ref/tan.html" target="_blank">tan</a>dard Code for Information Interchange&rdquo;的缩写，翻译过来是&ldquo;美国信息交换标准代码&rdquo;。看这个名字就知道，这套编码是美国人给自己设计的，他们并没有考虑欧洲那些扩展的拉丁字母，也没有考虑韩语和日语，我大中华几万个汉字更是不可能被重视。<br /><br />但这也无可厚非，美国人自己发明的计算机，当然要先解决自己的问题<br /><br />ASCII 的标准版本于 1967 年第一次发布，最后一次更新则是在 1986 年，迄今为止共收录了 128 个字符，包含了基本的拉丁字母（英文字母）、阿拉伯数字（也就是 1234567890）、标点符号（<code>,.!</code>等）、特殊符号（<code>@#$%^&amp;</code>等）以及一些具有控制功能的字符（往往不会显示出来）。<br /><br />在 ASCII 编码中，大写字母、小写字母和阿拉伯数字都是连续分布的（见下表），这给程序设计带来了很大的方便。例如要判断一个字符是否是大写字母，就可以判断该字符的 ASCII 编码值是否在 65~90 的范围内。<br /><br />EBCDIC 编码正好相反，它的英文字母不是连续排列的，中间出现了多次断续，给编程带来了一些困难。现在连 IBM 自己也不使用&nbsp;EBCDIC 了，转而使用更加优秀的 ASCII。<br /><br />ASCII 编码已经成了计算机的通用标准，没有人再使用&nbsp;EBCDIC 编码了，它已经消失在历史的长河中了。</p>
<h2>ASCII 编码一览表</h2>
<p>
标准 ASCII 编码共收录了 128 个字符，其中包含了 33 个控制字符（具有某些特殊功能但是无法显示的字符）和 95 个可显示字符。<br /><br /></p>
<table><caption>ASCII 编码一览表（淡黄色背景为控制字符，白色背景为可显示字符）</caption>
<tbody>
<tr><th>二进制</th><th>十进制</th><th>十六进制</th><th>字符/缩写</th><th>解释</th></tr>
<tr class="bg-ctrl">
<td>00000000</td>
<td>0</td>
<td>00</td>
<td>NUL (NULL)</td>
<td>空字符</td>

</tr>
<tr class="bg-ctrl">
<td>00000001</td>
<td>1</td>
<td>01</td>
<td>SOH (Start Of Headling)</td>
<td>标题开始</td>

</tr>
<tr class="bg-ctrl">
<td>00000010</td>
<td>2</td>
<td>02</td>
<td>STX (Start Of Text)</td>
<td>正文开始</td>

</tr>
<tr class="bg-ctrl">
<td>00000011</td>
<td>3</td>
<td>03</td>
<td>ETX (End Of Text)</td>
<td>正文结束</td>

</tr>
<tr class="bg-ctrl">
<td>00000100</td>
<td>4</td>
<td>04</td>
<td>EOT (End Of Transmission)</td>
<td>传输结束</td>

</tr>
<tr class="bg-ctrl">
<td>00000101</td>
<td>5</td>
<td>05</td>
<td>ENQ (Enquiry)</td>
<td>请求</td>

</tr>
<tr class="bg-ctrl">
<td>00000110</td>
<td>6</td>
<td>06</td>
<td>ACK (Acknowledge)</td>
<td>回应/响应/收到通知</td>

</tr>
<tr class="bg-ctrl">
<td>00000111</td>
<td>7</td>
<td>07</td>
<td>BEL (Bell)</td>
<td>响铃</td>

</tr>
<tr class="bg-ctrl">
<td>00001000</td>
<td>8</td>
<td>08</td>
<td>BS (Backspace)</td>
<td>退格</td>

</tr>
<tr class="bg-ctrl">
<td>00001001</td>
<td>9</td>
<td>09</td>
<td>HT (Horizontal Tab)</td>
<td>水平制表符</td>

</tr>
<tr class="bg-ctrl">
<td>00001010</td>
<td>10</td>
<td>0A</td>
<td>LF/NL(Line Feed/New Line)</td>
<td>换行键</td>

</tr>
<tr class="bg-ctrl">
<td>00001011</td>
<td>11</td>
<td>0B</td>
<td>VT (Vertical Tab)</td>
<td>垂直制表符</td>

</tr>
<tr class="bg-ctrl">
<td>00001100</td>
<td>12</td>
<td>0C</td>
<td>FF/NP (Form Feed/New Page)</td>
<td>换页键</td>

</tr>
<tr class="bg-ctrl">
<td>00001101</td>
<td>13</td>
<td>0D</td>
<td>CR (Carriage Return)</td>
<td>回车键</td>

</tr>
<tr class="bg-ctrl">
<td>00001110</td>
<td>14</td>
<td>0E</td>
<td>SO (Shift Out)</td>
<td>不用切换</td>

</tr>
<tr class="bg-ctrl">
<td>00001111</td>
<td>15</td>
<td>0F</td>
<td>SI (Shift In)</td>
<td>启用切换</td>

</tr>
<tr class="bg-ctrl">
<td>00010000</td>
<td>16</td>
<td>10</td>
<td>DLE (Data Link Escape)</td>
<td>数据链路转义</td>

</tr>
<tr class="bg-ctrl">
<td>00010001</td>
<td>17</td>
<td>11</td>
<td>DC1/XON<br />(Device Control 1/Transmission On)</td>
<td>设备控制1/传输开始</td>

</tr>
<tr class="bg-ctrl">
<td>00010010</td>
<td>18</td>
<td>12</td>
<td>DC2 (Device Control 2)</td>
<td>设备控制2</td>

</tr>
<tr class="bg-ctrl">
<td>00010011</td>
<td>19</td>
<td>13</td>
<td>DC3/XOFF<br />(Device Control 3/Transmission Off)</td>
<td>设备控制3/传输中断</td>

</tr>
<tr class="bg-ctrl">
<td>00010100</td>
<td>20</td>
<td>14</td>
<td>DC4 (Device Control 4)</td>
<td>设备控制4</td>

</tr>
<tr class="bg-ctrl">
<td>00010101</td>
<td>21</td>
<td>15</td>
<td>NAK (Negative Acknowledge)</td>
<td>无响应/非正常响应/拒绝接收</td>

</tr>
<tr class="bg-ctrl">
<td>00010110</td>
<td>22</td>
<td>16</td>
<td>SYN (Synchronous Idle)</td>
<td>同步空闲</td>

</tr>
<tr class="bg-ctrl">
<td>00010111</td>
<td>23</td>
<td>17</td>
<td>ETB (End of Transmission Block)</td>
<td>传输块结束/块传输终止</td>

</tr>
<tr class="bg-ctrl">
<td>00011000</td>
<td>24</td>
<td>18</td>
<td>CAN (Cancel)</td>
<td>取消</td>

</tr>
<tr class="bg-ctrl">
<td>00011001</td>
<td>25</td>
<td>19</td>
<td>EM (End of Medium)</td>
<td>已到介质末端/介质存储已满/介质中断</td>

</tr>
<tr class="bg-ctrl">
<td>00011010</td>
<td>26</td>
<td>1A</td>
<td>SUB (Substitute)</td>
<td>替补/替换</td>

</tr>
<tr class="bg-ctrl">
<td>00011011</td>
<td>27</td>
<td>1B</td>
<td>ESC (Escape)</td>
<td>逃离/取消</td>

</tr>
<tr class="bg-ctrl">
<td>00011100</td>
<td>28</td>
<td>1C</td>
<td>FS (File Separator)</td>
<td>文件分割符</td>

</tr>
<tr class="bg-ctrl">
<td>00011101</td>
<td>29</td>
<td>1D</td>
<td>GS (Group Separator)</td>
<td>组分隔符/分组符</td>

</tr>
<tr class="bg-ctrl">
<td>00011110</td>
<td>30</td>
<td>1E</td>
<td>RS (Record Separator)</td>
<td>记录分离符</td>

</tr>
<tr class="bg-ctrl">
<td>00011111</td>
<td>31</td>
<td>1F</td>
<td>US (Unit Separator)</td>
<td>单元分隔符</td>

</tr>
<tr>
<td>00100000</td>
<td>32</td>
<td>20</td>
<td>(Space)</td>
<td>空格</td>

</tr>
<tr>
<td>00100001</td>
<td>33</td>
<td>21</td>
<td>!</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00100010</td>
<td>34</td>
<td>22</td>
<td>"</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00100011</td>
<td>35</td>
<td>23</td>
<td>#</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00100100</td>
<td>36</td>
<td>24</td>
<td>$</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00100101</td>
<td>37</td>
<td>25</td>
<td>%</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00100110</td>
<td>38</td>
<td>26</td>
<td>&amp;</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00100111</td>
<td>39</td>
<td>27</td>
<td>'</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101000</td>
<td>40</td>
<td>28</td>
<td>(</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101001</td>
<td>41</td>
<td>29</td>
<td>)</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101010</td>
<td>42</td>
<td>2A</td>
<td>*</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101011</td>
<td>43</td>
<td>2B</td>
<td>+</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101100</td>
<td>44</td>
<td>2C</td>
<td>,</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101101</td>
<td>45</td>
<td>2D</td>
<td>-</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101110</td>
<td>46</td>
<td>2E</td>
<td>.</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00101111</td>
<td>47</td>
<td>2F</td>
<td>/</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110000</td>
<td>48</td>
<td>30</td>
<td>0</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110001</td>
<td>49</td>
<td>31</td>
<td>1</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110010</td>
<td>50</td>
<td>32</td>
<td>2</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110011</td>
<td>51</td>
<td>33</td>
<td>3</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110100</td>
<td>52</td>
<td>34</td>
<td>4</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110101</td>
<td>53</td>
<td>35</td>
<td>5</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110110</td>
<td>54</td>
<td>36</td>
<td>6</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00110111</td>
<td>55</td>
<td>37</td>
<td>7</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111000</td>
<td>56</td>
<td>38</td>
<td>8</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111001</td>
<td>57</td>
<td>39</td>
<td>9</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111010</td>
<td>58</td>
<td>3A</td>
<td>:</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111011</td>
<td>59</td>
<td>3B</td>
<td>;</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111100</td>
<td>60</td>
<td>3C</td>
<td>&lt;</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111101</td>
<td>61</td>
<td>3D</td>
<td>=</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111110</td>
<td>62</td>
<td>3E</td>
<td>&gt;</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>00111111</td>
<td>63</td>
<td>3F</td>
<td>?</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000000</td>
<td>64</td>
<td>40</td>
<td>@</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000001</td>
<td>65</td>
<td>41</td>
<td>A</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000010</td>
<td>66</td>
<td>42</td>
<td>B</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000011</td>
<td>67</td>
<td>43</td>
<td>C</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000100</td>
<td>68</td>
<td>44</td>
<td>D</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000101</td>
<td>69</td>
<td>45</td>
<td>E</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000110</td>
<td>70</td>
<td>46</td>
<td>F</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01000111</td>
<td>71</td>
<td>47</td>
<td>G</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001000</td>
<td>72</td>
<td>48</td>
<td>H</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001001</td>
<td>73</td>
<td>49</td>
<td>I</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001010</td>
<td>74</td>
<td>4A</td>
<td>J</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001011</td>
<td>75</td>
<td>4B</td>
<td>K</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001100</td>
<td>76</td>
<td>4C</td>
<td>L</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001101</td>
<td>77</td>
<td>4D</td>
<td>M</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001110</td>
<td>78</td>
<td>4E</td>
<td>N</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01001111</td>
<td>79</td>
<td>4F</td>
<td>O</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010000</td>
<td>80</td>
<td>50</td>
<td>P</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010001</td>
<td>81</td>
<td>51</td>
<td>Q</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010010</td>
<td>82</td>
<td>52</td>
<td>R</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010011</td>
<td>83</td>
<td>53</td>
<td>S</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010100</td>
<td>84</td>
<td>54</td>
<td>T</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010101</td>
<td>85</td>
<td>55</td>
<td>U</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010110</td>
<td>86</td>
<td>56</td>
<td>V</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01010111</td>
<td>87</td>
<td>57</td>
<td>W</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011000</td>
<td>88</td>
<td>58</td>
<td>X</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011001</td>
<td>89</td>
<td>59</td>
<td>Y</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011010</td>
<td>90</td>
<td>5A</td>
<td>Z</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011011</td>
<td>91</td>
<td>5B</td>
<td>[</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011100</td>
<td>92</td>
<td>5C</td>
<td>\</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011101</td>
<td>93</td>
<td>5D</td>
<td>]</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011110</td>
<td>94</td>
<td>5E</td>
<td>^</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01011111</td>
<td>95</td>
<td>5F</td>
<td>_</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100000</td>
<td>96</td>
<td>60</td>
<td>`</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100001</td>
<td>97</td>
<td>61</td>
<td>a</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100010</td>
<td>98</td>
<td>62</td>
<td>b</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100011</td>
<td>99</td>
<td>63</td>
<td>c</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100100</td>
<td>100</td>
<td>64</td>
<td>d</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100101</td>
<td>101</td>
<td>65</td>
<td>e</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100110</td>
<td>102</td>
<td>66</td>
<td>f</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01100111</td>
<td>103</td>
<td>67</td>
<td>g</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101000</td>
<td>104</td>
<td>68</td>
<td>h</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101001</td>
<td>105</td>
<td>69</td>
<td>i</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101010</td>
<td>106</td>
<td>6A</td>
<td>j</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101011</td>
<td>107</td>
<td>6B</td>
<td>k</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101100</td>
<td>108</td>
<td>6C</td>
<td>l</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101101</td>
<td>109</td>
<td>6D</td>
<td>m</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101110</td>
<td>110</td>
<td>6E</td>
<td>n</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01101111</td>
<td>111</td>
<td>6F</td>
<td>o</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110000</td>
<td>112</td>
<td>70</td>
<td>p</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110001</td>
<td>113</td>
<td>71</td>
<td>q</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110010</td>
<td>114</td>
<td>72</td>
<td>r</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110011</td>
<td>115</td>
<td>73</td>
<td>s</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110100</td>
<td>116</td>
<td>74</td>
<td>t</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110101</td>
<td>117</td>
<td>75</td>
<td>u</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110110</td>
<td>118</td>
<td>76</td>
<td>v</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01110111</td>
<td>119</td>
<td>77</td>
<td>w</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01111000</td>
<td>120</td>
<td>78</td>
<td>x</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01111001</td>
<td>121</td>
<td>79</td>
<td>y</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01111010</td>
<td>122</td>
<td>7A</td>
<td>z</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01111011</td>
<td>123</td>
<td>7B</td>
<td>{</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01111100</td>
<td>124</td>
<td>7C</td>
<td>|</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01111101</td>
<td>125</td>
<td>7D</td>
<td>}</td>
<td>&nbsp;</td>

</tr>
<tr>
<td>01111110</td>
<td>126</td>
<td>7E</td>
<td>~</td>
<td>&nbsp;</td>

</tr>
<tr class="bg-ctrl">
<td>01111111</td>
<td>127</td>
<td>7F</td>
<td>DEL (Delete)</td>
<td>删除</td>

</tr>

</tbody>

</table>
<p>
<br />上表列出的是标准的 ASCII 编码，它共收录了 128 个字符，用一个字节中较低的 7 个比特位（Bit）足以表示（2<sup>7</sup>&nbsp;= 128），所以还会空闲下一个比特位，它就被浪费了。<br /><br />如果您还想了解每个控制字符的含义，请转到：<a href="http://c.biancheng.net/c/ascii/" target="_blank">完整的ASCII码对照表以及各个字符的解释</a></p>
<h2>ASCII 编码和<a href="http://c.biancheng.net/c/" target="_blank">C语言</a></h2>
<p>
稍微有点C语言基本功的读者可能认为C语言使用的就是 ASCII 编码，字符在存储时会转换成对应的 ASCII 码值，在读取时也是根据 ASCII 码找到对应的字符。这句话是错误的，严格来说，你可能被大学老师和C语言教材给误导了。<br /><br />C语言有时候使用 ASCII 编码，有时候却不是，而是使用后面两节中即将讲到的 GBK 编码和 Unicode 字符集，我们将在《<a href="http://c.biancheng.net/view/vip_1768.html" target="_blank">C语言到底使用什么编码？谁说C语言使用ASCII码，真是荒谬！</a>》一节中展开讲解。</p>]]></description></item><item><title>载入内存，让程序运行起来</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751699.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:26:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751699.html</guid><description><![CDATA[<p>如果你的电脑上安装了QQ，你希望和好友聊天，会双击QQ图标，打开QQ软件，输入账号和密码，然后登录就可以了。<br /><br />那么，QQ是怎么运行起来的呢？<br /><br />首先，有一点你要明确，你安装的QQ软件是保存在硬盘中的。<br /><br />双击QQ图标，操作系统就会知道你要运行这个软件，它会在硬盘中找到你安装的QQ软件，将数据（安装的软件本质上就是很多数据的集合）复制到内存。对！就是复制到内存！QQ不是在硬盘中运行的，而是在内存中运行的。<br /><br />为什么呢？因为内存的读写速度比硬盘快很多。<br /><br />对于读写速度，内存 &gt; 固态硬盘 &gt; 机械硬盘。机械硬盘是靠电机带动盘片转动来读写数据的，而内存条通过电路来读写数据，电机的转速肯定没有电的传输速度（几乎是光速）快。虽然固态硬盘也是通过电路来读写数据，但是因为与内存的控制方式不一样，速度也不及内存。<br /><br />所以，不管是运行QQ还是编辑Word文档，都是先将硬盘上的数据复制到内存，才能让CPU来处理，这个过程就叫作载入内存（Load into Memory）。完成这个过程需要一个特殊的程序（软件），这个程序就叫做加载器（Loader）。<br /><br />CPU直接与内存打交道，它会读取内存中的数据进行处理，并将结果保存到内存。如果需要保存到硬盘，才会将内存中的数据复制到硬盘。<br /><br />例如，打开Word文档，输入一些文字，虽然我们看到的不一样了，但是硬盘中的文档没有改变，新增的文字暂时保存到了内存，Ctrl+S才会保存到硬盘。因为内存断电后会丢失数据，所以如果你编辑完Word文档忘记保存就关机了，那么你将永远无法找回这些内容。</p>
<h2>虚拟内存</h2>
<p>
如果我们运行的程序较多，占用的空间就会超过内存（内存条）容量。例如计算机的内存容量为2G，却运行着10个程序，这10个程序共占用3G的空间，也就意味着需要从硬盘复制 3G 的数据到内存，这显然是不可能的。<br /><br />操作系统（Operating System，简称 OS）为我们解决了这个问题：当程序运行需要的空间大于内存容量时，会将内存中暂时不用的数据再写回硬盘；需要这些数据时再从硬盘中读取，并将另外一部分不用的数据写入硬盘。这样，硬盘中就会有一部分空间用来存放内存中暂时不用的数据。这一部分空间就叫做虚拟内存（Virtual Memory）。<br /><br />3G - 2G = 1G，上面的情况需要在硬盘上分配 1G 的虚拟内存。<br /><br />硬盘的读写速度比内存慢很多，反复交换数据会消耗很多时间，所以如果你的内存太小，会严重影响计算机的运行速度，甚至会出现&rdquo;卡死&ldquo;现象，即使CPU强劲，也不会有大的改观。如果经济条件允许，建议将内存升级为 4G，在 win7、win8、win10 下运行软件就会比较流畅了。<br /><br />关于内存的更多知识，大家可以阅读《<a href="http://c.biancheng.net/c/140/" target="_blank">C语言内存精讲</a>》，我敢保证你将会顿悟。<br /><br />总结：CPU直接从内存中读取数据，处理完成后将结果再写入内存。</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1I05B017-0.png" alt="CPU、内存、硬盘和主板的关系" /><br />图1：CPU、内存、硬盘和主板的关系</div>]]></description></item><item><title>数据在内存中的存储（二进制形式存储）</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751696.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:25:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751696.html</guid><description><![CDATA[<p>计算机要处理的信息是多种多样的，如数字、文字、符号、图形、音频、视频等，这些信息在人们的眼里是不同的。但对于计算机来说，它们在内存中都是一样的，都是以二进制的形式来表示。<br /><br />要想学习编程，就必须了解二进制，它是计算机处理数据的基础。<br /><br />内存条是一个非常精密的部件，包含了上亿个电子元器件，它们很小，达到了纳米级别。这些元器件，实际上就是电路；电路的电压会变化，要么是 0V，要么是 5V，只有这两种电压。5V 是通电，用1来表示，0V 是断电，用0来表示。所以，一个元器件有2种状态，0 或者 1。<br /><br />我们通过电路来控制这些元器件的通断电，会得到很多0、1的组合。例如，8个元器件有 2<sup>8</sup>=256 种不同的组合，16个元器件有 2<sup>16</sup>=65536 种不同的组合。虽然一个元器件只能表示2个数值，但是多个结合起来就可以表示很多数值了。<br /><br />我们可以给每一种组合赋予特定的含义，例如，可以分别用 1101000、00011100、11111111、00000000、01010101、10101010 来表示 C、语、言、中、文、网 这几个字，那么结合起来 1101000 00011100 11111111 00000000 01010101 10101010 就表示&rdquo;<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>中文网&ldquo;。<br /><br />一般情况下我们不一个一个的使用元器件，而是将8个元器件看做一个单位，即使表示很小的数，例如 1，也需要8个，也就是 00000001。<br /><br />1个元器件称为1比特（Bit）或1位，8个元器件称为1字节（Byte），那么16个元器件就是2Byte，32个就是4Byte，以此类推：</p>
<ul>
<li>8&times;1024个元器件就是1024Byte，简写为1KB；</li>
<li>8&times;1024&times;1024个元器件就是1024KB，简写为1MB；</li>
<li>8&times;1024&times;1024&times;1024个元器件就是1024MB，简写为1GB。</li>

</ul>
<p>
<br />现在，你知道1GB的内存有多少个元器件了吧。我们通常所说的文件大小是多少 KB、多少 MB，就是这个意思。<br /><br />单位换算：</p>
<ul>
<li>1Byte = 8 Bit</li>
<li>1KB = 1024Byte = 2<sup>10</sup>Byte</li>
<li>1MB = 1024KB = 2<sup>20</sup>Byte</li>
<li>1GB = 1024MB = 2<sup>30</sup>Byte</li>
<li>1TB = 1024GB = 2<sup>40</sup>Byte</li>
<li>1PB = 1024TB = 2<sup>50</sup>Byte</li>
<li>1EB = 1024PB = 2<sup>60</sup>Byte</li>

</ul>
<p>
<br />我们平时使用计算机时，通常只会设计到 KB、MB、GB、TB 这几个单位，PB 和 EB 这两个高级单位一般在<a href="http://c.biancheng.net/big_data/" target="_blank">大数据</a>处理过程中才会用到。<br /><br />你看，在内存中没有abc这样的字符，也没有gif、jpg这样的图片，只有0和1两个数字，计算机也只认识0和1。所以，计算机使用二进制，而不是我们熟悉的十进制，写入内存中的数据，都会被转换成0和1的组合。<br /><br />我们将在《<a href="http://c.biancheng.net/c/130/" target="_blank">C语言调试</a>》中的《<a href="http://c.biancheng.net/view/vip_2085.html" target="_blank">查看、修改运行时的内存</a>》一节教大家如何操作C语言程序的内存。</p>
<h2>程序员的幽默</h2>
<p>
为了加深印象，最后给大家看个笑话。<br /><br />程序员A：&ldquo;哥们儿，最近手头紧，借点钱？&rdquo;<br /><br />程序员B：&ldquo;成啊，要多少？&rdquo;<br /><br />程序员A：&ldquo;一千行不？&rdquo;<br /><br />程序员B：&ldquo;咱俩谁跟谁！给你凑个整，1024，拿去吧。&rdquo;<br /><br />你看懂这个笑话了吗？请选出正确答案。<br /><br />A) 因为他同情程序员A，多给他24块<br />B) 这个程序员不会数数，可能是太穷饿晕了<br />C) 这个程序员故意的，因为他独裁的老婆规定1024是整数<br />D) 就像100是10的整数次方一样，1024是2的整数次方，对于程序员就是整数</p>]]></description></item><item><title>进制转换：二进制、八进制、十六进制、十进制之间的转换</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751692.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:24:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751692.html</guid><description><![CDATA[<blockquote>对于基础薄弱的读者，本节的内容可能略显晦涩和枯燥，如果你觉得吃力，可以暂时跳过，基本不会影响后续章节的学习，等用到的时候再来阅读。</blockquote>
<p>上节我们对二进制、八进制和十六进制进行了说明，本节重点讲解不同进制之间的转换，这在编程中经常会用到，尤其是<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>。</p>
<h2>将二进制、八进制、十六进制转换为十进制</h2>
<p>二进制、八进制和十六进制向十进制转换都非常容易，就是&ldquo;按权相加&rdquo;。所谓&ldquo;权&rdquo;，也即&ldquo;位权&rdquo;。<br /><br />假设当前数字是 N 进制，那么：</p>
<ul>
<li>对于整数部分，从右往左看，第 i 位的位权等于N<sup>i-1</sup></li>
<li>对于小数部分，恰好相反，要从左往右看，第 j 位的位权为N<sup>-j</sup>。</li>

</ul>
<p>
<br />更加通俗的理解是，假设一个多位数（由多个数字组成的数）某位上的数字是 1，那么它所表示的数值大小就是该位的位权。</p>
<h4>1) 整数部分</h4>
<p>
例如，将八进制数字&nbsp;53627 转换成十进制：</p>
<p class="info-box">53627 =&nbsp;5&times;8<sup>4</sup>&nbsp;+ 3&times;8<sup>3</sup>&nbsp;+ 6&times;8<sup>2</sup>&nbsp;+ 2&times;8<sup>1</sup>&nbsp;+ 7&times;8<sup>0</sup>&nbsp;=&nbsp;22423（十进制）</p>
<p>
从右往左看，第1位的位权为 8<sup>0</sup>=1，第2位的位权为 8<sup>1</sup>=8，第3位的位权为 8<sup>2</sup>=64，第4位的位权为 8<sup>3</sup>=512，第5位的位权为 8<sup>4</sup>=4096 &hellip;&hellip; 第n位的位权就为 8<sup>n-1</sup>。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p>
<blockquote>注意，这里我们需要以十进制形式来表示位权。</blockquote>
<p>
再如，将十六进制数字 9FA8C 转换成十进制：</p>
<p class="info-box">9FA8C =&nbsp;9&times;16<sup>4</sup>&nbsp;+ 15&times;16<sup>3</sup>&nbsp;+ 10&times;16<sup>2</sup>&nbsp;+ 8&times;16<sup>1</sup>&nbsp;+ 12&times;16<sup>0</sup>&nbsp;=&nbsp;653964（十进制）</p>
<p>
从右往左看，第1位的位权为 16<sup>0</sup>=1，第2位的位权为 16<sup>1</sup>=16，第3位的位权为 16<sup>2</sup>=256，第4位的位权为 16<sup>3</sup>=4096，第5位的位权为 16<sup>4</sup>=65536 &hellip;&hellip; 第n位的位权就为 16<sup>n-1</sup>。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。<br /><br />将二进制数字转换成十进制也是类似的道理：</p>
<p class="info-box">11010 = 1&times;2<sup>4</sup>&nbsp;+ 1&times;2<sup>3</sup>&nbsp;+ 0&times;2<sup>2</sup>&nbsp;+ 1&times;2<sup>1</sup>&nbsp;+ 0&times;2<sup>0</sup>&nbsp;= 26（十进制）</p>
<p>
从右往左看，第1位的位权为 2<sup>0</sup>=1，第2位的位权为 2<sup>1</sup>=2，第3位的位权为 2<sup>2</sup>=4，第4位的位权为 2<sup>3</sup>=8，第5位的位权为 2<sup>4</sup>=16 &hellip;&hellip; 第n位的位权就为 2<sup>n-1</sup>。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p>
<h4>2) 小数部分</h4>
<p>
例如，将八进制数字 423.5176 转换成十进制：</p>
<p class="info-box">423.5176&nbsp;=&nbsp;4&times;8<sup>2</sup>&nbsp;+ 2&times;8<sup>1</sup>&nbsp;+ 3&times;8<sup>0</sup>&nbsp;+ 5&times;8<sup>-1</sup>&nbsp;+ 1&times;8<sup>-2</sup>&nbsp;+ 7&times;8<sup>-3</sup>&nbsp;+ 6&times;8<sup>-4</sup>&nbsp;=&nbsp;275.65576171875（十进制）</p>
<p>
小数部分和整数部分相反，要从左往右看，第1位的位权为 8<sup>-1</sup>=1/8，第2位的位权为 8<sup>-2</sup>=1/64，第3位的位权为 8<sup>-3</sup>=1/512，第4位的位权为 8<sup>-4</sup>=1/4096&nbsp;&hellip;&hellip; 第m位的位权就为 8<sup>-m</sup>。<br /><br />再如，将二进制数字 1010.1101 转换成十进制：</p>
<p class="info-box">1010.1101 = 1&times;2<sup>3</sup>&nbsp;+ 0&times;2<sup>2</sup>&nbsp;+ 1&times;2<sup>1</sup>&nbsp;+ 0&times;2<sup>0</sup>&nbsp;+ 1&times;2<sup>-1</sup>&nbsp;+ 1&times;2<sup>-2</sup>&nbsp;+ 0&times;2<sup>-3</sup>&nbsp;+ 1&times;2<sup>-4</sup>&nbsp;=&nbsp;10.8125（十进制）</p>
<p>
小数部分和整数部分相反，要从左往右看，第1位的位权为 2<sup>-1</sup>=1/2，第2位的位权为 2<sup>-2</sup>=1/4，第3位的位权为 2<sup>-3</sup>=1/8，第4位的位权为 2<sup>-4</sup>=1/16&nbsp;&hellip;&hellip; 第m位的位权就为 2<sup>-m</sup>。<br /><br />更多转换成十进制的例子：</p>
<ul>
<li>二进制：1001 = 1&times;2<sup>3</sup>&nbsp;+ 0&times;2<sup>2</sup>&nbsp;+ 0&times;2<sup>1</sup>&nbsp;+ 1&times;2<sup>0</sup>&nbsp;= 8 + 0 + 0 + 1 = 9（十进制）</li>
<li>二进制：101.1001 = 1&times;2<sup>2</sup>&nbsp;+ 0&times;2<sup>1</sup>&nbsp;+ 1&times;2<sup>0&nbsp;</sup>+&nbsp;1&times;2<sup>-1</sup>&nbsp;+ 0&times;2<sup>-2</sup>&nbsp;+ 0&times;2<sup>-3</sup>&nbsp;+ 1&times;2<sup>-4</sup>&nbsp;= 4 + 0 + 1 + 0.5 + 0 + 0 + 0.0625 = 5.5625（十进制）</li>
<li>八进制：302 = 3&times;8<sup>2</sup>&nbsp;+ 0&times;8<sup>1</sup>&nbsp;+ 2&times;8<sup>0</sup>&nbsp;= 192 + 0 + 2 = 194（十进制）</li>
<li>八进制：302.46 = 3&times;8<sup>2</sup>&nbsp;+ 0&times;8<sup>1</sup>&nbsp;+ 2&times;8<sup>0</sup>&nbsp;+ 4&times;8<sup>-1</sup>&nbsp;+ 6&times;8<sup>-2</sup>&nbsp;= 192 + 0 + 2 + 0.5 + 0.09375= 194.59375（十进制）</li>
<li>十六进制：EA7 = 14&times;16<sup>2</sup>&nbsp;+ 10&times;16<sup>1</sup>&nbsp;+ 7&times;16<sup>0</sup>&nbsp;=&nbsp;3751（十进制）</li>

</ul>
<h2>将十进制转换为二进制、八进制、十六进制</h2>
<p>
将十进制转换为其它进制时比较复杂，整数部分和小数部分的算法不一样，下面我们分别讲解。</p>
<h4>1) 整数部分</h4>
<p>
十进制整数转换为 N 进制整数采用&ldquo;除 N 取余，逆序排列&rdquo;法。具体做法是：</p>
<ul>
<li>将 N 作为除数，用十进制整数除以 N，可以得到一个商和余数；</li>
<li>保留余数，用商继续除以 N，又得到一个新的商和余数；</li>
<li>仍然保留余数，用商继续除以 N，还会得到一个新的商和余数；</li>
<li>&hellip;&hellip;</li>
<li>如此反复进行，每次都保留余数，用商接着除以 N，直到商为 0 时为止。</li>

</ul>
<p>
<br />把先得到的余数作为 N 进制数的低位数字，后得到的余数作为 N 进制数的高位数字，依次排列起来，就得到了 N 进制数字。<br /><br />下图演示了将十进制数字 36926 转换成八进制的过程：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP56143-0.png" alt="" /></div>
<p>
<br />从图中得知，十进制数字 36926 转换成八进制的结果为 110076。<br /><br />下图演示了将十进制数字 42 转换成二进制的过程：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP56100-1.png" alt="" /></div>
<p>
<br />从图中得知，十进制数字 42 转换成二进制的结果为 101010。</p>
<h4>2) 小数部分</h4>
<p>
十进制小数转换成 N 进制小数采用&ldquo;乘 N 取整，顺序排列&rdquo;法。具体做法是：</p>
<ul>
<li>用 N 乘以十进制小数，可以得到一个积，这个积包含了整数部分和小数部分；</li>
<li>将积的整数部分取出，再用 N 乘以余下的小数部分，又得到一个新的积；</li>
<li>再将积的整数部分取出，继续用 N 乘以余下的小数部分；</li>
<li>&hellip;&hellip;</li>
<li>如此反复进行，每次都取出整数部分，用 N 接着乘以小数部分，直到积中的小数部分为 0，或者达到所要求的精度为止。</li>

</ul>
<p>
<br />把取出的整数部分按顺序排列起来，先取出的整数作为 N 进制小数的高位数字，后取出的整数作为低位数字，这样就得到了 N 进制小数。<br /><br />下图演示了将十进制小数 0.930908203125 转换成八进制小数的过程：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP55414-2.png" alt="" /></div>
<p>
<br />从图中得知，十进制小数 0.930908203125 转换成八进制小数的结果为 0.7345。<br /><br />下图演示了将十进制小数 0.6875 转换成二进制小数的过程：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP5H92-3.png" alt="" /></div>
<p>
<br />从图中得知，十进制小数 0.6875&nbsp;转换成二进制小数的结果为 0.1011。<br /><br />如果一个数字既包含了整数部分又包含了小数部分，那么将整数部分和小数部分开，分别按照上面的方法完成转换，然后再合并在一起即可。例如：</p>
<ul>
<li>十进制数字 36926.930908203125 转换成八进制的结果为&nbsp;110076.7345；</li>
<li>十进制数字 42.6875 转换成二进制的结果为&nbsp;101010.1011。</li>

</ul>
<p>
<br />下表列出了前 17 个十进制整数与二进制、八进制、十六进制的对应关系：</p>
<table>
<tbody>
<tr><th>十进制</th>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
<td>10</td>
<td>11</td>
<td>12</td>
<td>13</td>
<td>14</td>
<td>15</td>
<td>16</td>

</tr>
<tr><th>二进制</th>
<td>0</td>
<td>1</td>
<td>10</td>
<td>11</td>
<td>100</td>
<td>101</td>
<td>110</td>
<td>111</td>
<td>1000</td>
<td>1001</td>
<td>1010</td>
<td>1011</td>
<td>1100</td>
<td>1101</td>
<td>1110</td>
<td>1111</td>
<td>10000</td>

</tr>
<tr><th>八进制</th>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>10</td>
<td>11</td>
<td>12</td>
<td>13</td>
<td>14</td>
<td>15</td>
<td>16</td>
<td>17</td>
<td>20</td>

</tr>
<tr><th>十六进制</th>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
<td>A</td>
<td>B</td>
<td>C</td>
<td>D</td>
<td>E</td>
<td>F</td>
<td>10</td>

</tr>

</tbody>

</table>
<p>
<br />注意，十进制小数转换成其他进制小数时，结果有可能是一个无限位的小数。请看下面的例子：</p>
<ul>
<li>十进制 0.51 对应的二进制为&nbsp;0.100000101000111101011100001010001111010111...，是一个循环小数；</li>
<li>十进制 0.72 对应的二进制为 0.1011100001010001111010111000010100011110...，是一个循环小数；</li>
<li>十进制 0.625 对应的二进制为 0.101，是一个有限小数。</li>

</ul>
<h2>二进制和八进制、十六进制的转换</h2>
<p>
其实，任何进制之间的转换都可以使用上面讲到的方法，只不过有时比较麻烦，所以一般针对不同的进制采取不同的方法。将二进制转换为八进制和十六进制时就有非常简洁的方法，反之亦然。</p>
<h4>1) 二进制整数和八进制整数之间的转换</h4>
<p>
二进制整数转换为八进制整数时，每三位二进制数字转换为一位八进制数字，运算的顺序是从低位向高位依次进行，高位不足三位用零补齐。下图演示了如何将二进制整数 1110111100 转换为八进制：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP53a2-4.png" alt="" /></div>
<p>
<br />从图中可以看出，二进制整数 1110111100 转换为八进制的结果为 1674。<br /><br />八进制整数转换为二进制整数时，思路是相反的，每一位八进制数字转换为三位二进制数字，运算的顺序也是从低位向高位依次进行。下图演示了如何将八进制整数 2743 转换为二进制：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP54395-5.png" alt="" /></div>
<p>
<br />从图中可以看出，八进制整数 2743 转换为二进制的结果为 10111100011。</p>
<h4>2) 二进制整数和十六进制整数之间的转换</h4>
<p>
二进制整数转换为十六进制整数时，每四位二进制数字转换为一位十六进制数字，运算的顺序是从低位向高位依次进行，高位不足四位用零补齐。下图演示了如何将二进制整数 10 1101 0101 1100&nbsp;转换为十六进制：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP53006-6.png" alt="" /></div>
<p>
<br />从图中可以看出，二进制整数 10 1101 0101 1100 转换为十六进制的结果为 2D5C。<br /><br />十六进制整数转换为二进制整数时，思路是相反的，每一位十六进制数字转换为四位二进制数字，运算的顺序也是从低位向高位依次进行。下图演示了如何将十六进制整数 A5D6 转换为二进制：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1AP53555-7.png" alt="" /></div>
<p>
<br />从图中可以看出，十六进制整数 A5D6 转换为二进制的结果为 1010 0101 1101 0110。<br /><br />在C语言编程中，二进制、八进制、十六进制之间几乎不会涉及小数的转换，所以这里我们只讲整数的转换，大家学以致用足以。另外，八进制和十六进制之间也极少直接转换，这里我们也不再讲解了。</p>
<h2>总结</h2>
<p>
本节前面两部分讲到的转换方法是通用的，任何进制之间的转换都可以采用，只是有时比较麻烦而已。二进制和八进制、十六进制之间的转换有非常简洁的方法，所以没有采用前面的方法。</p>]]></description></item><item><title>进制详解：二进制、八进制和十六进制</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751687.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:23:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751687.html</guid><description><![CDATA[<p>我们平时使用的数字都是由 0~9 共十个数字组成的，例如 1、9、10、297、952 等，一个数字最多能表示九，如果要表示十、十一、二十九、一百等，就需要多个数字组合起来。<br /><br />例如表示 5+8 的结果，一个数字不够，只能&rdquo;进位&ldquo;，用 13 来表示；这时&rdquo;进一位&ldquo;相当于十，&rdquo;进两位&ldquo;相当于二十。<br /><br />因为逢十进一（满十进一），也因为只有 0~9 共十个数字，所以叫做十进制（Decimalism）。十进制是在人类社会发展过程中自然形成的，它符合人们的思维习惯，例如人类有十根手指，也有十根脚趾。<br /><br />进制也就是进位制。进行加法运算时逢X进一（满X进一），进行减法运算时借一当X，这就是X进制，这种进制也就包含X个数字，基数为X。十进制有 0~9 共10个数字，基数为10，在加减法运算中，逢十进一，借一当十。</p>
<h2>二进制</h2>
<p>
我们不妨将思维拓展一下，既然可以用 0~9 共十个数字来表示数值，那么也可以用0、1两个数字来表示数值，这就是二进制（Binary）。例如，数字&nbsp;0、1、10、111、100、1000001 都是有效的二进制。<br /><br />在计算机内部，数据都是以二进制的形式存储的，二进制是学习编程必须掌握的基础。本节我们先讲解二进制的概念，下节讲解数据在内存中的存储，让大家学以致用。<br /><br />二进制加减法和十进制加减法的思想是类似的：</p>
<ul>
<li>对于十进制，进行加法运算时逢十进一，进行减法运算时借一当十；</li>
<li>对于二进制，进行加法运算时逢二进一，进行减法运算时借一当二。</li>

</ul>
<p>
<br />下面两张示意图详细演示了二进制加减法的运算过程。<br /><br />1) 二进制加法：1+0=1、1+1=10、11+10=101、111+111=1110</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1A45323b-0.png" alt="" /><br />图1：二进制加法示意图</div>
<p>
<br />2) 二进制减法：1-0=1、10-1=1、101-11=10、1100-111=101</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1A4534b5-1.png" alt="" /><br />图2：二进制减法示意图</div>
<h2>八进制</h2>
<p>
除了二进制，<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>还会使用到八进制。<br /><br />八进制有 0~7 共8个数字，基数为8，加法运算时逢八进一，减法运算时借一当八。例如，数字 0、1、5、7、14、733、67001、25430 都是有效的八进制。<br /><br />下面两张图详细演示了八进制加减法的运算过程。<br /><br />1) 八进制加法：3+4=7、5+6=13、75+42=137、2427+567=3216</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1A4532496-2.png" alt="" /><br />图3：八进制加法示意图</div>
<p>
<br />2) 八进制减法：6-4=2、52-27=23、307-141=146、7430-1451=5757</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1A4533L4-3.png" alt="" /><br />图4：八进制减法示意图</div>
<h2>十六进制</h2>
<p>
除了二进制和八进制，十六进制也经常使用，甚至比八进制还要频繁。<br /><br />十六进制中，用A来表示10，B表示11，C表示12，D表示13，E表示14，F表示15，因此有 0~F 共16个数字，基数为16，加法运算时逢16进1，减法运算时借1当16。例如，数字 0、1、6、9、A、D、F、419、EA32、80A3、BC00 都是有效的十六进制。</p>
<blockquote>注意，十六进制中的字母不区分大小写，ABCDEF 也可以写作 abcdef。</blockquote>
<p>
下面两张图详细演示了十六进制加减法的运算过程。<br /><br />1) 十六进制加法：6+7=D、18+BA=D2、595+792=D27、2F87+F8A=3F11</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1A45343Z-4.png" alt="" /><br />图5：十六进制加法示意图</div>
<p>
<br />2) 十六进制减法：D-3=A、52-2F=23、E07-141=CC6、7CA0-1CB1=5FEF</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1A4531O5-5.png" alt="" /><br />图6：十六进制减法示意图</div>]]></description></item><item><title>学编程难吗？多久能入门？</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751677.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:22:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751677.html</guid><description><![CDATA[<p>这篇文章主要是解答初学者的疑惑，没有信心的读者看了会吃一颗定心丸，浮躁的读者看了会被泼一盆冷水。</p>
<h2>学编程难吗？</h2>
<p>编程是一门技术，我也不知道它难不难，我只知道，只要你想学，肯定能学会。每个人的逻辑思维能力不同，兴趣点不同，总有一部分人觉得容易，一部分人觉得吃力。<br /><br />在我看来，技术就是一层窗户纸，是有道理可以遵循的，最起码要比搞抽象的艺术容易很多。<br /><br />但是，隔行如隔山，学好编程也不是一朝一夕的事，想&ldquo;吃快餐&rdquo;的读者可以退出编程界了，浮躁的人搞不了技术。<br /><br />在技术领域，编程的入门门槛很低，互联网的资料很多，只要你有一台计算机，一根网线，具备初中学历，就可以学习，投资在 5000RMB 左右。<br /><br />不管是技术还是非技术，要想有所造诣，都必须潜心钻研，没有几年功夫不会鹤立鸡群。所以请先问问你自己，你想学编程吗，你喜欢吗，如果你觉得自己对编程很感兴趣，想了解软件或网站是怎么做的，那么就不要再问这个问题了，尽管去学就好了。</p>
<h2>多久能学会编程？</h2>
<p>
这是一个没有答案的问题。每个人投入的时间、学习效率和基础都不一样。如果你每天都拿出大把的时间来学习，那么两三个月就可以学会C/<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>，不到半年时间就可以编写出一些软件。<br /><br />但是有一点可以肯定，几个月从小白成长为大神是绝对不可能的。要想出类拔萃，没有几年功夫是不行的。学习编程不是看几本书就能搞定的，需要你不断的练习，编写代码，积累零散的知识点，代码量跟你的编程水平直接相关，没有几万行代码，没有拿得出手的作品，怎能称得上&ldquo;大神&rdquo;。<br /><br />每个人程序员都是这样过来的，开始都是一头雾水，连输出九九乘法表都很吃力，只有通过不断练习才能熟悉，这是一个强化思维方式的过程。<br /><br />知识点可以在短时间内了解，但是思维方式和编程经验需要不断实践才能强化，这就是为什么很多初学者已经了解了<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>的基本概念，但是仍然不会编写代码的原因。<br /><br />程序员被戏称为&rdquo;码农&ldquo;，意思是写代码的农民，要想成为一个合格的农民，必须要脚踏实地辛苦耕耘。<br /><br />也不要压力太大，一切编程语言都是纸老虎，一层窗户纸，只要开窍了，就容易了。</p>
<h2>&ldquo;浸泡&rdquo;理论</h2>
<p>
这是我自己独创的一个理论，意思是说：一个人要想在某一方面有所成就，就必须有半年以上的时间，每天花 10 个小时&ldquo;浸泡&rdquo;在这件事情上，最终一定会有所收获。<br /><br /></p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1-1Q221143KC15.jpg" alt="沉浸其中" /></div>
<p>
<br />很多领域都是「一年打基础，两年见成效，三年有突破」，但是很多人在不到一年的时间里就放弃了，总觉得这个行业太难，不太适合自己。<br /><br />轻言放弃是很可怕的，你要知道，第一次放弃只是浪费了时间，第二次放弃会打击你的信心，第三次放弃会摧毁你的意志，你就再也没有尝试的勇气了，&ldquo;蹉跎人生&rdquo;就是这么来的。<br /><br />你也不要羡慕那些富二代官二代，你以为人生就是一次百米短跑，你赢了就是赢了，其实人生是一场接力赛，你的父辈祖辈都得赢，那些富二代官二代从好几十年以前就开始积累了。<br /><br />所以，沉下一颗心来，从现在开始积累吧，有执念的人最可怕。</p>]]></description></item><item><title>英语和数学不好，能学编程吗？</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751683.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:22:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751683.html</guid><description><![CDATA[<p>很多初学者认为，编程语言是由英文组成的，而且会涉及很多算法，自己的英语和数学功底不好，到底能不能学会编程呢？</p>
<h2>英语基础不好可以学会编程吗？</h2>
<p>首先，学习编程需要你有英语基础；但是，要求并不高，初中水平完全可以胜任。<br /><br />编程语言起源于美国，是由英文构成的，其中包括几十个英文的关键字以及几百个英文的函数，除非需要对文本进行处理，否则一般不会出现中文。但是，它们都是孤立的单词，不构成任何语句，不涉及任何语法。<br /><br />几十个关键字不多，用得多了自然会记住，相信大家也不会担心。下面是<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>中的 32 个关键字：</p>
<div>&nbsp;</div>
<div>
<table>
<tbody>
<tr>
<td>int</td>
<td>float</td>
<td>double</td>
<td>char</td>
<td>short</td>
<td>long</td>
<td>signed</td>
<td>unsigned</td>

</tr>
<tr>
<td>if</td>
<td>else</td>
<td>switch</td>
<td>case</td>
<td>default</td>
<td>for</td>
<td>while</td>
<td>do</td>

</tr>
<tr>
<td>break</td>
<td>continue</td>
<td>return</td>
<td>void</td>
<td>const</td>
<td>sizeof</td>
<td>struct</td>
<td>typedef</td>

</tr>
<tr>
<td>static</td>
<td>extern</td>
<td>auto</td>
<td>register</td>
<td>enum</td>
<td>goto</td>
<td>union</td>
<td>volatile</td>

</tr>

</tbody>

</table>

</div>
<p>
<br />几百个函数就没人能记住了（包括我），也不用记住，查询文档即可，每种编程语言都会提供配套的文档。常用到的函数也就几十个，记住它们就足够应付日常开发了，生僻的函数查询文档即可。<br /><br />此外，我推荐大家安装有道词典，它的划词取词功能非常棒，选中一个单词或者句子能够及时翻译，这对大家记忆和理解代码非常有帮助。</p>
<h4>对于英文资料</h4>
<p>
如果你希望达到很高的造诣，希望被人称为&ldquo;大神&rdquo;，那么肯定要阅读英文的技术资料（不是所有资料都被翻译成了中文），初中水平就有点吃力了。<br /><br />不过，长期阅读英文会提高你的英文水平，只要你坚持一段时间，即使只有初中水平，我相信借助有道词典也会提高很快。</p>
<h2>数学基础不好可以学编程吗？</h2>
<p>
谈到数学，那真是多虑了，它根本不构成障碍，会加减乘除就能学编程。<br /><br />编程语言确实涉及到很多算法，有一些还需要高等数学知识，但是，这些算法都已经被封装好了，你直接拿来用就可以，根本不用你重复造轮子。<br /><br />另外，这些算法都是在很深的底层为我们默默的工作，初级程序员根本不会涉及到算法，即使是别人已经封装好的算法，一般也没有机会使用，所以，你就别瞎操心了。我学编程八年了，至今都没有设计过什么算法，也没有使用过别人的算法。</p>]]></description></item><item><title>C语言是菜鸟和大神的分水岭</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751674.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:21:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751674.html</guid><description><![CDATA[<p>作为一门古老的编程语言，<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>已经坚挺了好几十年了，初学者从C语言入门，大学将C语言视为基础课程。不管别人如何抨击，如何唱衰，C语言就是屹立不倒；<a href="http://c.biancheng.net/java/" target="_blank">Java</a>、<a href="http://c.biancheng.net/csharp/" target="_blank">C#</a>、<a href="http://c.biancheng.net/python/" target="_blank">Python</a>、PHP、Perl 等都有替代方案，它们都可以倒下，唯独C语言不行。<br /><br />程序是在内存中运行的（我们将在《<a href="http://c.biancheng.net/view/1727.html" target="_blank">载入内存，让程序运行起来</a>》一节中详细说明），一名合格的程序员必须了解内存，学习C语言是了解内存布局的最简单、最直接、最有效的途径，C语言简直是为内存而生的，它比任何一门编程语言都贴近内存。<br /><br />所谓内存，就是我们常说的内存条，就是下图这个玩意，相信你肯定见过。</p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/134I32557-0.jpg" alt="内存条" /><br />图：内存条</div>
<p>
<br />所有的程序都在拼尽全力节省内存，都在不遗余力提高内存使用效率，计算机的整个发展过程都在围绕内存打转，不断地优化内存布局，以保证可以同时运行多个程序。<br /><br />不了解内存，就学不会进程和线程，就没有资格玩中大型项目，没有资格开发底层组件，没有资格架构一个系统，命中注定你就是一个菜鸟，成不了什么气候。<br /><br />以上这点我有深刻的体会！工作期间我曾专注于网站开发，虽然能够设计出界面漂亮、体验良好的网页，但是对内存泄漏、多线程、共享内存等底层概念一窍不通，感觉和周围同事的差距很大，这让我非常郁闷，不知道如何突破。我曾多次尝试学习内存和线程，也找了很多资料，但是无论如何都啃不懂，到头来还是一头雾水。<br /><br />离职后我全职运营C语言中文网，于是决定再次系统、深入、全面地学习C语言，并结合C语言去了解一些内存知识，这个时候我才发现，原来C语言就是为内存而生的，C语言的设计和内存的布局是严密贴合的，我因为学习C语言而吃透了内存，了解了计算机内存是如何分布和组织的。</p>
<blockquote>C语言无时无刻不在谈内存，内存简直就是如影随形，你不得不去研究它。</blockquote>
<p>
至关重要的一点是，我能够把内存和具体的编程知识以及程序的运行过程结合起来，真正做到了学以致用，让概念落地，而不是空谈，这才是最难得的。<br /><br />另外一个惊喜是，攻克内存后我竟然也能够理解进程和线程了，原来进程和线程也是围绕内存打转的，从一定程度上讲，它们的存在也是为了更加高效地利用内存。<br /><br />从C语言到内存，从内存到进程和线程，环环相扣：不学C语言就吃不透内存，不学内存就吃不透进程和线程。<br /><br />我感觉自己瞬间升华了，达到了一个新的高度，之前的很多谜团都解开了，和大神交流也没有障碍了。<br /><br />「内存 + 进程 + 线程」这几个最基本的计算机概念是菜鸟和大神的分水岭，也只有学习C语言才能透彻地理解它们。Java、C#、PHP、Python、<a href="http://c.biancheng.net/js/" target="_blank">JavaScript</a>&nbsp;程序员工作几年后会遇到瓶颈，有很多人会回来学习C语言，重拾底层概念，让自己再次突破。</p>]]></description></item><item><title>C语言究竟是一门怎样的语言？</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751672.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:20:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751672.html</guid><description><![CDATA[<p>对于大部分程序员，<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>是学习编程的第一门语言，很少有不了解C的程序员。<br /><br />C语言除了能让你了解编程的相关概念，带你走进编程的大门，还能让你明白程序的运行原理，比如，计算机的各个部件是如何交互的，程序在内存中是一种怎样的状态，操作系统和用户程序之间有着怎样的&ldquo;爱恨情仇&rdquo;，这些底层知识决定了你的发展高度，也决定了你的职业生涯。<br /><br />如果你希望成为出类拔萃的人才，而不仅仅是码农，这么这些知识就是不可逾越的。也只有学习C语言，才能更好地了解它们。有了足够的基础，以后学习其他语言，会触类旁通，很快上手，7 天了解一门新语言不是神话。<br /><br />C语言概念少，词汇少，包含了基本的编程元素，后来的很多语言（<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>、<a href="http://c.biancheng.net/java/" target="_blank">Java</a>等）都参考了C语言，说C语言是现代编程语言的开山鼻祖毫不夸张，它改变了编程世界。<br /><br />正是由于C语言的简单，对初学者来说，学习成本小，时间短，结合本教程，能够快速掌握编程技术。<br /><br />在世界编程语言排行榜中，C语言、Java 和 C++ 霸占了前三名，拥有绝对优势，如下表所示：</p>
<table>
<tbody>
<tr><th rowspan="1" colspan="3">2015年01月榜单</th></tr>
<tr><th>排名</th><th>语言</th><th>占有率</th></tr>
<tr>
<td>1</td>
<td>C</td>
<td>16.703%</td>

</tr>
<tr>
<td>2</td>
<td>Java</td>
<td>15.528%</td>

</tr>
<tr>
<td>3</td>
<td>Objective-C</td>
<td>6.953%</td>

</tr>
<tr>
<td>4</td>
<td>C++</td>
<td>6.705%</td>

</tr>
<tr>
<td>5</td>
<td><a href="http://c.biancheng.net/csharp/" target="_blank">C#</a></td>
<td>5.045%</td>

</tr>
<tr>
<td>6</td>
<td>PHP</td>
<td>3.784%</td>

</tr>
<tr>
<td>7</td>
<td><a href="http://c.biancheng.net/js/" target="_blank">JavaScript</a></td>
<td>3.274%</td>

</tr>
<tr>
<td>8</td>
<td><a href="http://c.biancheng.net/python/" target="_blank">Python</a></td>
<td>2.613%</td>

</tr>
<tr>
<td>9</td>
<td>Perl</td>
<td>2.256%</td>

</tr>
<tr>
<td>10</td>
<td>PL/SQL</td>
<td>2.014%</td>

</tr>
<tr><th rowspan="1" colspan="3">2015年06月榜单</th></tr>
<tr><th>排名</th><th>语言</th><th>占有率</th></tr>
<tr>
<td>1</td>
<td>Java</td>
<td>17.822%</td>

</tr>
<tr>
<td>2</td>
<td>C</td>
<td>16.788%</td>

</tr>
<tr>
<td>3</td>
<td>C++</td>
<td>7.756%</td>

</tr>
<tr>
<td>4</td>
<td>C#</td>
<td>5.056%</td>

</tr>
<tr>
<td>5</td>
<td>Objective-C</td>
<td>4.339%</td>

</tr>
<tr>
<td>6</td>
<td>Python</td>
<td>3.999%</td>

</tr>
<tr>
<td>7</td>
<td>Visual Basic .NET</td>
<td>3.168%</td>

</tr>
<tr>
<td>8</td>
<td>PHP</td>
<td>2.868%</td>

</tr>
<tr>
<td>9</td>
<td>JavaScript</td>
<td>2.295%</td>

</tr>
<tr>
<td>10</td>
<td>Delphi/Object Pascal</td>
<td>1.869%</td>

</tr>
<tr><th rowspan="1" colspan="3">2018年01月榜单</th></tr>
<tr><th>排名</th><th>语言</th><th>占有率</th></tr>
<tr>
<td>1</td>
<td>Java</td>
<td>14.215%</td>

</tr>
<tr>
<td>2</td>
<td>C</td>
<td>11.037%</td>

</tr>
<tr>
<td>3</td>
<td>C++</td>
<td>5.603%</td>

</tr>
<tr>
<td>4</td>
<td>Python</td>
<td>4.678%</td>

</tr>
<tr>
<td>5</td>
<td>C#</td>
<td>3.754%</td>

</tr>
<tr>
<td>6</td>
<td>JavaScript</td>
<td>3.465%</td>

</tr>
<tr>
<td>7</td>
<td>Visual Basic .NET</td>
<td>3.261%</td>

</tr>
<tr>
<td>8</td>
<td>R</td>
<td>2.549%</td>

</tr>
<tr>
<td>9</td>
<td>PHP</td>
<td>2.532%</td>

</tr>
<tr>
<td>10</td>
<td>Perl</td>
<td>2.419%</td>

</tr>

</tbody>

</table>
<p>
<br />2017年，由于小型软件设备的蓬勃发展以及汽车行业底层软件的增加，C语言还拿下了「年度编程语言」的桂冠，成为 2017 年全球增长最快的编程语言。下表列出了最近 10 年的&ldquo;年度编程语言&rdquo;：</p>
<table>
<tbody>
<tr><th>年份</th><th>优胜者</th></tr>
<tr><th>2017</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />C</td>

</tr>
<tr><th>2016</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />Go</td>

</tr>
<tr><th>2015</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />Java</td>

</tr>
<tr><th>2014</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />JavaScript</td>

</tr>
<tr><th>2013</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />Transact-SQL</td>

</tr>
<tr><th>2012</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />Objective-C</td>

</tr>
<tr><th>2011</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />Objective-C</td>

</tr>
<tr><th>2010</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />Python</td>

</tr>
<tr><th>2009</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />Go</td>

</tr>
<tr><th>2008</th>
<td><img src="http://c.biancheng.net/uploads/allimg/181221/1343464435-0.png" alt="" />C</td>

</tr>

</tbody>

</table>
<p>
<br />C语言诞生于20世纪70年代，年龄比我们都要大，我们将在《<a href="http://c.biancheng.net/view/vip_1742.html" target="_blank">C语言的三套标准：C89、C99和C11</a>》一节中讲解更多关于C语言的历史。<br /><br />当然，C语言也不是没有缺点，毕竟是70后老人，有点落后时代，开发效率较低，后来人们又在C语言的基础上增加了面向对象的机制，形成了一门新的语言，称为C++，我们将在《<a href="http://c.biancheng.net/view/vip_1722.html" target="_blank">C语言和C++到底有什么关系</a>》中讲解。</p>
<h2>C语言难吗？</h2>
<p>
和 Java、C++、Python、C#、JavaScript 等高级编程语言相比，C语言涉及到的编程概念少，附带的标准库小，所以整体比较简洁，容易学习，非常适合初学者入门。<br /><br /></p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1332154T9-0.jpg" alt="C语言非常简单" /></div>
<p>
<br />编程语言的发展大概经历了以下几个阶段：</p>
<p class="info-box"><a href="http://c.biancheng.net/asm/" target="_blank">汇编语言</a>&nbsp;--&gt; 面向过程编程 --&gt; 面向对象编程</p>
<ul>
<li>汇编语言是编程语言的拓荒年代，它非常底层，直接和计算机硬件打交道，开发效率低，学习成本高；</li>
<li>C语言是面向过程的编程语言，已经脱离了计算机硬件，可以设计中等规模的程序了；</li>
<li>Java、C++、Python、C#、PHP 等是面向对象的编程语言，它们在面向过程的基础上又增加了很多概念。</li>

</ul>
<p>
<br />C语言出现的时候，已经度过了编程语言的拓荒年代，具备了现代编程语言的特性，但是这个时候还没有出现&ldquo;<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA/564526" target="_blank">软件危机</a>&rdquo;，人们没有动力去开发更加高级的语言，所以也没有太复杂的编程思想。<br /><br />也就是说，C语言虽然是现代编程语言，但是它涉及到的概念少，词汇少，思想也简单。C语言学习成本小，初学者能够在短时间内掌握编程技能，非常适合入门。</p>
<h2>C语言是计算机产业的核心语言</h2>
<p>
也许是机缘巧合，C语言出现后不久，计算机产业开始爆发，计算机硬件越来越小型化，越来越便宜，逐渐进入政府机构，进入普通家庭，C语言成了编程的主力军，获得了前所未有的成功，操作系统、常用软件、硬件驱动、底层组件、核心算法、数据库、小游戏等都使用C语言开发。<br /><br />雷军说过，站在风口上，猪都能飞起来；C语言就是那头猪，不管它好不好，反正它飞起来了。<br /><br /></p>
<div><img src="http://c.biancheng.net/uploads/allimg/181221/1332154556-1.jpg" alt="C语言飞起来了" /></div>
<p>
<br />C语言在计算机产业大爆发阶段被万人膜拜，无疑会成为整个软件产业的基础，拥有核心地位。<br /><br />软件行业的很多细分学科都是基于C语言的，学习<a href="http://c.biancheng.net/data_structure/" target="_blank">数据结构</a>、算法、操作系统、编译原理等都离不开C语言，所以大学将C语言作为一门公共课程，计算机相关专业的同学都要学习。<br /><br />C语言被誉为&ldquo;上帝语言&rdquo;，它不但奠定了软件产业的基础，还创造了很多其它语言，例如：</p>
<ul>
<li>PHP、Python 等都是用C语言开发出来的，虽然平时做项目的时候看不到C语言的影子，但是如果想深入学习 PHP 和 Python，那就要有C语言基础了。</li>
<li>C++ 和 Objective-C 干脆在C语言的基础上直接进行扩展，增加一些新功能后变成了新的语言，所以学习 C++ 和 Objective-C 之前也要先学习C语言。</li>

</ul>
<p>
<br />C语言是有史以来最为重要的编程语言：要进入编程行业高手级别必学C语言，要挣大钱必学C语言，要做黑客、红客必学C语言，要面试名企、外企、高薪职位必学C语言。</p>]]></description></item><item><title>通俗地理解什么是编程语言</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751669.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:19:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751669.html</guid><description><![CDATA[<p>学习编程语言之前，首先要搞清楚「编程语言」这个概念。<br /><br />很小的时候，父母就教我们开口说话，也教我们如何理解别人讲话的意思。经过长时间的熏陶和自我学习，我们竟然在不知不觉中学会了说话，同时也能听懂其他小朋友说话的意思了，我们开始向父母要零花钱买零食和玩具、被欺负了向父母倾诉&hellip;&hellip;<br /><br />我们说的是汉语，是&ldquo;中国语言&rdquo;，只要把我们的需求告诉父母，父母就会满足，我们用&ldquo;中国语言&rdquo;来控制父母，让父母做我们喜欢的事情。<br /><br />&ldquo;中国语言&rdquo;有固定的格式，每个汉字代表的意思不同，我们必须正确的表达，父母才能理解我们的意思。例如让父母给我们10元零花钱，我们会说&ldquo;妈妈给我10块钱吧，我要买小汽车&rdquo;。如果我们说&ldquo;10元给我汽车小零花钱妈妈&rdquo;，或者&ldquo;妈妈给我10亿人民币，我要买F-22&rdquo;，妈妈就会觉得奇怪，听不懂我们的意思，或者理解错误，责备我们。<br /><br />我们通过有固定格式和固定词汇的&ldquo;语言&rdquo;来控制他人，让他人为我们做事情。语言有很多种，包括汉语、英语、法语、韩语等，虽然他们的词汇和格式都不一样，但是可以达到同样的目的，我们可以选择任意一种语言去控制他人。<br /><br />同样，我们也可以通过&rdquo;语言&ldquo;来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言（Programming Language）。<br /><br />编程语言也有固定的格式和词汇，我们必须经过学习才会使用，才能控制计算机。<br /><br />编程语言有很多种，常用的有<a href="http://c.biancheng.net/c/" target="_blank">C语言</a>、<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a>、<a href="http://c.biancheng.net/java/" target="_blank">Java</a>、<a href="http://c.biancheng.net/csharp/" target="_blank">C#</a>、<a href="http://c.biancheng.net/python/" target="_blank">Python</a>、PHP、<a href="http://c.biancheng.net/js/" target="_blank">JavaScript</a>、<a href="http://c.biancheng.net/golang/" target="_blank">Go语言</a>、Objective-C、Swift、<a href="http://c.biancheng.net/asm/" target="_blank">汇编语言</a>等，每种语言都有自己擅长的方面，例如：</p>
<table>
<tbody>
<tr><th width="90">编程语言</th><th>主要用途</th></tr>
<tr>
<td>C/C++</td>
<td>C++ 是在C语言的基础上发展起来的，C++ 包含了C语言的所有内容，C语言是C++的一个部分，它们往往混合在一起使用，所以统称为 C/C++。C/C++主要用于PC软件开发、<a href="http://c.biancheng.net/linux_tutorial/" target="_blank">Linux</a>开发、游戏开发、单片机和嵌入式系统。</td>

</tr>
<tr>
<td>Java</td>
<td>Java 是一门通用型的语言，可以用于网站后台开发、<a href="http://c.biancheng.net/android/" target="_blank">Android</a>&nbsp;开发、PC软件开发，近年来又涉足了<a href="http://c.biancheng.net/big_data/" target="_blank">大数据</a>领域（归功于 Hadoop 框架的流行）。</td>

</tr>
<tr>
<td>C#</td>
<td>C# 是微软开发的用来对抗 Java 的一门语言，实现机制和 Java 类似，不过 C# 显然失败了，目前主要用于 Windows 平台的软件开发，以及少量的网站后台开发。</td>

</tr>
<tr>
<td>Python</td>
<td>Python 也是一门通用型的语言，主要用于系统运维、网站后台开发、数据分析、人工智能、<a href="http://c.biancheng.net/cloud_computing/" target="_blank">云计算</a>等领域，近年来势头强劲，增长非常快。</td>

</tr>
<tr>
<td>PHP</td>
<td>PHP 是一门专用型的语言，主要用来开发网站后台程序。</td>

</tr>
<tr>
<td>JavaScript</td>
<td>JavaScript 最初只能用于网站前端开发，而且是前端开发的唯一语言，没有可替代性。近年来由于 Node.js 的流行，JavaScript 在网站后台开发中也占有了一席之地，并且在迅速增长。</td>

</tr>
<tr>
<td>Go语言</td>
<td>Go语言是 2009 年由 Google 发布的一款编程语言，成长非常迅速，在国内外已经有大量的应用。Go 语言主要用于服务器端的编程，对 C/C++、Java 都形成了不小的挑战。</td>

</tr>
<tr>
<td>Objective-C<br />Swift</td>
<td>Objective-C 和 Swift 都只能用于苹果产品的开发，包括 Mac、MacBook、iPhone、iPad、iWatch 等。</td>

</tr>
<tr>
<td>汇编语言</td>
<td>汇编语言是计算机发展初期的一门语言，它的执行效率非常高，但是开发效率非常低，所以在常见的应用程序开发中不会使用汇编语言，只有在对效率和实时性要求极高的关键模块才会考虑汇编语言，例如操作系统内核、驱动、仪器仪表、工业控制等。</td>

</tr>

</tbody>

</table>
<p>
<br />可以将不同的编程语言比喻成各国语言，为了表达同一个意思，可能使用不同的语句。例如，表达&ldquo;世界你好&rdquo;的意思：</p>
<ul>
<li>汉语：世界你好；</li>
<li>英语：Hello World</li>
<li>法语：Bonjour tout le monde</li>

</ul>
<p>
<br />在编程语言中，同样的操作也可能使用不同的语句。例如，在屏幕上显示&ldquo;C语言中文网&rdquo;：</p>
<ul>
<li>C语言：puts("C语言中文网");</li>
<li>PHP：echo "C语言中文网";</li>
<li>Java：System.out.println("C语言中文网");</li>

</ul>
<p>
<br />编程语言类似于人类语言，由直观的词汇组成，我们很容易就能理解它的意思，例如在C语言中，我们使用&nbsp;<code>puts</code>&nbsp;这个词让计算机在屏幕上显示出文字；puts 是 output string（输出字符串）的缩写。<br /><br />使用 puts 在屏幕上显示&ldquo;C语言中文网&rdquo;：</p>
<pre class="info-box">puts("C语言中文网");</pre>
<p>我们把要显示的内容放在<code>("</code>和<code>")</code>之间，并且在最后要有<code>;</code>。你必须要这样写，这是固定的格式。<br /><br />总结：编程语言是用来控制计算机的一系列指令（Instruction），它有固定的格式和词汇（不同编程语言的格式和词汇不一样），必须遵守，否则就会出错，达不到我们的目的。<br /><br />C语言（C Language）是编程语言的一种，学习C语言，主要是学习它的格式和词汇。下面是一个C语言的完整例子，它会让计算机在屏幕上显示&rdquo;C语言中文网&ldquo;。</p>
<blockquote>
<p>这个例子主要演示C语言的一些固有格式和词汇，看不懂的读者不必深究，也不必问为什么是这样，后续我们会逐步给大家讲解。</p>

</blockquote>
<pre class="info-box">#include &lt;stdio.h&gt;
int main(){
    puts("C语言中文网");
    return 0;
}</pre>
<p>这些具有特定含义的词汇、语句，按照特定的格式组织在一起，就构成了源代码（Source Code），也称源码或代码（Code）。<br /><br />那么，C语言肯定规定了源代码中每个词汇、语句的含义，也规定了它们该如何组织在一起，这就是语法（Syntax）。它与我们学习英语时所说的&ldquo;语法&rdquo;类似，都规定了如何将特定的词汇和句子组织成能听懂的语言。<br /><br />编写源代码的过程就叫做编程（Program）。从事编程工作的人叫程序员（Programmer）。程序员也很幽默，喜欢自嘲，经常说自己的工作辛苦，地位低，像农民一样，所以称自己是&rdquo;码农&ldquo;，就是写代码的农民。也有人自嘲称是&rdquo;程序猿&ldquo;。</p>]]></description></item><item><title>哪款C语言编译器（IDE）适合初学者？</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751666.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 05:18:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751666.html</guid><description><![CDATA[<blockquote>这里我们把&ldquo;编译器&rdquo;和&ldquo;IDE（集成开发环境）&rdquo;当做一个概念，不再加以区分。</blockquote>
<p><a href="http://c.biancheng.net/c/" target="_blank">C语言</a>的集成开发环境有很多种，尤其是 Windows 下，多如牛毛，初学者往往不知道该如何选择，本节我们就针对 Windows、<a href="http://c.biancheng.net/linux_tutorial/" target="_blank">Linux</a>&nbsp;和 Mac OS 三大平台进行讲解。</p>
<h2>Windows 下如何选择 IDE？</h2>
<p>Windows 下的 IDE 多如牛毛，常见的有以下几种。</p>
<h4>1) Visual Studio</h4>
<p>Windows 下首先推荐大家使用微软开发的 Visual Studio（简称 VS），它是 Windows 下的标准 IDE，实际开发中大家也都在使用。<br /><br />为了适应最新的 Windows 操作系统，微软每隔一段时间（一般是一两年）就会对 VS 进行升级。VS 的不同版本以发布年份命名，例如 VS2010 是微软于 2010 年发布的，VS2017 是微软于 2017 年发布的。<br /><br />不过 VS 有点庞大，安装包有 2~3G，下载不方便，而且会安装很多暂时用不到的工具，安装时间在半个小时左右。<br /><br /><strong>对于初学者，我推荐使用 VS2015。最好不用使用 VS2017，有点坑初学者。</strong></p>
<h4>2) Dev&nbsp;<a href="http://c.biancheng.net/cplus/" target="_blank">C++</a></h4>
<p>
如果你讨厌 VS 的复杂性，那么可以使用 Dev C++。Dev C++ 是一款免费开源的 C/C++ IDE，内嵌&nbsp;<a href="http://c.biancheng.net/gcc/" target="_blank">GCC 编译器</a>（<a href="http://c.biancheng.net/view/10030" target="_blank">Linux GCC</a>&nbsp;编译器的 Windows 移植版），是 NOI、NOIP&nbsp;等比赛的指定工具。Dev C++ 的优点是体积小（只有几十兆）、安装卸载方便、学习成本低，缺点是调试功能弱。</p>
<blockquote>NOI 是<code>National Olympiad in Informatics</code>的缩写，译为&ldquo;全国青少年信息学奥林匹克竞赛&rdquo;；NOIP 是<code>National Olympiad in informatics in Pro<a href="http://c.biancheng.net/vi/" target="_blank">vi</a>nces</code>的缩写，译为&ldquo;全国青少年信息学奥林匹克联赛&rdquo;。NOI、NOIP 都是奥林匹克竞赛的一种，参加者多为高中生，获奖者将被保送到名牌大学或者得到高考加分资格。</blockquote>
<h4>3) Visual C++ 6.0</h4>
<p>
Visual C++ 6.0（简称VC 6.0）是微软开发的一款经典的 IDE，很多高校都以 VC 6.0 为教学工具来讲解C和C++。但VC 6.0是1998年的产品，很古老了，在 Win7、Win8、Win10 下会有各种各样的兼容性问题，甚至根本不能运行，所以不推荐使用。<br /><br />VC 6.0 早就该扔进垃圾桶了，可是依然有很多大学把它作为教学工具，并且选用的教材也以 VC 6.0 为基础来讲解C语言和 C++，可见教学体制的极端落后，课程体系的更新远远跟不上技术的进步。</p>
<h4>4)&nbsp;Code::Blocks</h4>
<p>
Code::Blocks 是一款开源、跨平台、免费的 C/C++ IDE，它和 Dev C++ 非常类似，小巧灵活，易于安装和卸载，不过它的界面要比 Dev C++ 复杂一些，不如 Dev C++ 来得清爽。</p>
<h4>5)&nbsp;Turbo C</h4>
<p>
Turbo C 是一款古老的、DOS 年代的C语言开发工具，程序员只能使用键盘来操作 Turbo C，不能使用鼠标，所以非常不方便。但是 Turbo C 集成了一套图形库，可以在控制台程序中画图，看起来非常炫酷，所以至今仍然有人在使用。</p>
<h4>6)&nbsp;C-Free</h4>
<p>
C-Free 是一款国产的 Windows 下的C/C++ IDE，最新版本是 5.0，整个软件才 14M，非常轻巧，安装也简单，界面也比 Dev C++ 漂亮。C-Free 的缺点也是调试功能弱。可惜的是，C-Free 已经多年不更新了，组件都老了，只能在 XP、Win7 下运行，在 Win8、Win10 下可能会存在兼容性问题。<br /><br />下面我们给出了各种 IDE（含不同版本）的下载地址、安装方法以及使用教程，并以红色字体附带了建议。</p>
<ul>
<li><strong>VS2015&nbsp;[力荐]</strong>
<ul>
<li><a href="http://c.biancheng.net/view/453.html">VS2015下载地址和安装教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/454.html">使用VS2015编写C语言程序</a></li>

</ul>

</li>
<li><strong>VS2017</strong>
<ul>
<li><a href="http://c.biancheng.net/view/456.html">VS2017下载地址和安装教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/457.html">使用VS2017编写C语言程序</a></li>

</ul>

</li>
<li><strong>VS2010&nbsp;[荐]</strong>
<ul>
<li><a href="http://c.biancheng.net/view/458.html">VS2010下载地址和安装教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/459.html">使用VS2010编写C语言程序</a></li>

</ul>

</li>
<li><strong>Dev C++&nbsp;[荐]</strong>
<ul>
<li><a href="http://c.biancheng.net/view/461.html">Dev C++下载地址和安装教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/462.html">使用Dev C++编写C语言程序</a></li>

</ul>

</li>
<li><strong>VC6.0&nbsp;[不建议]</strong>
<ul>
<li><a href="http://c.biancheng.net/view/463.html">VC6.0（VC++6.0）下载地址和安装教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/464.html">使用VC6.0（VC++6.0）编写C语言程序</a></li>

</ul>

</li>
<li><strong>Code::Blocks</strong>
<ul>
<li><a href="http://c.biancheng.net/view/465.html">Code::Blocks下载地址和安装教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/466.html">Code::Blocks汉化教程（附带汉化包）</a></li>
<li><a href="http://c.biancheng.net/view/467.html">使用Code::Blocks编写C语言程序</a></li>

</ul>

</li>
<li><strong>Turbo C&nbsp;[不建议]</strong>
<ul>
<li><a href="http://c.biancheng.net/view/468.html">Turbo C 2.0下载地址和安装教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/469.html">使用Turbo C 2.0编写C语言程序</a></li>

</ul>

</li>
<li><strong>C-Free&nbsp;[不建议]</strong>
<ul>
<li><a href="http://c.biancheng.net/view/470.html">C-Free 5.0下载地址和激活教程（图解）</a></li>
<li><a href="http://c.biancheng.net/view/472.html">使用C-Free编写C语言程序</a></li>

</ul>

</li>

</ul>
<h4>为什么不建议初学者使用最新的 VS2017？</h4>
<p>
VS2017 对初学者并不友好，或者说有点坑初学者，例如：</p>
<ul>
<li>新创建的C语言工程里面默认会附带多个源文件，初学者往往不知道如何使用它们，还得一个一个删除，非常麻烦。</li>
<li>按下 Ctrl+F5 组合键运行程序，程序不能自动暂停，每次都得在最后添加暂停代码，这是最致命的。</li>

</ul>
<p>
<br />VS2015 和 VS 2010 就没有上述问题，所以推荐使用；又考虑到 VS2010 可能不兼容最新的 Win10，所以<strong>推荐使用 VS2015</strong>。</p>
<h2>Linux 下如何选择 IDE？</h2>
<p>
Linux 下可以不使用 IDE，只使用&nbsp;<a href="http://c.biancheng.net/gcc/" target="_blank">GCC</a>&nbsp;编译器和一个文本编辑器（例如 Gedit）即可，这样对初学者理解C语言程序的生成过程非常有帮助，请参考：<a href="http://c.biancheng.net/view/475.html" target="_blank">Linux GCC简明教程（使用GCC编写C语言程序）</a><br /><br />当然，如果你希望使用 IDE，那么可以选择 CodeLite、Code::Blocks、Anjuta、Eclipse、NetBeans 等。</p>
<h2>Mac OS 下如何选择 IDE？</h2>
<p>
Mac OS 下推荐使用 Apple 官方开发的 Xcode，在 APP Store 即可下载，具体请参见：<a href="http://c.biancheng.net/view/476.html" target="_blank">Xcode简明教程（使用Xcode编写C语言程序）</a><br /><br />另外，Visual Studio 也推出了 Mac 版本，已经习惯了 Visual Studio 的用户可以高兴一把了。</p>]]></description></item><item><title>【C 语言】一元二次方程</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751587.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 04:52:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751587.html</guid><description><![CDATA[<pre>求一元二次方程：ax2+bx+c=0 的根。
输入三个实数a,b,c的值，且a不等于0。</pre>
<h1>数学基础:一元二次方程</h1>
<p>只含有一个未知数（一元），并且未知数项的最高次数是2（二次）的整式方程叫做一元二次方程。标准形式为：ax&sup2;+bx+c=0（a&ne;0）。</p>
<h1>求解公式：求根公式法</h1>
<p>用求根公式法解一元二次方程的一般步骤为：</p>
<p>①把方程化成一般形式</p>
<p><img title="C语言求一元二次方程的根，这题很简单嘛？看看这种想法很惊奇！" src="http://gadimg-10045137.image.myqcloud.com/20171208/5a2a40ed58e22.com/resource/attachment/22d7532fe462a158580585a193882c25" alt="" /></p>
<p>，确定a，b，c的值（注意符号）；</p>
<p>②求出判别式</p>
<p><img title="C语言求一元二次方程的根，这题很简单嘛？看看这种想法很惊奇！" src="http://gadimg-10045137.image.myqcloud.com/20171208/5a2a40edc02c1.com/resource/attachment/41bd27b14ba37d0f47d2a08fdf18567e" alt="" /></p>
<p>的值，判断根的情况；</p>
<p>③在</p>
<p><img title="C语言求一元二次方程的根，这题很简单嘛？看看这种想法很惊奇！" src="http://gadimg-10045137.image.myqcloud.com/20171208/5a2a40ee400c3.com/resource/attachment/f78415210ad3dd37f536bfa9d8153708" alt="" /></p>
<p>（注：此处△读&ldquo;德尔塔&rdquo;）的前提下，把a、b、c的值代入公式</p>
<p><img title="C语言求一元二次方程的根，这题很简单嘛？看看这种想法很惊奇！" src="http://gadimg-10045137.image.myqcloud.com/20171208/5a2a40eebe791.com/resource/attachment/e51b7c8efa54ef77b9c1caa7410764ce" alt="" /></p>
<p>进行计算，求出方程的根。</p>
<pre>实例</pre>
<div class="cnblogs_code">
<pre>#include &lt;stdio.h&gt;<span style="color: #000000;">
#include </span>&lt;math.h&gt;
 
<span style="color: #0000ff;">int</span><span style="color: #000000;"> main()
{
        </span><span style="color: #0000ff;">float</span><span style="color: #000000;"> a,b,c,x1,x2,d;
        printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">输入方程的三个系数:</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        scanf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%f %f %f</span><span style="color: #800000;">"</span>,&amp;a,&amp;b,&amp;<span style="color: #000000;">c);
        </span><span style="color: #0000ff;">if</span>(a!=<span style="color: #800080;">0</span><span style="color: #000000;">)
        {
                d</span>=sqrt(b*b-<span style="color: #800080;">4</span>*a*<span style="color: #000000;">c);
                x1</span>=(-b+d)/(<span style="color: #800080;">2</span>*<span style="color: #000000;">a);
                x2</span>=(-b-d)/(<span style="color: #800080;">2</span>*<span style="color: #000000;">a);
                </span><span style="color: #0000ff;">if</span>(x1&lt;<span style="color: #000000;">x2) 
                    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%0.2f %0.2f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,x2,x1); 
                </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
                    printf(</span><span style="color: #800000;">"</span><span style="color: #800000;">%0.2f %0.2f\n</span><span style="color: #800000;">"</span><span style="color: #000000;">,x1,x2);
        }
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<pre>运行结果：
输入方程的三个系数:1 2 1
-1.00 -1.00</pre>]]></description></item><item><title>【C语言】已知三角形三边长，求三角形面积</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751570.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 28 Oct 2019 04:43:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/28/11751570.html</guid><description><![CDATA[<p>一、 数学基础：</p>
<p>已知三角形的三边，计算三角形面积，需要用到海伦公式：</p>
<p><a class="ikqb_img_alink" title="点击查看大图" href="https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/5ab5c9ea15ce36d3386fd5ff33f33a87e850b192.jpg" rel="nofollow noopener" target="_blank"><img class="ikqb_img" src="https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=c0a383019025bc312b08099e6eefa189/5ab5c9ea15ce36d3386fd5ff33f33a87e850b192.jpg" alt="" /></a></p>
<p>即p=(a+b+c)/2</p>
<p>二、 算法：</p>
<p>输入三个边长，套用海伦公式计算面积，并输出。&nbsp;</p>
<p>可以先判断是否可以构成三角形，即任意两边之和大于第三边，可以构成三角形情况下再计算，可以增加严谨性。</p>
<p>三、 代码：</p>
<table class="syntaxhighlighter  cpp" style="height: 169px; width: 852px;" border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include&nbsp;&lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&nbsp;&lt;math.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code>&nbsp;<code class="cpp plain">main()</code></div>
<div class="line number4 index3 alt1"><code class="cpp plain">{</code></div>
<div class="line number4 index3 alt1">&nbsp;printf("请依次输入三个边长\n");</div>
<div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">double</code>&nbsp;<code class="cpp plain">a,b,c,p,s;</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">scanf</code><code class="cpp plain">(</code><code class="cpp string">"%lf%lf%lf"</code><code class="cpp plain">,&amp;a,&amp;b,&amp;c);</code></div>
<div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(a+b&gt;c&nbsp;&amp;&amp;&nbsp;a+c&gt;b&nbsp;&amp;&amp;&nbsp;b+c&gt;a)&nbsp;</code><code class="cpp comments">//判断是否可以构成三角形。</code></div>
<div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div>
<div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">p=(a+b+c)/2;</code><code class="cpp comments">//计算半周长</code></div>
<div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">s=</code><code class="cpp functions bold">sqrt</code><code class="cpp plain">(p*(p-a)*(p-b)*(p-c));</code><code class="cpp comments">//套用海伦公式，计算面积</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"面积为%lf\n"</code><code class="cpp plain">,&nbsp;s);</code><code class="cpp comments">//输出结果</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code>&nbsp;<code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"无法构成三角形\n"</code><code class="cpp plain">);</code><code class="cpp comments">//输入不合法，提示。</code></div>
<div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code>&nbsp;<code class="cpp plain">0;</code></div>
<div class="line number15 index14 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>]]></description></item><item><title>关于Dev-C++的安装以及基本使用方法</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/26/11741600.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 25 Oct 2019 16:33:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/26/11741600.html</guid><description><![CDATA[<p>我觉得<strong>Dev</strong>-<strong>C++</strong>是一款小巧方便的编译器，就给那些刚刚学习编程的同学讲一下这个软件的<strong>安装</strong>和基本的编译以及一些使用的技巧。</p>
<p>（完全是傻瓜式的截图和教程，内容过于冗余，主要是考虑到这些新生没有接触过编程软件）</p>
<p>一，关于<strong>Dev</strong>-<strong>C++</strong>的<strong>安装</strong></p>
<p>我这里使用的版本是<a href="https://sourceforge.net/projects/orwelldevcpp/" rel="nofollow" target="_blank"><strong>Dev</strong>-Cpp 5.11 TDM-GCC 4.9.2 Setup</a></p>
<p>（国外下载网站，访问速度可能有点慢，请耐心等待哦）</p>
<p>点击<strong>Dev</strong>-Cpp 5.11 TDM-GCC 4.9.2 Setup<strong>安装</strong>后，会出现</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="254" data-height="71"><img src="//upload-images.jianshu.io/upload_images/7700692-5666488ed2e6d325?imageMogr2/auto-orient/strip|imageView2/2/w/254/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-5666488ed2e6d325" data-original-width="254" data-original-height="71" data-original-format="image/png" data-original-filesize="5090" data-image-index="0" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="294" data-height="157"><img src="//upload-images.jianshu.io/upload_images/7700692-eb44832ac66e081b?imageMogr2/auto-orient/strip|imageView2/2/w/294/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-eb44832ac66e081b" data-original-width="294" data-original-height="157" data-original-format="image/png" data-original-filesize="7224" data-image-index="1" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>直接选择OK就行，等一下再把语言改回来</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="503" data-height="390"><img src="//upload-images.jianshu.io/upload_images/7700692-33c4b06321721497?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-33c4b06321721497" data-original-width="503" data-original-height="390" data-original-format="image/png" data-original-filesize="27960" data-image-index="2" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="503" data-height="390"><img src="//upload-images.jianshu.io/upload_images/7700692-2c17aa1b1a23cb5a?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-2c17aa1b1a23cb5a" data-original-width="503" data-original-height="390" data-original-format="image/png" data-original-filesize="24276" data-image-index="3" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>自己选择一个自己找的到软件<strong>安装</strong>位置即可</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="503" data-height="390"><img src="//upload-images.jianshu.io/upload_images/7700692-30516716a03d53d6?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-30516716a03d53d6" data-original-width="503" data-original-height="390" data-original-format="image/png" data-original-filesize="29124" data-image-index="4" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>直接默认就行</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="503" data-height="390"><img src="//upload-images.jianshu.io/upload_images/7700692-b823a38558611974?imageMogr2/auto-orient/strip|imageView2/2/w/503/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-b823a38558611974" data-original-width="503" data-original-height="390" data-original-format="image/png" data-original-filesize="20292" data-image-index="5" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p><strong>安装</strong>完毕，第一次运行<strong>Dev</strong>-<strong>C++</strong>会出现这个界面</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="341"><img src="//upload-images.jianshu.io/upload_images/7700692-1c8b11adc75f6cf5?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-1c8b11adc75f6cf5" data-original-width="554" data-original-height="341" data-original-format="image/png" data-original-filesize="75598" data-image-index="6" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>注意这里的语言选择简体中文(如果对自己的四级水平很有自信可以忽略)</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="341"><img src="//upload-images.jianshu.io/upload_images/7700692-68edfb5dedc26129?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-68edfb5dedc26129" data-original-width="554" data-original-height="341" data-original-format="image/png" data-original-filesize="77488" data-image-index="7" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>这个是编译代码界面的一些外观选择，第一次用可以先完全默认，后面再教如何修改自己喜欢的打代码界面OVO</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="341"><img src="//upload-images.jianshu.io/upload_images/7700692-8d412dea5a6e3a37?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-8d412dea5a6e3a37" data-original-width="554" data-original-height="341" data-original-format="image/png" data-original-filesize="88571" data-image-index="8" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>直接OK,打开软件，<strong>安装</strong>到此完毕</p>
<p>二，关于Dec-<strong>C++</strong>的编译代码</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="346"><img src="//upload-images.jianshu.io/upload_images/7700692-a782eda91a3647f3?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-a782eda91a3647f3" data-original-width="554" data-original-height="346" data-original-format="image/png" data-original-filesize="41962" data-image-index="9" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>注意左上角新建一个源文件，在建好的界面下写下程序猿的hello world哈哈哈</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="324"><img src="//upload-images.jianshu.io/upload_images/7700692-66667ddbaf12ddb2?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-66667ddbaf12ddb2" data-original-width="554" data-original-height="324" data-original-format="image/png" data-original-filesize="69334" data-image-index="10" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>按照上面这一幅图的步骤，先重新编译文件，由于这是一个空的源文件，它会提示你先保存成一个.cpp源文件,所以自己找一个自己知道的位置，写好这个文件的命名即可，记住，文件名后面的后缀是.cpp,这样软件才能编译这个文件</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="573"><img src="//upload-images.jianshu.io/upload_images/7700692-206c9780bb2a7d85?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-206c9780bb2a7d85" data-original-width="554" data-original-height="573" data-original-format="image/png" data-original-filesize="89795" data-image-index="11" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>编译完成之后就可以编译运行了(有点拗口，其实直接运行就可以了)</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="365"><img src="//upload-images.jianshu.io/upload_images/7700692-7ab2f4722bd43be2?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-7ab2f4722bd43be2" data-original-width="554" data-original-height="365" data-original-format="image/png" data-original-filesize="61271" data-image-index="12" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>第一个程序就这样完成了，最最基本的使用方法。</p>
<p>但是，有一个非常多人批评这个软件的理由是，它不能提示具体的错误和单步调试(其实是可以的)</p>
<p>三，小技巧</p>
<p>1.单步调试</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="383"><img src="//upload-images.jianshu.io/upload_images/7700692-884174f429e721e6?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-884174f429e721e6" data-original-width="554" data-original-height="383" data-original-format="image/png" data-original-filesize="86561" data-image-index="13" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="346"><img src="//upload-images.jianshu.io/upload_images/7700692-fec50e512b65088b?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-fec50e512b65088b" data-original-width="554" data-original-height="346" data-original-format="image/png" data-original-filesize="72564" data-image-index="14" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>点击这个小勾勾调试的时候，发现不能调试，如果选择Yes的话这个软件就会被迫退出，所以有很多人在骂它的这个设置.....</p>
<p>其实单步调试很简单的，只要设置好编译选项就可以了</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="346"><img src="//upload-images.jianshu.io/upload_images/7700692-35a5a0b03ad33d5d?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-35a5a0b03ad33d5d" data-original-width="554" data-original-height="346" data-original-format="image/png" data-original-filesize="70788" data-image-index="15" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>傻瓜式截图，照着点击编译选项就行</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="490" data-height="541"><img src="//upload-images.jianshu.io/upload_images/7700692-0716b7ad622432c6?imageMogr2/auto-orient/strip|imageView2/2/w/490/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-0716b7ad622432c6" data-original-width="490" data-original-height="541" data-original-format="image/png" data-original-filesize="34794" data-image-index="16" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>把产生调试信息改成Yes就可以了</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="399"><img src="//upload-images.jianshu.io/upload_images/7700692-18205f3dc88f5fa7?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-18205f3dc88f5fa7" data-original-width="554" data-original-height="399" data-original-format="image/png" data-original-filesize="76721" data-image-index="17" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>注意右上角改成debug的编译器，然后就可以单步调试了</p>
<p>2.产生报错信息</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="346"><img src="//upload-images.jianshu.io/upload_images/7700692-4f30526bfe5280bc?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-4f30526bfe5280bc" data-original-width="554" data-original-height="346" data-original-format="image/png" data-original-filesize="70788" data-image-index="18" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="490" data-height="541"><img src="//upload-images.jianshu.io/upload_images/7700692-4dc8861874c6c5fa?imageMogr2/auto-orient/strip|imageView2/2/w/490/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-4dc8861874c6c5fa" data-original-width="490" data-original-height="541" data-original-format="image/png" data-original-filesize="41622" data-image-index="19" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>按照图片上的，把显示较多警告信息改为Yes就可以了</p>
<p>3.格式化代码(不是删除代码啊(ˉ▽ˉ)�0�2 ）</p>
<p>格式化的代码是K&amp;R风格的代码，也是我比较推荐给新手一个好的缩进风格代码(如果你更喜欢另外一种风格那都可以ˇ&omega;ˇ)</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="285"><img src="//upload-images.jianshu.io/upload_images/7700692-ff08862ee54cfe97?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-ff08862ee54cfe97" data-original-width="554" data-original-height="285" data-original-format="image/png" data-original-filesize="73645" data-image-index="20" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>乱糟糟的缩进方式，然后点击格式化当前文件，就可以看到</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="263"><img src="//upload-images.jianshu.io/upload_images/7700692-a4d59777d1459e72?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-a4d59777d1459e72" data-original-width="554" data-original-height="263" data-original-format="image/png" data-original-filesize="77944" data-image-index="21" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>代码变得整齐了(ˉ▽ˉ)</p>
<p>4.改变写代码的字体，外观，高亮等等.....外观</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="311"><img src="//upload-images.jianshu.io/upload_images/7700692-b1940ac1b92f78d5?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-b1940ac1b92f78d5" data-original-width="554" data-original-height="311" data-original-format="image/png" data-original-filesize="69591" data-image-index="22" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="554" data-height="588"><img src="//upload-images.jianshu.io/upload_images/7700692-d44a2205ad168765?imageMogr2/auto-orient/strip|imageView2/2/w/554/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-d44a2205ad168765" data-original-width="554" data-original-height="588" data-original-format="image/png" data-original-filesize="160712" data-image-index="23" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>看自己的爱好来改就行，不会操作？自己改前景，背景，预设就知道怎么回事了ˇ▽ˇ</p>
<p>4.修改语言</p>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="849" data-height="550"><img src="//upload-images.jianshu.io/upload_images/7700692-b85ffb20245ac5cc.png?imageMogr2/auto-orient/strip|imageView2/2/w/849/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-b85ffb20245ac5cc.png" data-original-width="849" data-original-height="550" data-original-format="image/png" data-original-filesize="145493" data-image-index="24" /></div>
</div>
<div class="image-caption">&nbsp;</div>
</div>
<p>&nbsp;</p>
<div class="image-package">
<div class="image-container">
<div class="image-container-fill">&nbsp;</div>
<div class="image-view" data-width="607" data-height="611"><img src="//upload-images.jianshu.io/upload_images/7700692-f7419fd34fef0976.png?imageMogr2/auto-orient/strip|imageView2/2/w/607/format/webp" alt="" data-original-src="//upload-images.jianshu.io/upload_images/7700692-f7419fd34fef0976.png" data-original-width="607" data-original-height="611" data-original-format="image/png" data-original-filesize="138568" data-image-index="25" /></div>
</div>
<div class="image-caption">&nbsp;原文链接：<a href="https://blog.csdn.net/qq_40160605/article/details/82940228">https://blog.csdn.net/qq_40160605/article/details/82940228</a></div>
</div>
<p>&nbsp;</p>]]></description></item><item><title>VS“无法查找或打开PDB文件”是怎么回事？如何解决</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/25/11741499.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 25 Oct 2019 15:56:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/25/11741499.html</guid><description><![CDATA[<p>有时候，我们使用 VS（Visual Studio）编译程序时会出现&ldquo;无法查找或打开PDB文件&rdquo;的提示，并且此时程序会生成失败，无法运行，如下图所示：</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191025235419368-2035637671.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;大家不要惊慌，出现这种提示并不是代码写错了，而是编译器设置的问题，改一下设置就 OK 了。</p>
<h2>先说一下PDB文件是什么</h2>
<p>当程序在 VS 上编译时，程序所依赖的所有动态链接库（dll 文件）也会被编译，编译过程中每个 dll 都会产生一个pdb文件，又称为&ldquo;符号文件&rdquo;，是一个存储数据的信息文件，其包含 dll 库在编译过程的某些调试信息，例如程序中所用到的全局变量、局部变量、函数名以及他们的入口地址等。<br /><br />pdb 文件主要用于调试程序，多用于当VS中有多个项目，且项目之间互有依赖关系时，使用pdb文件调试程序，往往会事半功倍，初学者一般不会用到。<br /><br />当使用VS 调试程序时，会默认加载你的程序以及程序依赖的dll库产生的所有pdb文件，但是结果往往是VS自己找不到依赖库的pdb文件，于是就提示给你&ldquo;无法查找或打开pdb文件&rdquo;。</p>
<h2>如何修复这个错误</h2>
<p>
我们可以通过对 VS 做适当的设置，使之能够查找到相应的 PDB 文件，具体步骤如下（这里我们以 VS2017 为例进行说明，其它版本的 VS 操作步骤也一样）。<br /><br />1) 选择菜单栏中的&ldquo;调试&nbsp; --&gt; 选项&rdquo;，如下图所示：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/180912/1H531B44-1.png" alt="" /></div>
<p>
<br />2) 弹出&ldquo;选项&rdquo;对话框后，选择&ldquo;调试 --&gt; 常规&rdquo;，在右侧选项栏中勾选&ldquo;启用源服务器支持&rdquo;（包含的 3 个子选项不用勾选），此时会弹出一个安全警报框，选择&ldquo;是&rdquo;即可，如下图所示：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/180912/1H531DK-2.png" alt="" /></div>
<p>
<br />3) 还是在&ldquo;选项&rdquo;对话框中，选择&ldquo;调试 --&gt; 符号&rdquo;，在右侧选项栏中勾选&ldquo;Microsoft符号服务器&rdquo;，此时会弹出一个提示对话框，点击&ldquo;确定&rdquo;即可。同时，对于缓存符号的目录，选择图示中的目录即可：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/180912/1H531Bb-3.png" alt="" /></div>
<p>
<br />4) 确定之后，重新运行你的程序，首次运行时，由于编译器会加载所有动态链接库的pdb文件，可能会等到几秒钟。程序运行后，之前输出窗口中的&ldquo;无法查找或打开pdb文件&rdquo;的提示不见了，如下图所示：</p>
<div><img src="http://c.biancheng.net/uploads/allimg/180912/1H531H02-4.png" alt="" /></div>
<p>
<br />如上图所示，由于pdb文件，又名&ldquo;符号文件&rdquo;，所以&ldquo;已加载符号&rdquo;，也就是成功加载了动态链接库对应的pdb文件。</p>]]></description></item><item><title>什么是C</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/23/11726640.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 23 Oct 2019 07:41:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/23/11726640.html</guid><description><![CDATA[<p><img src="https://www.runoob.com/wp-content/uploads/2014/09/c-mini-logo.png" alt="" width="178" height="117" /></p>
<p>C 语言是一种通用的、面向过程式的计算机程序设计语言。1972 年，为了移植与开发 UNIX 操作系统，丹尼斯&middot;里奇在贝尔电话实验室设计开发了 C 语言。</p>
<p>C 语言是一种广泛使用的计算机语言，它与 Java 编程语言一样普及，二者在现代软件程序员之间都得到广泛使用。</p>
<p>当前最新的C语言标准为 C11 ，在它之前的C语言标准为 C99。</p>]]></description></item><item><title>原码, 反码, 补码 详解</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/23/11726272.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 23 Oct 2019 06:51:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/23/11726272.html</guid><description><![CDATA[<h1 class="postTitle">本篇文章讲解了计算机的原码, 反码和补码. 并且进行了深入探求了为何要使用反码和补码, 以及更进一步的论证了为何可以用反码, 补码的加法计算原码的减法. 论证部分如有不对的地方请各位牛人帮忙指正! 希望本文对大家学习计算机基础有所帮助!</h1>
<div class="postBody">
<div id="cnblogs_post_body" class="blogpost-body ">
<p>&nbsp;</p>
<h2>一. 机器数和真值</h2>
<p>在学习原码, 反码和补码之前, 需要先了解机器数和真值的概念.</p>
<h3>1、机器数</h3>
<p>一个数在计算机中的二进制表示形式,&nbsp; 叫做这个数的机器数。机器数是带符号的，在计算机用一个数的最高位存放符号, 正数为0, 负数为1.</p>
<p>比如，十进制中的数 +3 ，计算机字长为8位，转换成二进制就是00000011。如果是 -3 ，就是 10000011 。</p>
<p>那么，这里的 00000011 和 10000011 就是机器数。</p>
<h3>2、真值</h3>
<blockquote>
<p>因为第一位是符号位，所以机器数的形式值就不等于真正的数值。例如上面的有符号数 10000011，其最高位1代表负，其真正数值是 -3 而不是形式值131（10000011转换成十进制等于131）。所以，为区别起见，将带符号位的机器数对应的真正数值称为机器数的真值。</p>
</blockquote>
<p>例：0000 0001的真值 = +000 0001 = +1，1000 0001的真值 = &ndash;000 0001 = &ndash;1</p>
<p>&nbsp;</p>
<h2>二. 原码, 反码, 补码的基础概念和计算方法.</h2>
<p>在探求为何机器要使用补码之前, 让我们先了解原码, 反码和补码的概念.对于一个数, 计算机要使用一定的编码方式进行存储. 原码, 反码, 补码是机器存储一个具体数字的编码方式.</p>
<h3>1. 原码</h3>
<p>原码就是符号位加上真值的绝对值, 即用第一位表示符号, 其余位表示值. 比如如果是8位二进制:</p>
<blockquote>
<p>[+1]<sub>原</sub>&nbsp;= 0000 0001</p>
<p>[-1]<sub>原</sub>&nbsp;= 1000 0001</p>
</blockquote>
<p>第一位是符号位. 因为第一位是符号位, 所以8位二进制数的取值范围就是:</p>
<blockquote>
<p>[1111 1111 , 0111 1111]</p>
</blockquote>
<p>即</p>
<blockquote>
<p>[-127 , 127]</p>
</blockquote>
<p>原码是人脑最容易理解和计算的表示方式.</p>
<h3>2. 反码</h3>
<p>反码的表示方法是:</p>
<p>正数的反码是其本身</p>
<p>负数的反码是在其原码的基础上, 符号位不变，其余各个位取反.</p>
<blockquote>
<p>[+1] = [00000001]<sub>原</sub>&nbsp;= [00000001]<sub>反</sub></p>
<p>[-1] = [10000001]<sub>原</sub>&nbsp;= [11111110]<sub>反</sub></p>
</blockquote>
<p>可见如果一个反码表示的是负数, 人脑无法直观的看出来它的数值. 通常要将其转换成原码再计算.</p>
<h3>3. 补码</h3>
<p>补码的表示方法是:</p>
<p>正数的补码就是其本身</p>
<p>负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1. (即在反码的基础上+1)</p>
<blockquote>
<p>[+1] = [00000001]<sub>原</sub>&nbsp;= [00000001]<sub>反</sub>&nbsp;= [00000001]<sub>补</sub></p>
<p>[-1] = [10000001]<sub>原</sub>&nbsp;= [11111110]<sub>反</sub>&nbsp;= [11111111]<sub>补</sub></p>
</blockquote>
<p>对于负数, 补码表示方式也是人脑无法直观看出其数值的. 通常也需要转换成原码在计算其数值.</p>
<p>&nbsp;</p>
<h2>三. 为何要使用原码, 反码和补码</h2>
<p>在开始深入学习前, 我的学习建议是先"死记硬背"上面的原码, 反码和补码的表示方式以及计算方法.</p>
<p>现在我们知道了计算机可以有三种编码方式表示一个数. 对于正数因为三种编码方式的结果都相同:</p>
<blockquote>
<p>[+1] = [00000001]<sub>原</sub>&nbsp;= [00000001]<sub>反</sub>&nbsp;= [00000001]<sub>补</sub></p>
</blockquote>
<p>所以不需要过多解释. 但是对于负数:</p>
<blockquote>
<p>[-1] = [10000001]<sub>原</sub>&nbsp;= [11111110]<sub>反</sub>&nbsp;= [11111111]<sub>补</sub></p>
</blockquote>
<p>可见原码, 反码和补码是完全不同的. 既然原码才是被人脑直接识别并用于计算表示方式, 为何还会有反码和补码呢?</p>
<p>首先, 因为人脑可以知道第一位是符号位, 在计算的时候我们会根据符号位, 选择对真值区域的加减. (真值的概念在本文最开头). 但是对于计算机, 加减乘数已经是最基础的运算, 要设计的尽量简单. 计算机辨别"符号位"显然会让计算机的基础电路设计变得十分复杂! 于是人们想出了将符号位也参与运算的方法. 我们知道, 根据运算法则减去一个正数等于加上一个负数, 即: 1-1 = 1 + (-1) = 0 , 所以机器可以只有加法而没有减法, 这样计算机运算的设计就更简单了.</p>
<p>于是人们开始探索 将符号位参与运算, 并且只保留加法的方法. 首先来看原码:</p>
<p>计算十进制的表达式: 1-1=0</p>
<blockquote>
<p>1 - 1 = 1 + (-1) = [00000001]<sub>原</sub>&nbsp;+ [10000001]<sub>原</sub>&nbsp;= [10000010]<sub>原</sub>&nbsp;= -2</p>
</blockquote>
<p>如果用原码表示, 让符号位也参与计算, 显然对于减法来说, 结果是不正确的.这也就是为何计算机内部不使用原码表示一个数.</p>
<p>为了解决原码做减法的问题, 出现了反码:</p>
<p>计算十进制的表达式: 1-1=0</p>
<blockquote>
<p>1 - 1 = 1 + (-1) = [0000 0001]<sub>原</sub>&nbsp;+ [1000 0001]<sub>原</sub>= [0000 0001]<sub>反</sub>&nbsp;+ [1111 1110]<sub>反</sub>&nbsp;= [1111 1111]<sub>反</sub>&nbsp;= [1000 0000]<sub>原</sub>&nbsp;= -0</p>
</blockquote>
<p>发现用反码计算减法, 结果的真值部分是正确的. 而唯一的问题其实就出现在"0"这个特殊的数值上. 虽然人们理解上+0和-0是一样的, 但是0带符号是没有任何意义的. 而且会有[0000 0000]<sub>原</sub>和[1000 0000]<sub>原</sub>两个编码表示0.</p>
<p>于是补码的出现, 解决了0的符号以及两个编码的问题:</p>
<blockquote>
<p>1-1 = 1 + (-1) = [0000 0001]<sub>原</sub>&nbsp;+ [1000 0001]<sub>原</sub>&nbsp;= [0000 0001]<sub>补</sub>&nbsp;+ [1111 1111]<sub>补</sub>&nbsp;= [0000 0000]<sub>补</sub>=[0000 0000]<sub>原</sub></p>
</blockquote>
<p>这样0用[0000 0000]表示, 而以前出现问题的-0则不存在了.而且可以用[1000 0000]表示-128:</p>
<blockquote>
<p>(-1) + (-127) = [1000 0001]<sub>原</sub>&nbsp;+ [1111 1111]<sub>原</sub>&nbsp;= [1111 1111]<sub>补</sub>&nbsp;+ [1000 0001]<sub>补</sub>&nbsp;= [1000 0000]<sub>补</sub></p>
</blockquote>
<p>-1-127的结果应该是-128, 在用补码运算的结果中, [1000 0000]<sub>补</sub>&nbsp;就是-128. 但是注意因为实际上是使用以前的-0的补码来表示-128, 所以-128并没有原码和反码表示.(对-128的补码表示[1000 0000]补算出来的原码是[0000 0000]<sub>原</sub>, 这是不正确的)</p>
<p>使用补码, 不仅仅修复了0的符号以及存在两个编码的问题, 而且还能够多表示一个最低数. 这就是为什么8位二进制, 使用原码或反码表示的范围为[-127, +127], 而使用补码表示的范围为[-128, 127].</p>
<p>因为机器使用补码, 所以对于编程中常用到的32位int类型, 可以表示范围是: [-2<sup>31</sup>, 2<sup>31</sup>-1] 因为第一位表示的是符号位.而使用补码表示时又可以多保存一个最小值.</p>
<p>&nbsp;</p>
<h2>四 原码, 反码, 补码 再深入</h2>
<p>计算机巧妙地把符号位参与运算, 并且将减法变成了加法, 背后蕴含了怎样的数学原理呢?</p>
<p>将钟表想象成是一个1位的12进制数. 如果当前时间是6点, 我希望将时间设置成4点, 需要怎么做呢?我们可以:</p>
<blockquote>
<p>1. 往回拨2个小时: 6 - 2 = 4</p>
<p>2. 往前拨10个小时: (6 + 10) mod 12 = 4</p>
<p>3. 往前拨10+12=22个小时: (6+22) mod 12 =4</p>
</blockquote>
<p>2,3方法中的mod是指取模操作, 16 mod 12 =4 即用16除以12后的余数是4.</p>
<p>所以钟表往回拨(减法)的结果可以用往前拨(加法)替代!</p>
<p>现在的焦点就落在了如何用一个正数, 来替代一个负数. 上面的例子我们能感觉出来一些端倪, 发现一些规律. 但是数学是严谨的. 不能靠感觉.</p>
<p>首先介绍一个数学中相关的概念: 同余</p>
<p>&nbsp;</p>
<h3>同余的概念</h3>
<p>两个整数a，b，若它们除以整数m所得的余数相等，则称a，b对于模m同余</p>
<p>记作 a &equiv; b (mod m)</p>
<p>读作 a 与 b 关于模 m 同余。</p>
<p>举例说明:</p>
<blockquote>
<p>4 mod 12 = 4</p>
<p>16 mod 12 = 4</p>
<p>28 mod 12 = 4</p>
</blockquote>
<p>所以4, 16, 28关于模 12 同余.</p>
<p>&nbsp;</p>
<h3>负数取模</h3>
<p>正数进行mod运算是很简单的. 但是负数呢?</p>
<p>下面是关于mod运算的数学定义:</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/zhangziqiu/201103/201103302155507894.jpg"><img title="clip_image001" src="https://images.cnblogs.com/cnblogs_com/zhangziqiu/201103/201103302155504514.jpg" alt="clip_image001" width="244" height="34" border="0" /></a></p>
<p>上面是截图, "取下界"符号找不到如何输入(word中粘贴过来后乱码). 下面是使用"L"和"J"替换上图的"取下界"符号:</p>
<blockquote>
<p>x mod y = x - y L x / y J</p>
</blockquote>
<p>上面公式的意思是:</p>
<p>x mod y等于 x 减去 y 乘上 x与y的商的下界.</p>
<p>以 -3 mod 2 举例:</p>
<blockquote>
<p>-3 mod 2</p>
<p>= -3 - 2xL -3/2 J</p>
<p>= -3 - 2xL-1.5J</p>
<p>= -3 - 2x(-2)</p>
<p>= -3 + 4 = 1</p>
</blockquote>
<p>所以:</p>
<blockquote>
<p>(-2) mod 12 = 12-2=10</p>
<p>(-4) mod 12 = 12-4 = 8</p>
<p>(-5) mod 12 = 12 - 5 = 7</p>
</blockquote>
<p>&nbsp;</p>
<h3>开始证明</h3>
<p>再回到时钟的问题上:</p>
<blockquote>
<p>回拨2小时 = 前拨10小时</p>
<p>回拨4小时 = 前拨8小时</p>
<p>回拨5小时= 前拨7小时</p>
</blockquote>
<p>注意, 这里发现的规律!</p>
<p>结合上面学到的同余的概念.实际上:</p>
<blockquote>
<p>(-2) mod 12 = 10</p>
<p>10 mod 12 = 10</p>
</blockquote>
<p>-2与10是同余的.</p>
<blockquote>
<p>(-4) mod 12 = 8</p>
<p>8 mod 12 = 8</p>
</blockquote>
<p>-4与8是同余的.</p>
<p>距离成功越来越近了. 要实现用正数替代负数, 只需要运用同余数的两个定理:</p>
<p>反身性:</p>
<blockquote>
<p>a &equiv; a (mod m)</p>
</blockquote>
<p>这个定理是很显而易见的.</p>
<p>线性运算定理:</p>
<blockquote>
<p>如果a &equiv; b (mod m)，c &equiv; d (mod m) 那么:</p>
<p>(1)a &plusmn; c &equiv; b &plusmn; d (mod m)</p>
<p>(2)a * c &equiv; b * d (mod m)</p>
</blockquote>
<p>如果想看这个定理的证明, 请看:<a href="http://baike.baidu.com/view/79282.htm">http://baike.baidu.com/view/79282.htm</a></p>
<p>所以:</p>
<blockquote>
<p>7 &equiv; 7 (mod 12)</p>
<p>(-2) &equiv; 10 (mod 12)</p>
<p>7 -2 &equiv; 7 + 10 (mod 12)</p>
</blockquote>
<p>现在我们为一个负数, 找到了它的正数同余数. 但是并不是7-2 = 7+10, 而是 7 -2 &equiv; 7 + 10 (mod 12) , 即计算结果的余数相等.</p>
<p>接下来回到二进制的问题上, 看一下: 2-1=1的问题.</p>
<blockquote>
<p>2-1=2+(-1) = [0000 0010]<sub>原</sub>&nbsp;+ [1000 0001]<sub>原</sub>= [0000 0010]<sub>反</sub>&nbsp;+ [1111 1110]<sub>反</sub></p>
</blockquote>
<p>先到这一步, -1的反码表示是1111 1110. 如果这里将[1111 1110]认为是原码, 则[1111 1110]原 = -126, 这里将符号位除去, 即认为是126.</p>
<p>发现有如下规律:</p>
<blockquote>
<p>(-1) mod 127 = 126</p>
<p>126 mod 127 = 126</p>
</blockquote>
<p>即:</p>
<blockquote>
<p>(-1) &equiv; 126 (mod 127)</p>
<p>2-1 &equiv; 2+126 (mod 127)</p>
</blockquote>
<p>2-1 与 2+126的余数结果是相同的! 而这个余数, 正式我们的期望的计算结果: 2-1=1</p>
<p>所以说一个数的反码, 实际上是这个数对于一个膜的同余数. 而这个膜并不是我们的二进制, 而是所能表示的最大值! 这就和钟表一样, 转了一圈后总能找到在可表示范围内的一个正确的数值!</p>
<p>而2+126很显然相当于钟表转过了一轮, 而因为符号位是参与计算的, 正好和溢出的最高位形成正确的运算结果.</p>
<p>既然反码可以将减法变成加法, 那么现在计算机使用的补码呢? 为什么在反码的基础上加1, 还能得到正确的结果?</p>
<blockquote>
<p>2-1=2+(-1) = [0000 0010]<sub>原</sub>&nbsp;+ [1000 0001]<sub>原</sub>&nbsp;= [0000 0010]<sub>补</sub>&nbsp;+ [1111 1111]<sub>补</sub></p>
</blockquote>
<p>如果把[1111 1111]当成原码, 去除符号位, 则:</p>
<blockquote>
<p>[0111 1111]<sub>原</sub>&nbsp;= 127</p>
</blockquote>
<p>其实, 在反码的基础上+1, 只是相当于增加了膜的值:</p>
<blockquote>
<p>(-1) mod 128 = 127</p>
<p>127 mod 128 = 127</p>
<p>2-1 &equiv; 2+127 (mod 128)</p>
</blockquote>
<p>此时, 表盘相当于每128个刻度转一轮. 所以用补码表示的运算结果最小值和最大值应该是[-128, 128].</p>
<p>但是由于0的特殊情况, 没有办法表示128, 所以补码的取值范围是[-128, 127]</p>
<p>本人一直不善于数学, 所以如果文中有不对的地方请大家多多包含, 多多指点!</p>
<p>作者：<a href="http://www.cnblogs.com/zhangziqiu/">张子秋</a><br />出处：<a href="http://www.cnblogs.com/zhangziqiu/">http://www.cnblogs.com/zhangziqiu/</a></p>
</div>
</div>]]></description></item><item><title>Google_CN为大家提供最新可以访问的谷歌镜像网址.</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/12/11664186.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Sat, 12 Oct 2019 14:07:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/12/11664186.html</guid><description><![CDATA[<p>https://huangenet.github.io/Google/</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191012220705654-1219039167.png" alt="" /></p>]]></description></item><item><title>【New】WoSo_我搜  正式上线</title><link>http://www.cnblogs.com/HGNET/archive/2019/10/11/11653509.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Fri, 11 Oct 2019 04:42:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/10/11/11653509.html</guid><description><![CDATA[<p>【New】WoSo_我搜 正式上线</p>
<p>一站式搜索平台</p>
<p>聚合多种领域搜索引擎，大大提高搜索效率，使搜索更简单</p>
<p>地址：https://huangenet.github.io/WoSo/</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201910/1783030-20191011124159779-1504456542.png" alt="" /></p>]]></description></item><item><title>手机chrome书签文件导出教程</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/04/11459608.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Sep 2019 07:53:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/04/11459608.html</guid><description><![CDATA[<p>重大发现！！！本人亲自测试<br />可以导出chrome书签文件<br />登录下面的链接<br />https://takeout.google.com/settings/takeout/custom/chrome?pli=1<img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190904155223922-222551156.png" alt="" /></p>]]></description></item><item><title>【New】简•导航 正式上线</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/04/11456995.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Wed, 04 Sep 2019 01:21:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/04/11456995.html</guid><description><![CDATA[<p>【New】简&bull;导航 正式上线</p>
<p>一个简单的导航</p>
<p>链接:http://huangenet.gitee.io/simple/&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>
<p>欢迎访问⊙&omega;⊙</p>
<p>代码托管在码云，访问速度更快哦！</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190904092043448-1209609762.png" alt="" /></p>]]></description></item><item><title>怀仁方言</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/03/11456259.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 03 Sep 2019 14:49:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/03/11456259.html</guid><description><![CDATA[<p>《怀仁方言》PDF文档</p>
<p>https://files.cnblogs.com/files/HGNET/8a151566031188.zip</p>
<p>下载链接&uarr;</p>]]></description></item><item><title>常见浏览器User-Agent大全</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/03/11455671.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 03 Sep 2019 13:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/03/11455671.html</guid><description><![CDATA[<p>一、基础知识篇：</p>
<p>HttpHeader之User-Agent</p>
<p>UserAgent中文名为用户代理，是Http协议中的一部分，属于头域的组成部分，UserAgent也简称UA。它是一个特殊字符串头，是一种向访问网站提供你所使用的浏览器类型及版本、操作系统及版本、浏览器内核、等信息的标识。通过这个标识，用户所访问的网站可以显示不同的排版从而为用户提供更好的体验或者进行信息统计；例如用手机访问谷歌和电脑访问是不一样的，这些是谷歌根据访问者的UA来判断的。UA可以进行伪装。</p>
<p>浏览器的UA字串的标准格式：浏览器标识(操作系统标识;加密等级标识;浏览器语言)渲染引擎标识版本信息。但各个浏览器有所不同。</p>
<p>字串说明：</p>
<p>1、浏览器标识</p>
<p>出于兼容及推广等目的，很多浏览器的标识相同，因此浏览器标识并不能说明浏览器的真实版本，真实版本信息在UA字串尾部可以找到。</p>
<p>&nbsp;</p>
<p>2、操作系统标识</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>FreeBSD   X11;FreeBSD(version no.)i386</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; X11;FreeBSD(version no.)AMD64</p>
<p>Linux        X11;Linux ppc</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;X11;Linux ppc64</p>
<p>X11;Linux i686</p>
<p>X11;Linux x86_64</p>
<p>Mac      Macintosh;PPC Mac OS X</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Macintosh;Intel Mac OS X</p>
<p>Solaris  X11;SunOS i86pc</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; X11;SunOs sun4u</p>
<p>Windows  Windows NT 6.1   对应windows7</p>
<p>&nbsp; Windows NT 6.0   对应windows Vista</p>
<p>&nbsp; Windows NT 5.2  对应windows 2003</p>
<p>&nbsp; Windows NT 5.1   对应windows xp</p>
<p>&nbsp; Windows NT 5.0   对应windows 2000</p>
<p>Windows ME</p>
<p>Windows 98</p>
<p>&nbsp;</p>
<p>3、加密等级标识</p>
<p>N:表示无安全加密</p>
<p>I:表示弱安全加密</p>
<p>U:表示强安全加密</p>
<p>&nbsp;</p>
<p>4、浏览器语言</p>
<p>在首选项&gt;常规&gt;语言中指定的语言</p>
<p>&nbsp;</p>
<p>5、渲染引擎</p>
<p>显示浏览器使用的主流渲染引擎有：Gecko、WebKit、KHTML、Presto、Trident、Tasman等，格式为：渲染引擎/版本信息</p>
<p>&nbsp;</p>
<p>6、版本信息</p>
<p>显示浏览器的真实版本信息，格式为：浏览器/版本信息</p>
<p>&nbsp;</p>
<p>浏览器User-Agent的详细信息</p>
<p>&nbsp;</p>
<p>PC端：</p>
<p>safari5.1&ndash;MAC</p>
<p>User-Agent:Mozilla/5.0(Macintosh;U;IntelMacOSX10_6_8;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50</p>
<p>&nbsp;</p>
<p>safari5.1&ndash;Windows</p>
<p>User-Agent:Mozilla/5.0(Windows;U;WindowsNT6.1;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50</p>
<p>&nbsp;</p>
<p>IE9.0</p>
<p>User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsNT6.1;Trident/5.0;</p>
<p>&nbsp;</p>
<p>IE8.0</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE8.0;WindowsNT6.0;Trident/4.0)</p>
<p>&nbsp;</p>
<p>IE7.0</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT6.0)</p>
<p>&nbsp;</p>
<p>IE6.0</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE6.0;WindowsNT5.1)</p>
<p>&nbsp;</p>
<p>Firefox4.0.1&ndash;MAC</p>
<p>User-Agent:Mozilla/5.0(Macintosh;IntelMacOSX10.6;rv:2.0.1)Gecko/20100101Firefox/4.0.1</p>
<p>&nbsp;</p>
<p>Firefox4.0.1&ndash;Windows</p>
<p>User-Agent:Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1</p>
<p>&nbsp;</p>
<p>Opera11.11&ndash;MAC</p>
<p>User-Agent:Opera/9.80(Macintosh;IntelMacOSX10.6.8;U;en)Presto/2.8.131Version/11.11</p>
<p>&nbsp;</p>
<p>Opera11.11&ndash;Windows</p>
<p>User-Agent:Opera/9.80(WindowsNT6.1;U;en)Presto/2.8.131Version/11.11</p>
<p>&nbsp;</p>
<p>Chrome17.0&ndash;MAC</p>
<p>User-Agent:Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11</p>
<p>&nbsp;</p>
<p>傲游（Maxthon）</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Maxthon2.0)</p>
<p>&nbsp;</p>
<p>腾讯TT</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;TencentTraveler4.0)</p>
<p>&nbsp;</p>
<p>世界之窗（TheWorld）2.x</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1)</p>
<p>&nbsp;</p>
<p>世界之窗（TheWorld）3.x</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;TheWorld)</p>
<p>&nbsp;</p>
<p>搜狗浏览器1.x</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;SE2.XMetaSr1.0;SE2.XMetaSr1.0;.NETCLR2.0.50727;SE2.XMetaSr1.0)</p>
<p>&nbsp;</p>
<p>360浏览器</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;360SE)</p>
<p>&nbsp;</p>
<p>Avant</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;AvantBrowser)</p>
<p>&nbsp;</p>
<p>GreenBrowser</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1)</p>
<p>&nbsp;</p>
<p>移动设备端：</p>
<p>&nbsp;</p>
<p>safariiOS4.33&ndash;iPhone</p>
<p>User-Agent:Mozilla/5.0(iPhone;U;CPUiPhoneOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5</p>
<p>&nbsp;</p>
<p>safariiOS4.33&ndash;iPodTouch</p>
<p>User-Agent:Mozilla/5.0(iPod;U;CPUiPhoneOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5</p>
<p>&nbsp;</p>
<p>safariiOS4.33&ndash;iPad</p>
<p>User-Agent:Mozilla/5.0(iPad;U;CPUOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5</p>
<p>&nbsp;</p>
<p>AndroidN1</p>
<p>User-Agent:Mozilla/5.0(Linux;U;Android2.3.7;en-us;NexusOneBuild/FRF91)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1</p>
<p>&nbsp;</p>
<p>AndroidQQ浏览器Forandroid</p>
<p>User-Agent:MQQBrowser/26Mozilla/5.0(Linux;U;Android2.3.7;zh-cn;MB200Build/GRJ22;CyanogenMod-7)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1</p>
<p>&nbsp;</p>
<p>AndroidOperaMobile</p>
<p>User-Agent:Opera/9.80(Android2.3.4;Linux;OperaMobi/build-1107180945;U;en-GB)Presto/2.8.149Version/11.10</p>
<p>&nbsp;</p>
<p>AndroidPadMotoXoom</p>
<p>User-Agent:Mozilla/5.0(Linux;U;Android3.0;en-us;XoomBuild/HRI39)AppleWebKit/534.13(KHTML,likeGecko)Version/4.0Safari/534.13</p>
<p>&nbsp;</p>
<p>BlackBerry</p>
<p>User-Agent:Mozilla/5.0(BlackBerry;U;BlackBerry9800;en)AppleWebKit/534.1+(KHTML,likeGecko)Version/6.0.0.337MobileSafari/534.1+</p>
<p>&nbsp;</p>
<p>WebOSHPTouchpad</p>
<p>User-Agent:Mozilla/5.0(hp-tablet;Linux;hpwOS/3.0.0;U;en-US)AppleWebKit/534.6(KHTML,likeGecko)wOSBrowser/233.70Safari/534.6TouchPad/1.0</p>
<p>&nbsp;</p>
<p>NokiaN97</p>
<p>User-Agent:Mozilla/5.0(SymbianOS/9.4;Series60/5.0NokiaN97-1/20.0.019;Profile/MIDP-2.1Configuration/CLDC-1.1)AppleWebKit/525(KHTML,likeGecko)BrowserNG/7.1.18124</p>
<p>&nbsp;</p>
<p>WindowsPhoneMango</p>
<p>User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsPhoneOS7.5;Trident/5.0;IEMobile/9.0;HTC;Titan)</p>
<p>&nbsp;</p>
<p>UC无</p>
<p>User-Agent:UCWEB7.0.2.37/28/999</p>
<p>&nbsp;</p>
<p>UC标准</p>
<p>User-Agent:NOKIA5700/UCWEB7.0.2.37/28/999</p>
<p>&nbsp;</p>
<p>UCOpenwave</p>
<p>User-Agent:Openwave/UCWEB7.0.2.37/28/999</p>
<p>&nbsp;</p>
<p>UCOpera</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE6.0;)Opera/UCWEB7.0.2.37/28/999</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>二、浏览器识别</p>
<p>&nbsp;</p>
<p>1、IE浏览器（以IE9.0为例）</p>
<p>PC端：User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsNT6.1;Trident/5.0;</p>
<p>移动设备：User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsPhoneOS7.5;Trident/5.0;IEMobile/9.0;HTC;Titan)</p>
<p>由于遨游、世界之窗、360浏览器、腾讯浏览器以及搜狗浏览器、Avant、GreenBrowser均采用IE的内核，因此IE浏览器判断的标准是&rdquo;MSIE&ldquo;字段，MSIE字段后面的数字为版本号，但同时还需要判断不包含&rdquo;Maxthon&ldquo;、&rdquo;Theworld&ldquo;、&rdquo;360SE&ldquo;、&rdquo;TencentTraveler&ldquo;、&rdquo;SE&ldquo;、&rdquo;Avant&ldquo;等字段（GreenBrowser没有明显标识）。移动设备还需要判断IEMobile+版本号。</p>
<p>&nbsp;</p>
<p>2、360浏览器</p>
<p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;InfoPath.2;.NET4.0C;.NET4.0E;.NETCLR2.0.50727;360SE)</p>
<p>移动设备：暂无</p>
<p>360浏览器的判断标准是&rdquo;360SE&rdquo;字段，没有版本表示。</p>
<p>&nbsp;</p>
<p>3、搜狗浏览器</p>
<p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;SE2.XMetaSr1.0;SE2.XMetaSr1.0;.NETCLR2.0.50727;SE2.XMetaSr1.0)</p>
<p>移动设备：暂无</p>
<p>搜狗浏览器的判断标准是&rdquo;SE&ldquo;、&rdquo;MetaSr&ldquo;字段，版本号为SE后面的数字。</p>
<p>&nbsp;</p>
<p>4、Chrome</p>
<p>PC端：Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11</p>
<p>移动设备：User-Agent:Mozilla/5.0(Linux;U;Android2.2.1;zh-cn;HTC_Wildfire_A3333Build/FRG83D)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1</p>
<p>PC端chrome浏览器的判断标准是chrome字段，chrome后面的数字为版本号；移动端的chrome浏览器判断&rdquo;android&ldquo;、&rdquo;linux&ldquo;、&rdquo;mobilesafari&ldquo;等字段，version后面的数字为版本号。</p>
<p>&nbsp;</p>
<p>5、Safari</p>
<p>PC端：User-Agent:Mozilla/5.0(Macintosh;U;IntelMacOSX10_6_8;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50</p>
<p>移动设备：User-Agent:Mozilla/5.0(iPhone;U;CPUiPhoneOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5</p>
<p>由于Chrome及Nokia&rsquo;sSeries60browser也使用WebKit内核，因此Safari浏览器的判断必须是：包含safari字段，同时不包含chrome等信息，确定后&rdquo;version/&ldquo;后面的数字即为版本号。在以上条件下包含Mobile字段的即为移动设备上的Safari浏览器。</p>
<p>&nbsp;</p>
<p>6、腾讯浏览器</p>
<p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;TencentTraveler4.0;.NETCLR2.0.50727)</p>
<p>移动设备：User-Agent:MQQBrowser/26Mozilla/5.0(Linux;U;Android2.3.7;zh-cn;MB200Build/GRJ22;CyanogenMod-7)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1</p>
<p>腾讯浏览器的判断标准是&rdquo;TencentTraveler&ldquo;或者&rdquo;QQBrowser&ldquo;，TencentTraveler或QQBrowser后面的数字为版本号。</p>
<p>&nbsp;</p>
<p>7、Firefox</p>
<p>PC端：User-Agent:Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1</p>
<p>移动设备：User-Agent:Mozilla/5.0(Android;Linuxarmv7l;rv:5.0)Gecko/Firefox/5.0fennec/5.0</p>
<p>Firefox的判断标准是Firefox字段，firefox后面的数字为版本号。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>8、Theworld</p>
<p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;TheWorld)</p>
<p>移动设备：暂无</p>
<p>Theworld浏览器的判断标准是&rdquo;Theworld&ldquo;字段，没有标示版本号。</p>
<p>需要注意的是：Theworld2.x版本的User-Agent中没有&rdquo;Theworld&ldquo;的字段。</p>
<p>&nbsp;</p>
<p>9、遨游</p>
<p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Maxthon2.0)</p>
<p>移动设备：暂无</p>
<p>遨游浏览器的判断标准是&rdquo;Maxthon&ldquo;，Maxthon后面的数字为版本号。</p>
<p>&nbsp;</p>
<p>10、Opera</p>
<p>PC端：User-Agent:Opera/9.80(WindowsNT6.1;U;en)Presto/2.8.131Version/11.11</p>
<p>移动设备：User-Agent:Opera/9.80(Android2.3.4;Linux;Operamobi/adr-1107051709;U;zh-cn)Presto/2.8.149Version/11.10</p>
<p>opera浏览器的判断标准是opera字段，opera字段后面的数字为版本号。</p>
<p>&nbsp;</p>
<p>11、UC浏览器</p>
<p>UCWeb有多种模式浏览方式，对应的User-Agent为：</p>
<p>UC无</p>
<p>User-Agent:UCWEB7.0.2.37/28/999</p>
<p>UC标准</p>
<p>User-Agent:NOKIA5700/UCWEB7.0.2.37/28/999</p>
<p>UCOpenwave</p>
<p>User-Agent:Openwave/UCWEB7.0.2.37/28/999</p>
<p>UCOpera</p>
<p>User-Agent:Mozilla/4.0(compatible;MSIE6.0;)Opera/UCWEB7.0.2.37/28/999</p>
<p>UC浏览器的判断标准是&rdquo;UCWEB&ldquo;字段，UCWEB后面的数字为版本号。</p>
<p>操作系统定向</p>
<p>操作系统定向依赖于各个浏览器在打开页面时所传输的httpheader信息中的User-Agent，关于User-Agent的说明，请参见Httpheader之User-Agent。</p>
<p>User-Agent的详细信息，请参见浏览器User-Agent的详细信息。</p>
<p>&nbsp;</p>
<p>我们来了解User-Agent中的不同操作系统的识别方法。</p>
<p>PC端：</p>
<p>FreeBSD  X11;FreeBSD(version no.)i386</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;X11;FreeBSD(version no.)AMD64</p>
<p>Linux    X11;Linux ppc</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;X11;Linux ppc64</p>
<p>X11;Linux i686</p>
<p>X11;Linux x86_64</p>
<p>Mac      Macintosh;PPC Mac OS X</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Macintosh;Intel Mac OS X</p>
<p>Solaris  X11;SunOS i86pc</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;X11;SunOs sun4u</p>
<p>Windows  Windows NT 6.1   对应windows7</p>
<p>Windows NT 6.0   对应windows Vista</p>
<p>Windows NT 5.2  对应windows 2003</p>
<p>Windows NT 5.1   对应windows xp</p>
<p>Windows NT 5.0   对应windows 2000</p>
<p>Windows ME</p>
<p>Windows 98</p>
<p>&nbsp;</p>
<p>移动设备端：</p>
<p>iOS       iPhone OS 4_3_3  iPhone/iPod</p>
<p>OS 4_3_3         iPad</p>
<p>Android     Android 2.3.7    后面数字为版本号</p>
<p>WebOs       hpwOS/3.0.0</p>
<p>SymbianOS   SymbianOS/9.4</p>
<p>Windows Phone OS   Windows Phone OS 7.5</p>
<p>BlackBerry   BlackBerry</p>
<p>&nbsp;</p>
<p>转自：https://blog.csdn.net/u012175089/article/details/61199238</p>]]></description></item><item><title>DuPan不限速教程</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/03/11455542.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 03 Sep 2019 12:47:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/03/11455542.html</guid><description><![CDATA[<p>准备:</p>
<p>1.一个百度网盘链接</p>
<p>2.一个可以切换UA的浏览器，</p>
<p>手机版:via，极速浏览器，Kiwi浏览器（推荐）电脑版:未知</p>
<p>3.你的手和脑子😂</p>
<p>步骤:</p>
<p>1.打开浏览器并将浏览器UA改为Opera（具体代码请看我的另一篇文章）</p>
<p>2.访问https://www.baiduwp.com</p>
<p>3.将链接百度网盘粘贴进去（如果有提取码，请把提取码也填上），点击&ldquo;打开&rdquo;</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190903204311435-2051752660.png" alt="" /></p>
<p>&nbsp;</p>
<p>点击&ldquo;下载地址&rdquo;，然后就可以策马奔腾了☺️</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190903204556247-1303476260.png" alt="" /></p>
<p>&nbsp;</p>]]></description></item><item><title>网页去广告代码</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/03/11452415.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Tue, 03 Sep 2019 05:21:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/03/11452415.html</guid><description><![CDATA[<p>可以用于免费空间的去广告</p>
<div class="cnblogs_Highlighter">
<pre class="brush:html;gutter:true;">&lt;!--屏蔽广告--&gt;

&lt;textarea style="display:none"&gt;
</pre>
</div>
<p>　　</p>]]></description></item><item><title>AWD - IDE For Web dev汉化版</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11448157.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 10:26:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11448157.html</guid><description><![CDATA[<p>一款安卓上的HTML网页编辑软件，不错哦</p>
<p>下载链接</p>
<p>http://t.cn/AiRIvtoL</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190902182621544-987665608.png" alt="" /></p>]]></description></item><item><title>一款好看的404网页</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11448046.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 10:06:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11448046.html</guid><description><![CDATA[<p>下载链接</p>
<p>https://files.cnblogs.com/files/HGNET/8a151566031188.zip</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190902180737421-1207080442.png" alt="" /></p>]]></description></item><item><title>html代码分享</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447971.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:55:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447971.html</guid><description><![CDATA[<p>贴图：&lt;img src="图片URL"&gt;</p>
<p>加入连接：&lt;a href="所要连接的相关URL"&gt;写上你想写的字&lt;/a&gt;</p>
<p>在新窗口打开连接：&lt;a href="相关URL" target="_blank"&gt;写上要写的字&lt;/a&gt;</p>
<p>消除连接的下划线在新窗口打开连接：&lt;a href="相关URL" style="text-decoration:none" target="_blank"&gt;写上你想写的字&lt;/a&gt;</p>
<p>移动字体 (走马灯)：&lt;marquee&gt;写上你想写的字&lt;/marquee&gt;</p>
<p>字体加粗：&lt;b&gt;写上你想写的字&lt;/b&gt;</p>
<p>字体斜体：&lt;i&gt;写上你想写的字&lt;/i&gt;</p>
<p>字体下划线: &lt;u&gt;写上你想写的字&lt;/u&gt;</p>
<p>字体删除线:&lt;s&gt;写上你想写的字&lt;/s&gt;</p>
<p>字体加大:&lt;big&gt;写上你想写的字&lt;/big&gt; #wiki.geekfans.com</p>
<p>字体控制大小：&lt;h1&gt;写上你想写的字&lt;/h1&gt; (其中字体大小可从h1-h5,h1最大，h5最小)</p>
<p>更改字体颜色：&lt;font color="#value"&gt;写上你想写的字&lt;/font&gt;(其中value值在000000与ffffff(16位进制)之间</p>
<p>消除连接的下划线：&lt;a href="相关URL" style="text-decoration:none"&gt;写上你想写的字&lt;/a&gt;</p>
<p>贴音乐：&lt;embed src=音乐URL width=300 height=45 type=audio/mpeg autostart="false"&gt;</p>
<p>贴 flash:&lt;embed src="flashURL" width="宽度" height="高度"&gt;</p>
<p>贴影视文件：&lt;img dynsrc="文件URL" width="宽度" height="高度" start=mouseover&gt;</p>
<p>换行：&lt;br&gt;</p>
<p>防偷代码：滑小稽</p>
<p>段落：&lt;p&gt;段落&lt;/p&gt;</p>
<p>原始文字样式：&lt;pre&gt;正文&lt;/pre&gt;</p>
<p>换帖子背景：&lt;body background="背景图片URL"&gt;</p>
<p>固定帖子背景不随滚动条滚动：&lt;body background="背景图片URL" body bgproperties=fixed&gt;</p>
<p>定制帖子背景颜色：&lt;body bgcolor="#value"&gt;(value值见10)</p>
<p>帖子背景音乐：&lt;bgsound="背景音乐URL" loop=infinite&gt;</p>
<p>返回上一页：&lt;a href=javascript :history.back(1)&gt;『返回上一页』&lt;/a&gt;</p>
<p>关闭窗口：&lt;a href=javascript :self.close()&gt;『关闭窗口』&lt;/a&gt;</p>
<p>关于 iframe 的透明背景：</p>
<p>&lt;IFRAME ID="iFrame1" SRC="iframe.htm"allowTransparency="true"style="background-color: green"&gt;&lt;/IFRAME&gt;</p>
<p>oncontextmenu="window.event.returnValue=false" 将彻底屏蔽鼠标右键&lt;table border oncontextmenu=return(false)&gt;&lt;td&gt;no&lt;/table&gt; 可用于Table</p>
<p>&lt;body onselectstart="return false"&gt; 取消选取、防止复制</p>
<p>onpaste="return false" 不准粘贴</p>
<p>oncopy="return false;" oncut="return false;" 防止复制</p>
<p>&lt;link rel="Shortcut Icon" href="favicon.ico"&gt; IEURL栏前换成自己的图标</p>
<p>&lt;link rel="Bookmark" href="favicon.ico"&gt; 可以在收藏夹中显示出你的图标</p>
<p>&lt;input style="ime-mode:disabled"&gt; 关闭输入法</p>
<p>网页将不能被另存为：&lt;noscript&gt;&lt;iframe src=*.html&gt;&lt;/iframe&gt;&lt;/noscript&gt;</p>
<p>查看网页源代码：&lt;input type=button value=查看网页源代码 onclick="window.location = "view-source:"+ "http://www.pconline.com.cn""&gt;</p>
<p>删除时确认：&lt;a href="javascript :if(confirm("确实要删除吗?"))location="boos.asp? &amp;areyou=删除&amp;page=1""&gt;删除&lt;/a&gt;</p>
<p>不要滚动条?</p>
<p>让竖条没有:&lt;body style="overflow:scroll;overflow-y:hidden"&gt;&lt;/body&gt;</p>
<p>让横条没有:&lt;body style="overflow:scroll;overflow-x:hidden"&gt;&lt;/body&gt;</p>
<p>两个都去掉？更简单了：&lt;body scroll="no"&gt;&lt;/body&gt;</p>
<p>怎样去掉图片链接点击后，图片周围的虚线？：&lt;a href="#" onFocus="this.blur()"&gt;&lt;img src="logo.jpg" border=0&gt;&lt;/a&gt;</p>
<p>在打开的子窗口刷新父窗口的代码里如何写？：window.opener.location.reload()</p>
<p>如何设定打开页面的大小：&lt;body onload="top.resizeTo(300,200);"&gt;打开页面的位置&lt;body onload="top.moveBy(300,200);"&gt;</p>
<p>获得一个窗口的大小：document.body.clientWidth; document.body.clientHeight</p>
<p>怎么判断是否是字符；if (/[^/x00-/xff]/g.test(s)) alert("含有汉字");else alert("全是字符");</p>
<p>ENTER 键可以让光标移到下一个输入框：&lt;input onkeydown="if(event.keyCode==13)event.keyCode=9"&gt;</p>
<p>空格代码；&lt;span style="font-size:12px;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;</p>
<p>这个只要在编写的时候加上换行代码就可以了，换行代码有两种</p>
<p>第一种是&lt;p&gt;这里是第二行的文字&lt;/p&gt;</p>
<p>第二种是&lt;br&gt;后面是第二行的文字。</p>]]></description></item><item><title>在网页中插入背景音乐代码(html)</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447965.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:54:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447965.html</guid><description><![CDATA[<p>有两种</p>
<p>分别用&lt;bgsound&gt;和&lt;embed&gt;&lt;/embed&gt;标签,当用&lt;embed&gt;插入背景音乐时可以设置宽度和高度为0，隐藏播放器。</p>
<p>二者的参数如下：</p>
<p>&nbsp;</p>
<p>■ &lt;bgsound&gt;：</p>
<p>&nbsp;</p>
<p>&lt;bgsound&gt; 是用来插入背景音乐，但只适用于 IE，其参数设定不多。如下&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;bgsound src="your.mid"autostart=true loop=infinite&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>src="your.mid"&nbsp;</p>
<p>设定 midi 档案及路径，可以是相对或绝对。&nbsp;</p>
<p>autostart=true&nbsp;</p>
<p>是否在音乐档下载完之后就自动播放。true 是，false 否 (内定值)。&nbsp;</p>
<p>loop=infinite&nbsp;</p>
<p>是否自动反复播放。LOOP=2 表示重复两次，Infinite 表示重复多次。&nbsp;</p>
<p>&nbsp;</p>
<p>■ &lt;EMBED&gt;：</p>
<p>&nbsp;</p>
<p>&lt;EMBED&gt; 是用来插入各种多媒体，格式可以是 Midi、Wav、AIFF、AU 等等，Netscape 及 新版的 IE 都支持。其参数设定较多。如下下&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;EMBED src="your.mid"autostart="true" loop="true" hidden="true"&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>src="your.mid"&nbsp;</p>
<p>设定 midi 档案及路径，可以是相对或绝对。&nbsp;</p>
<p>autostart=true&nbsp;</p>
<p>是否在音乐档下载完之后就自动播放。true 是，false 否 (内定值)。&nbsp;</p>
<p>loop="true"&nbsp;</p>
<p>是否自动反复播放。LOOP=2 表示重复两次，true 是， false 否。&nbsp;</p>
<p>HIDDEN="true"&nbsp;</p>
<p>是否完全隐藏控制画面，true 为是，no 为否 (内定)。&nbsp;</p>
<p>STARTTIME="分:秒"&nbsp;</p>
<p>设定歌曲开始播放的时间。如STARTTIME="00:30" 表示从第30秒处开始播放。&nbsp;</p>
<p>VOLUME="0-100"&nbsp;</p>
<p>设定音量的大小，数值是0到100之间。内定则为使用系统本身的设定。&nbsp;</p>
<p>WIDTH="整数" 和 HIGH="整数"&nbsp;</p>
<p>设定控制面板的高度和宽度。(若 HIDDEN="no")&nbsp;</p>
<p>ALIGN="center"&nbsp;</p>
<p>设定控制面板和旁边文字的对齐方式，其值可以是 top、bottom、center、baseline、 left、right、texttop、middle、absmiddle、absbottom&nbsp;</p>
<p>CONTROLS="smallconsole"&nbsp;</p>
<p>设定控制面板的外观。预设值是 console。&nbsp;</p>
<p>console 一般正常面板&nbsp;</p>
<p>smallconsole 较小的面板&nbsp;</p>
<p>playbutton 只显示播放按钮&nbsp;</p>
<p>pausecutton 只显示暂停按钮&nbsp;</p>
<p>stopbutton 只显示停止按钮&nbsp;</p>
<p>volumelever 只显示音量调节按钮&nbsp;</p>
<p>&nbsp;</p>
<p>实例：</p>
<p>&nbsp;</p>
<p>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0     Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; &nbsp; &nbsp;</p>
<p>&lt;html     xmlns="http://www.w3.org/1999/xhtml"&gt;</p>
<p>&lt;head&gt;</p>
<p>&lt;meta http-equiv="Content-Type"     content="text/html; charset=gb2312" /&gt;</p>
<p>&lt;title&gt;无标题文档&lt;/title&gt;</p>
<p>&lt;/head&gt;</p>
<p>&nbsp;</p>
<p>&lt;body&gt;</p>
<p>&lt;bgsound     src="http://sj.cpgl.net/sjbbs/midi/md01.mid " autostart=true     loop=infinite&gt;</p>
<p>&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>复制代码</p>
<p>&nbsp;</p>
<p>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0     Transitional//EN"     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</p>
<p>&lt;html     xmlns="http://www.w3.org/1999/xhtml"&gt;</p>
<p>&lt;head&gt;</p>
<p>&lt;meta http-equiv="Content-Type" content="text/html;     charset=gb2312" /&gt;</p>
<p>&lt;title&gt;无标题文档&lt;/title&gt;</p>
<p>&lt;/head&gt;</p>
<p>&nbsp;</p>
<p>&lt;body&gt;</p>
<p>&lt;embed     src="http://www.bricklin.cn/zly/theone/2.wma"     width="0" height="0"&gt;&lt;/embed&gt;</p>
<p>&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>复制代码</p>
<p>&nbsp;</p>
<p>**********************************************************************************************************************************</p>
<p>&nbsp;</p>
<p>（一）、基本语法：</p>
<p>&nbsp;</p>
<p>embed src=url</p>
<p>&nbsp;</p>
<p>说明：embed可以用来插入各种多媒体，格式可以是 Midi、Wav、AIFF、AU、MP3等等，</p>
<p>&nbsp;</p>
<p>Netscape及新版的IE 都支持。url为音频或视频文件及其路径，可以是相对路径或绝对路径。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid"&gt;</p>
<p>&nbsp;</p>
<p>（二）、属性设置：</p>
<p>&nbsp;</p>
<p>1、自动播放：</p>
<p>&nbsp;</p>
<p>语法：autostart=true、false</p>
<p>&nbsp;</p>
<p>说明：该属性规定音频或视频文件是否在下载完之后就自动播放。</p>
<p>&nbsp;</p>
<p>true：音乐文件在下载完之后自动播放；</p>
<p>&nbsp;</p>
<p>false：音乐文件在下载完之后不自动播放。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid" autostart=true&gt;</p>
<p>&nbsp;</p>
<p>&lt;embed src="your.mid" autostart=false&gt;</p>
<p>&nbsp;</p>
<p>2、循环播放：</p>
<p>&nbsp;</p>
<p>语法：loop=正整数、true、false</p>
<p>&nbsp;</p>
<p>说明：该属性规定音频或视频文件是否循环及循环次数。</p>
<p>&nbsp;</p>
<p>属性值为正整数值时，音频或视频文件的循环次数与正整数值相同；</p>
<p>&nbsp;</p>
<p>属性值为true时，音频或视频文件循环；</p>
<p>&nbsp;</p>
<p>属性值为false时，音频或视频文件不循环。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid" autostart=trueloop=2&gt;</p>
<p>&nbsp;</p>
<p>&lt;embed src="your.mid" autostart=trueloop=true&gt;</p>
<p>&nbsp;</p>
<p>&lt;embed src="your.mid" autostart=trueloop=false&gt;</p>
<p>&nbsp;</p>
<p>3、面板显示：</p>
<p>&nbsp;</p>
<p>语法：hidden=ture、flase</p>
<p>&nbsp;</p>
<p>说明：该属性规定控制面板是否显示，默认值为flase。</p>
<p>&nbsp;</p>
<p>ture：隐藏面板；</p>
<p>&nbsp;</p>
<p>flase：显示面板。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid"hidden="ture"&gt;</p>
<p>&nbsp;</p>
<p>&lt;embed src="your.mid"hidden="no"&gt;</p>
<p>&nbsp;</p>
<p>4、开始时间：</p>
<p>&nbsp;</p>
<p>语法：starttime=mm:ss（分：秒）</p>
<p>&nbsp;</p>
<p>说明：该属性规定音频或视频文件开始播放的时间。未定义则从文件开头播放。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid"starttime="00:10"&gt;</p>
<p>&nbsp;</p>
<p>5、音量大小：</p>
<p>&nbsp;</p>
<p>语法：volume=0-100之间的整数</p>
<p>&nbsp;</p>
<p>说明：该属性规定音频或视频文件的音量大小。未定义则使用系统本身的设定。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid"volume="10"&gt;</p>
<p>&nbsp;</p>
<p>6、容器属性：</p>
<p>&nbsp;</p>
<p>语法：height=# width=#</p>
<p>&nbsp;</p>
<p>说明：取值为正整数或百分数，单位为像素。该属性规定控制面板的高度和宽度。</p>
<p>&nbsp;</p>
<p>height：控制面板的高度；</p>
<p>&nbsp;</p>
<p>width：控制面板的宽度。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid" height=200width=200&gt;</p>
<p>&nbsp;</p>
<p>7、容器单位：</p>
<p>&nbsp;</p>
<p>语法：units=pixels、en</p>
<p>&nbsp;</p>
<p>说明：该属性指定高和宽的单位为pixels或en。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid"units="pixels" height=200 width=200&gt;</p>
<p>&nbsp;</p>
<p>&lt;embed src="your.mid" units="en"height=200 width=200&gt;</p>
<p>&nbsp;</p>
<p>8、外观设置：</p>
<p>&nbsp;</p>
<p>语法：controls=console、smallconsole、playbutton、pausebutton、stopbutton、</p>
<p>&nbsp;</p>
<p>volumelever 说明：该属性规定控制面板的外观。默认值是console。</p>
<p>&nbsp;</p>
<p>console：一般正常面板；</p>
<p>&nbsp;</p>
<p>smallconsole：较小的面板；</p>
<p>&nbsp;</p>
<p>playbutton：只显示播放按钮；</p>
<p>&nbsp;</p>
<p>pausebutton：只显示暂停按钮；</p>
<p>&nbsp;</p>
<p>stopbutton：只显示停止按钮；</p>
<p>&nbsp;</p>
<p>volumelever：只显示音量调节按钮。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid"controls=smallconsole&gt;</p>
<p>&nbsp;</p>
<p>&lt;embed src="your.mid" controls=volumelever&gt;</p>
<p>&nbsp;</p>
<p>9、对象名称：</p>
<p>&nbsp;</p>
<p>语法：name=#</p>
<p>&nbsp;</p>
<p>说明：#为对象的名称。该属性给对象取名，以便其他对象利用。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid"name="sound1"&gt;</p>
<p>&nbsp;</p>
<p>10、说明文字：</p>
<p>&nbsp;</p>
<p>语法：title=#</p>
<p>&nbsp;</p>
<p>说明：#为说明的文字。该属性规定音频或视频文件的说明文字。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid" title="第一首歌"&gt;</p>
<p>&nbsp;</p>
<p>11、前景色和背景色：</p>
<p>&nbsp;</p>
<p>语法：palette=color|color</p>
<p>&nbsp;</p>
<p>说明：该属性表示嵌入的音频或视频文件的前景色和背景色，第一个值为前景色，第二个值为背景</p>
<p>&nbsp;</p>
<p>色，中间用 | 隔开。color可以是RGB色（RRGGBB）也可以是颜色名，还可以是transparent</p>
<p>&nbsp;</p>
<p>（透明）。 示例：&lt;embed src="your.mid"palette="red|black"&gt;</p>
<p>&nbsp;</p>
<p>12、对齐方式：</p>
<p>&nbsp;</p>
<p>语法：align=top、bottom、center、baseline、 left、right、texttop、middle、</p>
<p>&nbsp;</p>
<p>absmiddle、absbottom</p>
<p>&nbsp;</p>
<p>说明：该属性规定控制面板和当前行中的对象的对齐方式。</p>
<p>&nbsp;</p>
<p>center：控制面板居中；</p>
<p>&nbsp;</p>
<p>left：控制面板居左；</p>
<p>&nbsp;</p>
<p>right：控制面板居右；</p>
<p>&nbsp;</p>
<p>top：控制面板的顶部与当前行中的最高对象的顶部对齐；</p>
<p>&nbsp;</p>
<p>bottom：控制面板的底部与当前行中的对象的基线对齐；</p>
<p>&nbsp;</p>
<p>baseline：控制面板的底部与文本的基线对齐；</p>
<p>&nbsp;</p>
<p>texttop：控制面板的顶部与当前行中的最高的文字顶部对齐；</p>
<p>&nbsp;</p>
<p>middle：控制面板的中间与当前行的基线对齐；</p>
<p>&nbsp;</p>
<p>absmiddle：控制面板的中间与当前文本或对象的中间对齐；</p>
<p>&nbsp;</p>
<p>absbottom：控制面板的底部与文字的底部对齐。</p>
<p>&nbsp;</p>
<p>示例：&lt;embed src="your.mid" align=top&gt;</p>
<p>&nbsp;</p>
<p>&lt;embed src="your.mid" align=center&gt;</p>
<p>&nbsp;</p>
<p>************************************************************************************************************************************</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>将这段代码插入到您的&lt;head&gt;&lt;/head&gt;之间</p>
<p>当您打开网站时即可听到背景音乐：&nbsp;</p>
<p>&lt;bgsound src=china.mid loop="-1"&gt;</p>
<p>这种当网页最小化之后，音乐会消失&nbsp;</p>
<p>&nbsp;</p>
<p>网页背景音乐的代码：&nbsp;</p>
<p>&lt;embed src="http://XXX.com/XXX.mp3" quality=highpluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash"type="application/x-shockwave-flash" width="1"height="1"&gt;&lt;/embed&gt;</p>
<p>1.mid表示音效文件</p>
<p>&lt;embed src="1.swf" quality=highpluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash"type="application/x-shockwave-flash" width="1"height="1"&gt;&lt;/embed&gt;</p>
<p>上面的网页背景音乐代码可以加入FLASH动画的绝对URL（或相对URL）</p>
<p>&lt;embed width=1 height=1 autostart="true" loop="true"controls=PlayButton console=clip1 nolabels=truetype="audio/x-pn-realaudio-plugin" src="1.ram"&gt;&lt;/embed&gt;</p>
<p>ram格式的音乐文件专用网页背景音乐代码：</p>
<p>&lt;embed src="1.mid" align="center" border="0"width="1" height="1" width="100"autostart="true" loop="true"&gt;</p>
<p>指定播放器的大小（width、heigh）、是否自动（autostart标记）、是否循环播放（loop标记），而浏览者则可以自主地决定是否播放音乐。</p>
<p>此代码可以当作网页中插入FLASH动画的代码用。只要把1.mid替换为FLASH动画的相对URL或决对URL就OK了。</p>
<p>&lt;embed src="1.mp3" align="center" border="0"width="1" height="1" width="100"autostart="true" loop="true"&gt;</p>
<p>此代码可以加mp3形式的音乐为网页背景音乐</p>
<p>&lt;EMBED src="http://XXX.com/XXX.mp3" width="0"height="0" border=0 autostart="ture"loop="ture"&gt;&lt;/EMBED&gt;</p>
<p>1.mid表示音效文件</p>
<p>&lt;bgsound src="1.mid" loop=3&gt;</p>
<p>表示将1.mid音效文件插入到页面为背景音乐，并循环播放3次。</p>
<p>&lt;embed src="1.mid" hidden="true"&gt;&nbsp;</p>
<p>1.mid表示音效文件</p>
<p>&lt;bgsound src="1.mid" loop="infinte"&gt;</p>
<p>1.mid表示音效文件</p>
<p>&lt;embed src="1.mid" hidden="true"loop="true"&gt;</p>
<p>1.mid表示音效文件&nbsp;</p>
<p>&lt;bgsound src=1.mid loop="-1"&gt;</p>
<p>1.mid表示音效文件&nbsp;</p>
<p>&nbsp;</p>
<p>网页背景音乐 &nbsp;</p>
<p>&nbsp;</p>
<p>第一种：在叶子代码中的&lt;style&gt;&lt;/style&gt;之间加入&lt;bgsound src="音乐url" loop="-1"&gt; 这段代码。</p>
<p>&nbsp;</p>
<p>在这里要说的是，&ldquo;loop&rdquo;中的数值是音乐循环的次数，可设置为任意正整数，若设为&ldquo;-1&rdquo;的话，音乐将永远循环。</p>
<p>&nbsp;</p>
<p>这种背景音乐是打开叶子后直接播放的，在叶子上不会有显示。这是最简单的一种。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>第二种：这种方法则略微复杂一些，但可设置的参数也较多。仍是在叶子代码中的&lt;style&gt;&lt;/style&gt;标签之间加入一个&ldquo;Embed&rdquo;标签，其最简形式就像这样：</p>
<p>&nbsp;</p>
<p>&lt;EMBED src="音乐url"autostart="true" loop="true" width="80"height="20"&gt;</p>
<p>&nbsp;</p>
<p>不同的是，在这里我们可以设置更多内容，以下是具体的说明：</p>
<p>&nbsp;</p>
<p>src 背景音乐的URL（即url）。&nbsp;</p>
<p>autostart 是否自动播放，&ldquo;true&rdquo;为音乐文件读取完后立即播放，&ldquo;false&rdquo;则不立即播放，默认值为&ldquo;false&rdquo;</p>
<p>&nbsp;</p>
<p>loop 循环次数，设置为&ldquo;true&rdquo;为永远循环，&ldquo;false&rdquo;为仅播放一次，若设为任意一正整数，则循环所输入的次数。&nbsp;</p>
<p>volume 设置音量，取值范围是&ldquo;0-100&rdquo;，默认值为系统当前音量。&nbsp;</p>
<p>starttime 设置音乐开始播放的时间，格式是&ldquo;分：秒&rdquo;，</p>
<p>如：starttime＝"00:10"，就是从第10秒开始播放。&nbsp;</p>
<p>endtime 设置音乐结束播放的时间，具体格式同上。&nbsp;</p>
<p>width 设置音乐播放控制面板的宽度。&nbsp;</p>
<p>height 设置音乐播放控制面板的高度。&nbsp;</p>
<p>controls 设置音乐播放控制面板的外观，</p>
<p>&ldquo;console&rdquo;为通常面板；</p>
<p>&ldquo;smallconsole&rdquo;为小型面板。</p>
<p>&ldquo;playbutton&rdquo;为是否显示播放按钮；</p>
<p>&ldquo;pausebutton&rdquo;为是否显示暂停按钮；</p>
<p>&ldquo;stopbutton&rdquo;为是否显示停止按钮；</p>
<p>&ldquo;volumelever&rdquo;为是否显示音量调节按钮，</p>
<p>&nbsp;</p>
<p>例如：</p>
<p>controls="console/smallconsole/playbutton/</p>
<p>pausebutton/stopbutton/volumelever"。&nbsp;</p>
<p>hidden 设置音乐播放控制面板的显示与否，</p>
<p>&ldquo;false&rdquo;为显示，&ldquo;true&rdquo;为隐藏。&nbsp;</p>
<p>&nbsp;</p>
<p>现在，你可以试一试了。不过要注意，音乐文件的体积不要太大，否则页面已经打开了半天，音乐却还没有读出来。推荐使用wma格式的音乐文件。</p>
<p>&nbsp;</p>
<p>下面是介绍如何在网页中播放电影，加入的方法仍和上面一样。</p>
<p>&nbsp;</p>
<p>&lt;embed src="[/color-red]影片url[/color]" autostart="true"loop="true" width="200" height="150"&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>有图像的rm格式：</p>
<p>&nbsp;</p>
<p>&lt;OBJECT classid='clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA' height=288id=video1 width=305 VIEWASTEXT&gt;</p>
<p>&lt;param name='_ExtentX' value='5503'&gt;</p>
<p>&lt;param name='_ExtentY' value='1588'&gt;</p>
<p>&lt;param name='AUTOSTART' value='-1'&gt;</p>
<p>&lt;param name='SHUFFLE' value='0'&gt;</p>
<p>&lt;param name='PREFETCH' value='0'&gt;</p>
<p>&lt;param name='NOLABELS' value='0'&gt;</p>
<p>&lt;param name='SRC' value='影片url'&gt;</p>
<p>&lt;param name='CONTROLS' value='Imagewindow,StatusBar,ControlPanel'&gt;</p>
<p>&lt;param name='CONSOLE' value='RAPLAYER'&gt;</p>
<p>&lt;param name='LOOP' value='0'&gt;</p>
<p>&lt;param name='NUMLOOP' value='0'&gt;</p>
<p>&lt;param name='CENTER' value='0'&gt;</p>
<p>&lt;param name='MAINTAINASPECT' value='0'&gt;</p>
<p>&lt;param name='BACKGROUNDCOLOR' value='#000000'&gt;</p>
<p>&lt;/OBJECT&gt;</p>
<p>&nbsp;</p>
<p>如果是无图像的rm格式：如相声，歌曲&hellip;&hellip;</p>
<p>&nbsp;</p>
<p>&lt;object ID='video2' WIDTH='300' HEIGHT='62'CLASSID='CLSID:CFCDAA03-8BE4-11CF-B84B-0020AFBBCCFA'&gt;</p>
<p>&lt;param name='_ExtentX' value='9657'&gt;</p>
<p>&lt;param name='_ExtentY' value='847'&gt;</p>
<p>&lt;param name='AUTOSTART' value='-1'&gt;</p>
<p>&lt;param name='SHUFFLE' value='0'&gt;</p>
<p>&lt;param name='PREFETCH' value='0'&gt;</p>
<p>&lt;param name='NOLABELS' value='0'&gt;</p>
<p>&lt;param name='SRC' value='影片url'&gt;</p>
<p>&lt;param name='CONTROLS' value='StatusBar,controlpanel'&gt;</p>
<p>&lt;param name='CONSOLE' value='Clip1'&gt;</p>
<p>&lt;param name='LOOP' value='0'&gt;</p>
<p>&lt;param name='NUMLOOP' value='0'&gt;</p>
<p>&lt;param name='CENTER' value='0'&gt;</p>
<p>&lt;param name='MAINTAINASPECT' value='0'&gt;</p>
<p>&lt;param name='BACKGROUNDCOLOR' value='#000000'&gt;</p>
<p>&lt;/object&gt;</p>
<p>&nbsp;</p>
<p>最简单的media格式的播放器&hellip;&hellip;自动识别有无图像，但是版本是你机器的！</p>
<p>&nbsp;</p>
<p>&lt;embed src='文件url' width=200height=200 autostart=true loop=true&gt;&lt;/embed&gt;</p>
<p>&nbsp;</p>
<p>有图像的media播放器，自动调用网上的插件。</p>
<p>&nbsp;</p>
<p>&lt;object id=nstvclassid='CLSID:6BF52A52-394A-11d3-B153-00C04F79FAA6' width=280 height=265codebase=http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52</p>
<p>,701standby=Loading Microsoft? Windows Media? Player components...type=application/x-oleobject&gt;</p>
<p>&lt;param name='URL' value='文件url'&gt;</p>
<p>&lt;PARAM NAME='UIMode' VALUE='full'&gt;&lt;PARAM NAME='AutoStart'VALUE='true'&gt;</p>
<p>&lt;PARAM NAME='Enabled' VALUE='true'&gt;</p>
<p>&lt;PARAM NAME='enableContextMenu' VALUE='false'&gt;</p>
<p>&lt;param name='WindowlessVideo' VALUE='true'&gt;&lt;/object&gt;</p>
<p>&nbsp;</p>
<p>无图像的media播放器&hellip;&hellip;同上。</p>
<p>&nbsp;</p>
<p>&lt;object id=nstv classid='CLSID:6BF52A52-394A-11d3-B153-00C04F79FAA6'width=280 height=60codebase=http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52</p>
<p>,701standby=Loading Microsoft? Windows Media? Player components...type=application/x-oleobject&gt;</p>
<p>&lt;param name='URL' value='文件url'&gt;</p>
<p>&lt;PARAM NAME='UIMode' VALUE='full'&gt;</p>
<p>&lt;PARAM NAME='AutoStart' VALUE='true'&gt;</p>
<p>&lt;PARAM NAME='Enabled' VALUE='true'&gt;</p>
<p>&lt;PARAM NAME='enableContextMenu' VALUE='false'&gt;</p>
<p>&lt;/object&gt;</p>
<p>&nbsp;</p>
<p>只是界面不同的media的调插件播放器&hellip;&hellip;建议不用这个，你可以看情况办吧。</p>
<p>&nbsp;</p>
<p>&lt;embed src='文件url'type='audio/x-pn-realaudio-plugin' console='Clip1'controls='ControlPanel,StatusBar' height='60' width='275'autostart='true'&gt;&lt;/embed&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>背景音乐代码&nbsp;</p>
<p>1. 如何贴rm,ra,ram类型的音乐，代码如下：&nbsp;</p>
<p>&lt;embed width="0" height="0"type="audio/x-pn-realaudio-plugin" autostart="true"controls="ControlPanel"src="http://guest.anyp.cn/uploads/01.rm";&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>2. 如何贴midi,asf,wma,asx类型的音乐，代码如下：&nbsp;</p>
<p>&lt;embed autostart="true" loop="-1" controls="ControlPanel"width="0" height="0"src="http://guest.anyp.cn/uploads/01.mid";&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>只需要把整段代码copy复制到文章中(编辑文章的时请先点击HTML代码模式再粘贴代码，否则这段代码会以文本形式显示出来，不能被执行)，用你喜欢及可用的音乐文件的URL(网址)代替上面红色显示的音乐URL代码就可以了。&nbsp;</p>
<p>&nbsp;</p>
<p>造成音乐不能成功播放的大多数原因：&nbsp;</p>
<p>A：音乐文件错误，有可能这个文件本身就不是音乐的文件，只是一个普通的HTML页面。&nbsp;</p>
<p>B：音乐文件URL错误，这个音乐文件根本不存在。&nbsp;</p>
<p>C：没有安装相关的播放软件。&nbsp;</p>
<p>&nbsp;</p>
<p>测试的办法：请把音乐文件URL在IE栏输入，如果提示你保存，保存的文件类型是rm、ram、midi等的文件即是音乐文件。如果打开这个文件是自动播放音乐或显示其他内容的，则不是。&nbsp;</p>
<p>&nbsp;</p>
<p>添加带音乐的flash，然后在弹出窗口输入你的FLASHURL，注意后戳名为：http://xxxxx.xxxx，大小可以调整为，1*1，这样可以在不显示FALSH的情况下播放音乐，但是记住要为自动播放的，不要找那种需要按开始的FLASH&nbsp;</p>
<p>&nbsp;</p>
<p>加入一段在线音乐播放代码，推荐使用：&lt;IFRAMEmarginHeight=0 src="http://www.yqchina.com/play.htm"; frameBorder=0noResize width=540 scrolling=no height=25&gt; 将此代码放入网站合适地方，将24小时不间断放歌，次代码由清风网络电台提供&nbsp;</p>
<p>&nbsp;</p>
<p>以下代码由[秋天的风]提供：首先打开我的文章，进入编辑状态，选择HTML格式然后就可以输入了，下面我们来看代码，首先来看第一种，比较简单的：&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;bgsound src=&rdquo;url&rdquo; loop=-1&gt;&nbsp;</p>
<p>&ldquo;url&rdquo;依然是路径名,loop表示循环数，-1表示始终循环&nbsp;</p>
<p>&nbsp;</p>
<p>来看第二种：&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;EMBED src="music.mid" autostart="bool"loop="n" width="m" height="k"&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>其中各个属性的含义如下：&nbsp;</p>
<p>SRC：音乐文件路径&nbsp;</p>
<p>（以下可选） AUTOSTART：音乐文件上传完后自动播放，TRUE为播放，FALSE为否&nbsp;</p>
<p>LOOP：设置循环TRUE为自动循环，FALSE为不循环，数值为次数&nbsp;</p>
<p>WIDTH，HEIGHT为播放控制面板的宽和高，&nbsp;</p>
<p>其余的属性有：&nbsp;</p>
<p>volume：取值范围为"0-100"，设置音量，默认为系统本身的音量&nbsp;</p>
<p>starttime："分：秒"，设置歌曲开始播放的时间，如，starttime="00:10"，从第10秒开始播放&nbsp;</p>
<p>endtime： "分：秒"，设置歌曲结束播放的时间&nbsp;</p>
<p>controls ：控制面板的外观controls="console/smallconsole/playbutton/pausebutton/stopbutton/volumelever" &middot;console 正常大小的面板&nbsp;</p>
<p>&middot;smallconsole 较小的面板&nbsp;</p>
<p>&middot;playbutton 显示播放按钮&nbsp;</p>
<p>&middot;pausebutton 显示暂停按钮&nbsp;</p>
<p>&middot;stopbutton 显示停止按钮&nbsp;</p>
<p>&middot;volumelever 显示音量调节按钮&nbsp;</p>
<p>hidden： 为true时可以隐藏面板&nbsp;</p>
<p>&nbsp;</p>
<p>&mdash;&mdash;以下代码由[风之舞]提供：&nbsp;</p>
<p>背景音乐代码精简&nbsp;</p>
<p>1、&lt;embed src="背景音乐网址" hidden="true" autostart="true"loop="true"&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>--------hidden="true"表示隐藏播放，即不显示播放器的外观，若要想显示，把"true" 替换为"false"即可，这样为默认是最小化播放，若还想具体显示播放器的大小，另加上height="高度值" width="宽度值" 就可以了。&nbsp;</p>
<p>&nbsp;</p>
<p>-------autostart="true"表示当前页一载入则自动播放，若不希望播放改为autostart="false"&nbsp;</p>
<p>即可...&nbsp;</p>
<p>&nbsp;</p>
<p>------ loop="true"表示无限次循环播放音乐直到当前页关闭为止，不想循环播放替换为 loop="false"就OK了&nbsp;</p>
<p>&nbsp;</p>
<p>2、&lt;embed src="背景音乐网址" autostart="true" loop="-1"controls="ControlPanel" width="0" height="0" &gt;</p>
<p>&nbsp;</p>
<p>-----------loop="-1" 表示无限次循环播放，可设置播放次数，用具体数字代替即可，比如我希望它播放两次，则loop="2"&nbsp;</p>
<p>&nbsp;</p>
<p>---------controls="ControlPanel"这个控制选项可省略&nbsp;</p>
<p>&nbsp;</p>
<p>--------width="0" height="0"表示隐藏播放，和前面的一样。&nbsp;</p>
<p>若欲设置播放器的外观，则替换为具体的数值就可以了，比如width="123"height="100"&nbsp;</p>
<p>--------------------------------------------------&nbsp;</p>
<p>其实要说最简化的播放背景音乐的代码，则下面的代码是最简单的了---&gt;&nbsp;</p>
<p>&lt;embed src="背景音乐网址" &gt;&nbsp;</p>
<p>-----------------------------------------------------&nbsp;</p>
<p>另外:bgsound src="背景音乐路径" loop="-1"&gt;&nbsp;</p>
<p>这个只支持IE浏览器，而且是完全下载完后才开始播放，不像前面所说的格式那样可以一边缓冲一边播放。这个一般用于mid音乐或较小的mp3,wav格式的音乐. 若是较大的文件还是用前面所说的格式吧~~&nbsp;</p>
<p>&lt;bgsound src="背景音乐路径"loop="-1"&gt;这个随浏览器的打开而播放，当最小化窗口时即停止播放，当最大化窗口时又开始播放。&nbsp;</p>
<p>而，&lt;embed src="背景音乐网址" autostart="true" loop="-1"controls="ControlPanel" width="0" height="0" &gt;常用于mid，,wav,mp3类型的音乐类型.&nbsp;</p>
<p>&nbsp;</p>
<p>这个则不管是否最小化窗口都始终播放，直至关闭当前窗口为止~~&nbsp;</p>
<p>支持的音乐文件类型：只支持MP播放器所支持的音乐格式，比如mp3,asf,wma,asx等等.&nbsp;</p>
<p>不支持rm,ram....&nbsp;</p>
<p>视频文件的插入方法也和上面所说的一样，设置好合适的&nbsp;</p>
<p>音乐代码解释&nbsp;</p>
<p>&lt;embed autostart="true" loop="-1"controls="ControlPanel" width="0" height="0"src="http://guest.anyp.cn/uploads/01.mid"&gt;&nbsp;</p>
<p>解释一下:&nbsp;</p>
<p>&nbsp;</p>
<p>AUTOSTART="TRUE / FALSE"&nbsp;</p>
<p>是否要在音乐档传完之后，就自动播放音乐。 TRUE 是要 &nbsp;</p>
<p>FALSE 是不要，内定值是不要。&nbsp;</p>
<p>LOOP="TRUE / FALSE / 整数"&nbsp;</p>
<p>设定是否要自动反覆播放，LOOP=2 表示重复两次，若要无限次重复可用 LOOP="TRUE" &nbsp;</p>
<p>WIDTH 和 HIGH="整数"&nbsp;</p>
<p>设定控制面版的宽度和高度 &nbsp;</p>
<p>CONTROLS="CONSOLE / SMALLCONSOLE /&nbsp;</p>
<p>PLAYBUTTON / PAUSEBUTTON / STOPBUTTON /&nbsp;</p>
<p>VOLUMELEVER"&nbsp;</p>
<p>设定控制面板的样子，预设值是 CONSOLE &nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>CONSOLE 一般正常的面板&nbsp;</p>
<p>SMALLCONSOLE 较小的面板&nbsp;</p>
<p>PLAYBUTTON 只显示播放按钮&nbsp;</p>
<p>PAUSEBUTTON 只显示暂停按钮&nbsp;</p>
<p>STOPBUTTON 只显示停止按钮&nbsp;</p>
<p>VOLUMELEVER 只显示音量调整钮</p>]]></description></item><item><title>CSS和JS两种颜色渐变文字效果代码</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447936.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:51:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447936.html</guid><description><![CDATA[<p>js实现颜色渐变文字效果代码:</p>
<p>&lt;!-- js颜色渐变色文字 --&gt;</p>
<p>&lt;div id="moml"&gt;</p>
<p>&lt;div style="text-align:center;"&gt;</p>
<p>颜色渐变文字效果</p>
<p>&lt;/div&gt;</p>
<p>&lt;script language="javascript"&gt;</p>
<p>function changeColor(){ var color="#f00|#0f0|#00f|#880|#808|#088|yellow|green|blue|gray"; color=color.split("|"); document.getElementById("moml").style.color=color[parseInt(Math.random() * color.length)]; } setInterval("changeColor()",200); &lt;/script&gt;</p>
<p>&lt;/div&gt;</p>
<p>css实现颜色渐变文字效果代码:</p>
<p>&lt;!-- css颜色渐变变色文字 --&gt;</p>
<p>&lt;div id="momk"&gt;</p>
<p>&lt;div style="text-align:center;"&gt;</p>
<p>颜色渐变文字效果</p>
<p>&lt;/div&gt;&lt;/div&gt;</p>
<p>&lt;style&gt;</p>
<p>#momk{animation:change 10s infinite;font-weight:100; }</p>
<p>@keyframes change{0%{color:#5cb85c;}25%{color:#556bd8;}50%{color:#e40707;}75%{color:#66e616;}100% {color:#67bd31;}}</p>
<p>&lt;/style&gt;&nbsp;</p>]]></description></item><item><title>一个简洁的404</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447913.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:46:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447913.html</guid><description><![CDATA[<p>效果如图:</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190902174702725-748533492.jpg" alt="" /></p>
<p>代码如下:</p>
<p>&nbsp;</p>
<p>&lt;!DOCTYPE html&gt;</p>
<p>&lt;html&gt;</p>
<p>&lt;head&gt;</p>
<p>&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;</p>
<p>&lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"&gt;</p>
<p>&lt;title&gt;404__欢哥网&lt;/title&gt;</p>
<p>&lt;style type="text/css"&gt;</p>
<p>body,div,h3,h4,li,ol{margin:0;padding:0}</p>
<p>body{font:14px/1.5 'Microsoft YaHei','微软雅黑',Helvetica,Sans-serif;min-width:1200px;background:#f0f1f3;}</p>
<p>:focus{outline:0}</p>
<p>h3,h4,strong{font-weight:700}</p>
<p>a{color:#428bca;text-decoration:none}</p>
<p>a:hover{text-decoration:underline}</p>
<p>.error-page{background:#f0f1f3;padding:80px 0 180px}</p>
<p>.error-page-container{position:relative;z-index:1}</p>
<p>.error-page-main{position:relative;background:#f9f9f9;margin:0 auto;width:617px;-ms-box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:50px 50px 70px}</p>
<p>.error-page-main:before{content:'';display:block;background:url(img/errorPageBorder.png?1427783409637);height:7px;position:absolute;top:-7px;width:100%;left:0}</p>
<p>.error-page-main h3{font-size:24px;font-weight:400;border-bottom:1px solid #d0d0d0}</p>
<p>.error-page-main h3 strong{font-size:54px;font-weight:400;margin-right:20px}</p>
<p>.error-page-main h4{font-size:20px;font-weight:400;color:#333}</p>
<p>.error-page-actions{font-size:0;z-index:100}</p>
<p>.error-page-actions div{font-size:14px;display:inline-block;padding:30px 0 0 10px;width:50%;-ms-box-sizing:border-box;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;color:#838383}</p>
<p>.error-page-actions ol{list-style:decimal;padding-left:20px}</p>
<p>.error-page-actions li{line-height:2.5em}</p>
<p>.error-page-actions:before{content:'';display:block;position:absolute;z-index:-1;bottom:17px;left:50px;width:200px;height:10px;-moz-box-shadow:4px 5px 31px 11px #999;-webkit-box-shadow:4px 5px 31px 11px #999;box-shadow:4px 5px 31px 11px #999;-moz-transform:rotate(-4deg);-webkit-transform:rotate(-4deg);-ms-transform:rotate(-4deg);-o-transform:rotate(-4deg);transform:rotate(-4deg)}</p>
<p>.error-page-actions:after{content:'';display:block;position:absolute;z-index:-1;bottom:17px;right:50px;width:200px;height:10px;-moz-box-shadow:4px 5px 31px 11px #999;-webkit-box-shadow:4px 5px 31px 11px #999;box-shadow:4px 5px 31px 11px #999;-moz-transform:rotate(4deg);-webkit-transform:rotate(4deg);-ms-transform:rotate(4deg);-o-transform:rotate(4deg);transform:rotate(4deg)}</p>
<p>&lt;/style&gt;</p>
<p>&lt;/head&gt;</p>
<p>&lt;body&gt;</p>
<p>&lt;div class="error-page"&gt;</p>
<p>&nbsp; &nbsp; &lt;div class="error-page-container"&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class="error-page-main"&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;strong&gt;404&lt;/strong&gt;很抱歉，您要访问的页面不存在！</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/h3&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class="error-page-actions"&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h4&gt;可能原因：&lt;/h4&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;ol&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;li&gt;网络信号差不稳定&lt;/li&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;li&gt;找不到请求的页面&lt;/li&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;li&gt;输入的网址不正确&lt;/li&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/ol&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h4&gt;可以尝试：&lt;/h4&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;ol&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;li&gt;&lt;a href="/"&gt;返回首页&lt;/a&gt;&lt;/li&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;li&gt;&lt;a href="/"&gt;留言反馈&lt;/a&gt;&lt;/li&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/ol&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</p>
<p>&nbsp; &nbsp; &lt;/div&gt;</p>
<p>&lt;/div&gt;</p>
<p>&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>&nbsp;</p>]]></description></item><item><title>用js实现鼠标点击爱心特效</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447899.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:44:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447899.html</guid><description><![CDATA[<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190902174312472-1310936473.jpg" alt="" /></p>
<p>效果如图以下是代码</p>
<p>&lt;script&gt; !function(e, t, a) { function r() { for (var e = 0; e &lt; s.length; e++) s[e].alpha &lt;= 0 ? (t.body.removeChild(s[e].el), s.splice(e, 1)) : (s[e].y--, s[e].scale += .004, s[e].alpha -= .013, s[e].el.style.cssText = "left:" + s[e].x + "px;top:" + s[e].y + "px;opacity:" + s[e].alpha + ";transform:scale(" + s[e].scale + "," + s[e].scale + ") rotate(45deg);background:" + s[e].color + ";z-index:99999"); requestAnimationFrame(r) } function n() { var t = "function" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function(e) { t &amp;&amp; t(), o(e) } } function o(e) { var a = t.createElement("div"); a.className = "heart", s.push({ el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: c() }), t.body.appendChild(a) } function i(e) { var a = t.createElement("style"); a.type = "text/css"; try { a.appendChild(t.createTextNode(e)) } catch(t) { a.styleSheet.cssText = e } t.getElementsByTagName("head")[0].appendChild(a) } function c() { return "rgb(" + ~~ (255 * Math.random()) + "," + ~~ (255 * Math.random()) + "," + ~~ (255 * Math.random()) + ")" } var s = []; e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function(e) { setTimeout(e, 1e3 / 60) }, i(".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}"), n(), r() } (window, document);&lt;/script&gt;</p>]]></description></item><item><title>一些关于网页标题的动态js特效</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447877.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:42:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447877.html</guid><description><![CDATA[<p>1.当转换页面时，标题改变</p>
<p>&lt;script&gt;</p>
<p>document.addEventListener('visibilitychange',function(){</p>
<p>if(document.visibilityState=='hidden') {</p>
<p>normal_title=document.title;</p>
<p>document.title='(づ￣ 3￣)づ';</p>
<p>}</p>
<p>else</p>
<p>document.title=normal_title;</p>
<p>});</p>
<p>&lt;/script&gt;</p>
<p>2.标题闪动，你有新的消息</p>
<p>&lt;script language="JavaScript"&gt;</p>
<p>&nbsp;step=0</p>
<p>&nbsp;function flash_title()</p>
<p>&nbsp;{</p>
<p>&nbsp; step++</p>
<p>&nbsp; if (step==3) {step=1} &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; if (step==1) {document.title='【你有新的消息】'}</p>
<p>&nbsp; if (step==2) {document.title='【　　　　　　】'}</p>
<p>&nbsp; setTimeout("flash_title()",380);</p>
<p>&nbsp;}</p>
<p>&nbsp;flash_title()</p>
<p>&lt;/script&gt;</p>
<p>也可以尝试浏览器兼容版</p>
<p>&lt;script language="JavaScript"&gt;&nbsp;</p>
<p>setTimeout('flash_title()',2000); //2秒之后调用一次</p>
<p>function flash_title()&nbsp;</p>
<p>{&nbsp;</p>
<p>&nbsp; //当窗口效果为最小化，或者没焦点状态下才闪动</p>
<p>&nbsp; if(isMinStatus() || !window.focus)</p>
<p>&nbsp; {</p>
<p>&nbsp; &nbsp; newMsgCount();</p>
<p>&nbsp; }</p>
<p>&nbsp; else</p>
<p>&nbsp; {</p>
<p>&nbsp; &nbsp; document.title='订单管理中心-AOOXING';//窗口没有消息的时候默认的title内容</p>
<p>&nbsp; &nbsp; window.clearInterval();</p>
<p>&nbsp; }</p>
<p>}&nbsp;</p>
<p>//消息提示</p>
<p>var flag=false;</p>
<p>function newMsgCount(){</p>
<p>&nbsp; if(flag){</p>
<p>&nbsp; &nbsp; flag=false;</p>
<p>&nbsp; &nbsp; document.title='【新订单】';</p>
<p>&nbsp; }else{</p>
<p>&nbsp; &nbsp; flag=true;</p>
<p>&nbsp; &nbsp; document.title='【　　　】';</p>
<p>&nbsp; }</p>
<p>&nbsp; window.setTimeout('flash_title(0)',380);&nbsp;</p>
<p>}</p>
<p>//判断窗口是否最小化</p>
<p>//在Opera中还不能显示</p>
<p>var isMin = false;</p>
<p>function isMinStatus() {</p>
<p>&nbsp; //除了Internet Explorer浏览器，其他主流浏览器均支持Window outerHeight 和outerWidth 属性</p>
<p>&nbsp; if(window.outerWidth != undefined &amp;&amp; window.outerHeight != undefined){</p>
<p>&nbsp; &nbsp; isMin = window.outerWidth &lt;= 160 &amp;&amp; window.outerHeight &lt;= 27;</p>
<p>&nbsp; }else{</p>
<p>&nbsp; &nbsp; isMin = window.outerWidth &lt;= 160 &amp;&amp; window.outerHeight &lt;= 27;</p>
<p>&nbsp; }</p>
<p>&nbsp; //除了Internet Explorer浏览器，其他主流浏览器均支持Window screenY 和screenX 属性</p>
<p>&nbsp; if(window.screenY != undefined &amp;&amp; window.screenX != undefined ){</p>
<p>&nbsp; &nbsp; isMin = window.screenY &lt; -30000 &amp;&amp; window.screenX &lt; -30000;//FF Chrome &nbsp; &nbsp; &nbsp;&nbsp;</p>
<p>&nbsp; }else{</p>
<p>&nbsp; &nbsp; isMin = window.screenTop &lt; -30000 &amp;&amp; window.screenLeft &lt; -30000;//IE</p>
<p>&nbsp; }</p>
<p>&nbsp; return isMin;</p>
<p>}</p>
<p>&lt;/script&gt;</p>
<p>3.浏览器标题滚动跑马灯</p>
<p>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</p>
<p>"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</p>
<p>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</p>
<p>&lt;head&gt;</p>
<p>&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;</p>
<p>&lt;title&gt;TITLE栏上滚动的文字&lt;/title&gt;</p>
<p>&lt;script language=javascript &gt;</p>
<p>var text=document.title</p>
<p>var timerID</p>
<p>function newtext() {</p>
<p>clearTimeout(timerID)</p>
<p>document.title=text.substring(1,text.length)+text.substring(0,1)</p>
<p>text=document.title.substring(0,text.length)</p>
<p>timerID = setTimeout("newtext()", 100)</p>
<p>}</p>
<p>&lt;/script&gt;</p>
<p>&lt;/head&gt;</p>
<p>&lt;body onload="newtext()"&gt;&lt;/body&gt;</p>
<p>&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>&lt;html&gt;</p>
<p>&lt;head&gt;</p>]]></description></item><item><title>网易云音乐代码音乐播放器调用</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447858.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:39:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447858.html</guid><description><![CDATA[<p>单曲调用代码:</p>
<p>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=100% height=86 src="http://music.163.com/outchain/player?type=2&amp;id=299757&amp;auto=1&amp;height=66"&gt;&lt;/iframe&gt;</p>
<p>参数说明播放器可修改参数：</p>
<p>width=100% #自适应宽度</p>
<p>height=86 #根据自己喜好修改</p>
<p>id=299757 #为歌曲的ID http://music.163.com/#/song?id=299757</p>
<p>auto=0 #0为不自动播放，1为自动播放</p>
<p>列表播放调用代码：</p>
<p>&lt;iframe src="http://music.163.com/outchain/player?type=0&amp;amp;id=34238509&amp;amp;auto=0&amp;amp;height=430" width="100%" height="450" frameborder="no" marginwidth="0" marginheight="0"&gt;&lt;/iframe&gt;</p>
<p>&nbsp;参数说明：</p>
<p>播放器可修改参数：</p>
<p>width=100% #自适应宽度</p>
<p>height=450 #根据自己喜好修改</p>
<p>id=34238509 #为歌曲列表页的ID ,例如：http://music.163.com/#/playlist?id=34238509</p>
<p>auto=0 #0为不自动播放，1为自动播放</p>
<p>&nbsp;</p>]]></description></item><item><title>滚动公告代码</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447833.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:37:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447833.html</guid><description><![CDATA[<p>基于走马灯的滚动公告效果，鼠标放上后停止，移走时继续滚动，特点是代码简单，使用方便，位置及大小调整都比较容易，可以由你的程序自动读取公告内容，可作为广告代码。</p>
<p>&nbsp;</p>
<p>代码如下：</p>
<p>&lt;title&gt;滚动公告&lt;/title&gt;</p>
<p>&nbsp;</p>
<p>&lt;div align=center&gt;&lt;b&gt;滚动公告&lt;/b&gt;&lt;/div&gt;</p>
<p>&nbsp;</p>
<p>&lt;table cellspacing=0 cellpadding=1 width="100%" border=0&gt;</p>
<p>&nbsp;</p>
<p>&lt;tr&gt;&lt;th bgcolor=#CCCCCC&gt;&lt;marquee direction=up height=120 width=260 id=m onmouseout=m.start() onMouseOver=m.stop() scrollamount=2 align="center"&gt;</p>
<p>&nbsp;</p>
<p>&lt;p&gt;&lt;a href="http:" target="_blank"&gt;祝大家马年大吉！&lt;/a&gt;&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;p&gt;2009，祝大家事业有成！&lt;/p&gt;</p>
<p>&nbsp;</p>
<p>&lt;p&gt;大家看见了吗&lt;/p&gt;</p>
<p>&nbsp;</p>
<p>&lt;p&gt;爱在哪里？&lt;/p&gt;</p>
<p>&nbsp;</p>
<p>&lt;p&gt;爱在这里&lt;/p&gt;</p>
<p>&nbsp;</p>
<p>&lt;p&gt;大家把这里改成自己需要的内容&lt;/p&gt;</p>
<p>&nbsp;</p>
<p>&lt;/marquee&gt;&lt;/th&gt;</p>
<p>&nbsp;</p>
<p>&lt;/tr&gt;</p>
<p>&nbsp;</p>
<p>&lt;/table&gt;</p>]]></description></item><item><title>HTML网站右键禁用F12代码 屏蔽审查元素 防止修改页面代码</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447823.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:35:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447823.html</guid><description><![CDATA[<p>&lt;script&gt;//禁止右键</p>
<p>&nbsp;</p>
<p>function click(e) {</p>
<p>&nbsp;</p>
<p>if (document.all) {</p>
<p>&nbsp;</p>
<p>if (event.button==2||event.button==3) { alert("欢迎光临寒舍，有什么需要帮忙的话，请与站长联系！谢谢您的合作！！！");</p>
<p>&nbsp;</p>
<p>oncontextmenu='return false';</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>if (document.layers) {</p>
<p>&nbsp;</p>
<p>if (e.which == 3) {</p>
<p>&nbsp;</p>
<p>oncontextmenu='return false';</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>if (document.layers) {</p>
<p>&nbsp;</p>
<p>document.captureEvents(Event.MOUSEDOWN);</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>document.onmousedown=click;</p>
<p>&nbsp;</p>
<p>document.oncontextmenu = new Function("return false;")</p>
<p>&nbsp;</p>
<p>document.onkeydown =document.onkeyup = document.onkeypress=function(){&nbsp;</p>
<p>&nbsp;</p>
<p>if(window.event.keyCode == 12) {&nbsp;</p>
<p>&nbsp;</p>
<p>window.event.returnValue=false;</p>
<p>&nbsp;</p>
<p>return(false);&nbsp;</p>
<p>&nbsp;</p>
<p>}&nbsp;</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>&lt;/script&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp; &lt;script&gt;//禁止F12</p>
<p>&nbsp;</p>
<p>function fuckyou(){</p>
<p>&nbsp;</p>
<p>window.close(); //关闭当前窗口(防抽)</p>
<p>&nbsp;</p>
<p>window.location="about:blank"; //将当前窗口跳转置空白页</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>function click(e) {</p>
<p>&nbsp;</p>
<p>if (document.all) {</p>
<p>&nbsp;</p>
<p>&nbsp; if (event.button==2||event.button==3) {&nbsp;</p>
<p>&nbsp;</p>
<p>alert("欢迎光临寒舍，有什么需要帮忙的话，请与站长联系！谢谢您的合作！！！");</p>
<p>&nbsp;</p>
<p>oncontextmenu='return false';</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>if (document.layers) {</p>
<p>&nbsp;</p>
<p>if (e.which == 3) {</p>
<p>&nbsp;</p>
<p>oncontextmenu='return false';</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>if (document.layers) {</p>
<p>&nbsp;</p>
<p>fuckyou();</p>
<p>&nbsp;</p>
<p>document.captureEvents(Event.MOUSEDOWN);</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>document.onmousedown=click;</p>
<p>&nbsp;</p>
<p>document.oncontextmenu = new Function("return false;")</p>
<p>&nbsp;</p>
<p>document.onkeydown =document.onkeyup = document.onkeypress=function(){&nbsp;</p>
<p>&nbsp;</p>
<p>if(window.event.keyCode == 123) {&nbsp;</p>
<p>&nbsp;</p>
<p>fuckyou();</p>
<p>&nbsp;</p>
<p>window.event.returnValue=false;</p>
<p>&nbsp;</p>
<p>return(false);&nbsp;</p>
<p>&nbsp;</p>
<p>}&nbsp;</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>&lt;/script&gt;</p>]]></description></item><item><title>给你的网站添加运行时间</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447808.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:34:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447808.html</guid><description><![CDATA[<p>&lt;span id="timeDate"&gt;载入天数...&lt;/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/span&gt; &lt;script language="javascript"&gt;&nbsp;</p>
<p>&nbsp;var now = new Date();</p>
<p>&nbsp;function createtime(){</p>
<p>&nbsp; var grt= new Date("06/23/2016 00:00:00");/*---这里是网站的启用时间--*/</p>
<p>&nbsp; now.setTime(now.getTime()+250);</p>
<p>&nbsp; days = (now - grt ) / 1000 / 60 / 60 / 24;</p>
<p>&nbsp; dnum = Math.floor(days);</p>
<p>&nbsp; hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum);</p>
<p>&nbsp; hnum = Math.floor(hours);</p>
<p>&nbsp; if(String(hnum).length ==1 ){hnum = "0" + hnum;}</p>
<p>&nbsp; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</p>
<p>&nbsp; mnum = Math.floor(minutes);</p>
<p>&nbsp; if(String(mnum).length ==1 ){mnum = "0" + mnum;}</p>
<p>&nbsp; seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</p>
<p>&nbsp; snum = Math.round(seconds);</p>
<p>&nbsp; if(String(snum).length ==1 ){snum = "0" + snum;}</p>
<p>&nbsp; document.getElementById("timeDate").innerHTML = "稳定运行"+dnum+"天";</p>
<p>&nbsp; document.getElementById("times").innerHTML = hnum + "小时" + mnum + "分" + snum + "秒";</p>
<p>&nbsp;}</p>
<p>&nbsp;setInterval("createtime()",250);&nbsp;</p>
<p>&lt;/script&gt;&nbsp;</p>]]></description></item><item><title>给自己的网站添加复制提示代码</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447800.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:33:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447800.html</guid><description><![CDATA[<p>一个很不错的小技巧，当别人复制你网站上的内容时跳出提示，既能加强网站版权保护，还能宣传自己的网站，一举两得。 在全站复制都是显示这个内容。 把这段代码放在网站底部文件中就可以了。</p>
<pre class="sh_html">&lt;script type="text/javascript"&gt;function warning(){ if(navigator.userAgent.indexOf("MSIE")&gt;0) { art.dialog.alert('欢迎光临欢哥网！复制成功，若要转载请务必保留原文链接，申明来源，谢谢合作！'); } else { alert("欢迎光临欢哥网！复制成功，若要转载请务必保留原文链接，申明来源，谢谢合作！"); }}document.body.oncopy=function(){warning();}&lt;/script&gt;</pre>]]></description></item><item><title>CSS技巧！鼠标经过图片抖动效果</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447785.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:31:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447785.html</guid><description><![CDATA[<p>把代码加到style.css(模板的主css里面)：</p>
<p>/**图片抖动**/</p>
<p>img:hover{-webkit-animation: tada 1s .2s ease both;-moz-animation: tada 1s .2s ease both;}</p>
<p>@-webkit-keyframes tada{0%{-webkit-transform:scale(1);}</p>
<p>10%, 20%{-webkit-transform:scale(0.9) rotate(-3deg);}</p>
<p>30%, 50%, 70%, 90%{-webkit-transform:scale(1.1) rotate(3deg);}</p>
<p>40%, 60%, 80%{-webkit-transform:scale(1.1) rotate(-3deg);}</p>
<p>100%{-webkit-transform:scale(1) rotate(0);}}</p>
<p>@-moz-keyframes tada{0%{-moz-transform:scale(1);}</p>
<p>10%, 20%{-moz-transform:scale(0.9) rotate(-3deg);}</p>
<p>30%, 50%, 70%, 90%{-moz-transform:scale(1.1) rotate(3deg);}</p>
<p>40%, 60%, 80%{-moz-transform:scale(1.1) rotate(-3deg);}</p>
<p>100%{-moz-transform:scale(1) rotate(0);}}</p>
<p>@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(400px) rotateY(90deg);</p>
<p>opacity:0;}</p>
<p>40%{-webkit-transform:perspective(400px) rotateY(-10deg);}</p>
<p>70%{-webkit-transform:perspective(400px) rotateY(10deg);}</p>
<p>100%{-webkit-transform:perspective(400px) rotateY(0deg);</p>
<p>opacity:1;}}</p>
<p>@-moz-keyframes flipInY{0%{-moz-transform:perspective(400px) rotateY(90deg);</p>
<p>opacity:0;}</p>
<p>40%{-moz-transform:perspective(400px) rotateY(-10deg);}</p>
<p>70%{-moz-transform:perspective(400px) rotateY(10deg);}</p>
<p>100%{-moz-transform:perspective(400px) rotateY(0deg);</p>
<p>opacity:1;}}</p>
<p>这边有的人和我说不喜欢全站的图片都这样抖动，只希望部分的就可以。 那么我给出一个方案，给需要抖动的img前面加个div 给div加class属性=dimg 然后css代码如下：</p>
<p>/**图片抖动**/</p>
<p>.dimg img:hover{-webkit-animation: tada 1s .2s ease both;-moz-animation: tada 1s .2s ease both;}</p>
<p>@-webkit-keyframes tada{0%{-webkit-transform:scale(1);}</p>
<p>10%, 20%{-webkit-transform:scale(0.9) rotate(-3deg);}</p>
<p>30%, 50%, 70%, 90%{-webkit-transform:scale(1.1) rotate(3deg);}</p>
<p>40%, 60%, 80%{-webkit-transform:scale(1.1) rotate(-3deg);}</p>
<p>100%{-webkit-transform:scale(1) rotate(0);}}</p>
<p>@-moz-keyframes tada{0%{-moz-transform:scale(1);}</p>
<p>10%, 20%{-moz-transform:scale(0.9) rotate(-3deg);}</p>
<p>30%, 50%, 70%, 90%{-moz-transform:scale(1.1) rotate(3deg);}</p>
<p>40%, 60%, 80%{-moz-transform:scale(1.1) rotate(-3deg);}</p>
<p>100%{-moz-transform:scale(1) rotate(0);}}</p>
<p>@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(400px) rotateY(90deg);</p>
<p>opacity:0;}</p>
<p>40%{-webkit-transform:perspective(400px) rotateY(-10deg);}</p>
<p>70%{-webkit-transform:perspective(400px) rotateY(10deg);}</p>
<p>100%{-webkit-transform:perspective(400px) rotateY(0deg);</p>
<p>opacity:1;}}</p>
<p>@-moz-keyframes flipInY{0%{-moz-transform:perspective(400px) rotateY(90deg);</p>
<p>opacity:0;}</p>
<p>40%{-moz-transform:perspective(400px) rotateY(-10deg);}</p>
<p>70%{-moz-transform:perspective(400px) rotateY(10deg);}</p>
<p>100%{-moz-transform:perspective(400px) rotateY(0deg);</p>
<p>opacity:1;}}</p>]]></description></item><item><title>Hello，World！</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447646.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:11:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447646.html</guid><description><![CDATA[<p>你好，世界</p>]]></description></item><item><title>Hello，World！</title><link>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447573.html</link><dc:creator>木子欢儿</dc:creator><author>木子欢儿</author><pubDate>Mon, 02 Sep 2019 09:01:00 GMT</pubDate><guid>http://www.cnblogs.com/HGNET/archive/2019/09/02/11447573.html</guid><description><![CDATA[<p>你好，世界</p>
<p>&mdash;&mdash;2019.02.02</p>
<p><img src="https://img2018.cnblogs.com/blog/1783030/201909/1783030-20190902165928575-1926070668.jpg" alt="" /></p>]]></description></item></channel></rss>